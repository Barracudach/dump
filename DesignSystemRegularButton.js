import * as t from "./cc.js";
import * as o from "./cc.js";
import * as r from "./DesignSystemButtonBase.js";
import * as s from "./DesignSystemButtonBase.js";
import * as i from "./DesignSystemButtonBase.js";
import * as a from "./DesignSystemButtonBase.js";
import * as n from "./DesignSystemButtonBase.js";
import * as l from "./DesignSystemButtonBase.js";
import * as h from "./ColorSystemType.js";
import * as C from "./ColorSystemMainBtnState.js";
import * as p from "./ColorSystemWeight.js";
import * as m from "./ColorSystemTypeOther.js";
import * as g from "./ColorsystemLobbyV2.js";

function main() {
    var d;
    o._RF.push({}, "110b8Tcm2ZPR51PMGU6uZgo", "DesignSystemRegularButton", void 0);
    const {
        ccclass: b,
        property: B,
        menu: u
    } = t;
    e("default", b(d = u("Design System/Design System Regular Button")(d = class extends r {
        setColorConfig() {
            let e = [, , , , ],
                o = [, , , , ],
                t = [, , , , ],
                r = [, , , , ],
                d = [, , , , ],
                b = [, , , , ],
                B = [, , , , ],
                u = [, , , , ],
                c = [, , , , ],
                y = [, , , , ];
            switch (this.colorConfig.clear(), this.btnStyle) {
                case s.primary:
                    this.inputType = l.bounceBtn, e[i.normal] = this.getColorComp(h.Gold, p.W600), e[i.hover] = this.getColorComp(h.MainBtn, C.PrimaryBgHover), e[i.pressed] = this.getColorComp(h.MainBtn, C.PrimaryBgPressed), e[i.disabled] = this.getColorComp(h.MainBtn, C.PrimaryBgDisableStart), r[i.normal] = this.getColorComp(h.Other, m.ButtonStylePrimary), r[i.hover] = r[i.normal], r[i.pressed] = r[i.normal], r[i.disabled] = this.getColorComp(h.Other, m.PrimaryBtnTextDisalbe), this.colorConfig.set(n.sprite1, e), this.colorConfig.set(n.label1, r);
                    break;
                case s.primaryPink:
                    this.inputType = l.bounceBtn, e[i.normal] = this.getColorComp(h.MainBtn, C.PrimaryPinkNormalBgStart, h.MainBtn, C.PrimaryPinkNormalBgEnd), e[i.hover] = this.getColorComp(h.MainBtn, C.PrimaryPinkHoverBg), e[i.pressed] = this.getColorComp(h.MainBtn, C.PrimaryPinkPressedBg), e[i.disabled] = this.getColorComp(h.MainBtn, C.PrimaryBgDisableStart, h.MainBtn, C.PrimaryBgDisableEnd), r[i.normal] = this.getColorComp(h.Other, m.ButtonStylePrimary), r[i.hover] = r[i.normal], r[i.pressed] = r[i.normal], r[i.disabled] = this.getColorComp(h.Other, m.PrimaryBtnTextDisalbe), this.colorConfig.set(n.sprite1, e), this.colorConfig.set(n.label1, r);
                    break;
                case s.secondary:
                    this.inputType = l.bounceBtn, e[i.normal] = this.getColorComp(h.MainBtn, C.SecondaryNormalBg), e[i.hover] = e[i.normal], e[i.pressed] = this.getColorComp(h.MainBtn, C.SecondaryPressedBorder), e[i.disabled] = e[i.normal], r[i.normal] = this.getColorComp(h.Other, m.ButtonStyleOverlayOutline), r[i.hover] = this.getColorComp(h.MainBtn, C.SecondaryHoverText), r[i.pressed] = r[i.hover], r[i.disabled] = this.getColorComp(h.Vulcano, p.W600), this.colorConfig.set(n.sprite1, e), this.colorConfig.set(n.label1, r);
                    break;
                case s.secondaryBorderOnly:
                    this.inputType = l.bounceBtn, r[i.normal] = this.getColorComp(h.Other, m.ButtonStyleOverlayOutline), r[i.hover] = this.getColorComp(h.MainBtn, C.SecondaryHoverText), r[i.pressed] = r[i.hover], r[i.disabled] = this.getColorComp(h.Vulcano, p.W600), e[i.normal] = this.getColorComp(h.MainBtn, C.SecondaryNormalBg), e[i.hover] = e[i.normal], e[i.pressed] = this.getColorComp(h.MainBtn, C.SecondaryPressedBorder), e[i.disabled] = e[i.normal], this.colorConfig.set(n.label1, r), this.colorConfig.set(n.sprite1, e);
                    break;
                case s.outline:
                    this.inputType = l.bounceBtn, e[i.normal] = this.getColorComp(h.MainBtn, C.OutlineNormalBg), e[i.hover] = this.getColorComp(h.MainBtn, C.OutlineHoverBg), e[i.pressed] = e[i.hover], e[i.disabled] = e[i.normal], r[i.normal] = this.getColorComp(h.Other, m.TextWhiteType_2), r[i.hover] = r[i.normal], r[i.pressed] = this.getColorComp(h.MainBtn, C.PressedBorder), r[i.disabled] = this.getColorComp(h.Other, m.TypoGraphySecond), B[i.normal] = this.getColorComp(h.MainBtn, C.OutlineNormalBorder), B[i.hover] = this.getColorComp(h.MainBtn, C.HoverBorder), B[i.pressed] = B[i.hover], B[i.disabled] = this.getColorComp(h.MainBtn, C.OutlineDisableBorder), this.colorConfig.set(n.sprite1, e), this.colorConfig.set(n.label1, r), this.colorConfig.set(n.border1, B);
                    break;
                case s.outlineBorderOnly:
                    this.inputType = l.bounceBtn, r[i.normal] = this.getColorComp(h.Other, m.TextWhiteType_2), r[i.hover] = r[i.normal], r[i.pressed] = this.getColorComp(h.MainBtn, C.PressedBorder), r[i.disabled] = this.getColorComp(h.Other, m.PlaceHolderDisableText), e[i.normal] = this.getColorComp(h.Other, m.TextWhiteType_2), e[i.hover] = r[i.hover], e[i.pressed] = r[i.pressed], e[i.disabled] = r[i.disabled], o[i.normal] = this.getColorComp(h.Other, m.TextWhiteType_2), o[i.hover] = this.getColorComp(h.MainBtn, C.OutlineHoverBg), o[i.pressed] = this.getColorComp(h.Other, m.TextWhiteType_2), o[i.disabled] = this.getColorComp(h.MainBtn, C.OutlineDisableBorder), this.colorConfig.set(n.label1, r), this.colorConfig.set(n.sprite1, e), this.colorConfig.set(n.sprite2, o);
                    break;
                case s.inviteLearnMoreBtn:
                    this.inputType = l.bounceBtn, e[i.normal] = this.getColorComp(h.Other, m.inviteLearnMoreNorm), e[i.hover] = this.getColorComp(h.Other, m.inviteLearnMoreHover), e[i.pressed] = this.getColorComp(h.Other, m.inviteLearnMorePress), e[i.disabled] = this.getColorComp(h.Other, m.inviteLearnMoreDisable), r[i.normal] = this.getColorComp(h.Other, m.ButtonStylePrimary), r[i.hover] = r[i.normal], r[i.pressed] = r[i.normal], r[i.disabled] = this.getColorComp(h.Other, m.PrimaryBtnTextDisalbe), this.colorConfig.set(n.sprite1, e), this.colorConfig.set(n.label1, r);
                    break;
                case s.pokerPagePanelBounceBtn:
                case s.pokerPagePanelToggle:
                case s.pokerPagePanelFilterBtn:
                    switch (this.btnStyle) {
                        case s.pokerPagePanelBounceBtn:
                            this.inputType = l.bounceBtn;
                            break;
                        case s.pokerPagePanelToggle:
                            this.inputType = l.toggle;
                            break;
                        case s.pokerPagePanelFilterBtn:
                            this.inputType = l.pokerPagePanelFilterBtn
                    }
                    e[i.normal] = this.getColorComp(h.Other, m.Icon), e[i.hover] = this.getColorComp(h.Other, m.pokerPagePanelToggleHover), e[i.pressed] = this.getColorComp(h.Other, m.MainBlue), e[i.disabled] = this.getColorComp(h.MainBtn, C.OutlineDisableBorder), u[i.normal] = this.getColorComp(h.Nero, p.W600), u[i.hover] = this.getColorComp(h.Other, m.PokerPagePanelFeatureHoverBg), u[i.pressed] = this.getColorComp(h.Other, m.PokerPagePanelFeaturePressedBg), u[i.disabled] = u[i.normal], c[i.normal] = this.getColorComp(h.Other, m.transparent), c[i.hover] = this.getColorComp(h.Other, m.smallButtonShadow), c[i.pressed] = c[i.hover], c[i.disabled] = c[i.normal], this.colorConfig.set(n.sprite1, e), this.colorConfig.set(n.border1Fill, u), this.colorConfig.set(n.border2Fill, c);
                    break;
                case s.pokerPagePanelInvertToggle:
                    this.inputType = l.toggle, e[i.normal] = this.getColorComp(h.Other, m.Icon), e[i.hover] = this.getColorComp(h.Other, m.ButtonNormalColor), e[i.pressed] = this.getColorComp(h.Nero, p.W600), e[i.disabled] = this.getColorComp(h.MainBtn, C.OutlineDisableBorder), u[i.normal] = this.getColorComp(h.Nero, p.W600), u[i.hover] = this.getColorComp(h.Other, m.PokerPagePanelFeatureHoverBg), u[i.pressed] = this.getColorComp(h.Other, m.MainBlue), u[i.disabled] = u[i.normal], this.colorConfig.set(n.sprite1, e), this.colorConfig.set(n.border1Fill, u);
                    break;
                case s.pokerPagePanelSatellite:
                    this.inputType = l.tabBtn, r[i.normal] = this.getColorComp(h.Other, m.ButtonNormalColor), r[i.hover] = this.getColorComp(h.Other, m.ButtonStyleText), r[i.pressed] = this.getColorComp(h.Other, m.MainBlue), r[i.disabled] = this.getColorComp(h.MainBtn, C.OutlineDisableBorder), u[i.normal] = this.getColorComp(h.Other, m.PokerPagePanelFeatureNormalBg), u[i.hover] = this.getColorComp(h.Other, m.PokerPagePanelFeatureHoverBg), u[i.pressed] = this.getColorComp(h.Other, m.PokerPagePanelFeaturePressedBg), u[i.disabled] = this.getColorComp(h.Nero, p.W600), c[i.normal] = this.getColorComp(h.Other, m.transparent), c[i.hover] = this.getColorComp(h.Other, m.smallButtonShadow), c[i.pressed] = c[i.normal], c[i.disabled] = c[i.normal], this.colorConfig.set(n.label1, r), this.colorConfig.set(n.border1Fill, u), this.colorConfig.set(n.border2Fill, c);
                    break;
                case s.openSeatsToggle:
                    this.inputType = l.toggle, e[i.normal] = this.getColorComp(h.Other, m.Icon), e[i.hover] = e[i.normal], e[i.pressed] = this.getColorComp(h.Other, m.LobbyGameFilterCheckBox), e[i.disabled] = e[i.normal], r[i.normal] = this.getColorComp(h.Other, m.Icon), r[i.hover] = this.getColorComp(h.Other, m.LobbyGameFilterText), r[i.pressed] = r[i.hover], r[i.disabled] = r[i.normal], u[i.normal] = this.getColorComp(h.Nero, p.W600), u[i.hover] = u[i.normal], u[i.pressed] = u[i.normal], u[i.disabled] = u[i.normal], c[i.normal] = this.getColorComp(h.Other, m.transparent), c[i.hover] = this.getColorComp(h.Other, m.smallButtonShadow), c[i.pressed] = c[i.hover], c[i.disabled] = c[i.normal], this.colorConfig.set(n.sprite1, e), this.colorConfig.set(n.label1, r), this.colorConfig.set(n.border1Fill, u), this.colorConfig.set(n.border2Fill, c);
                    break;
                case s.menuSideBar:
                    this.inputType = l.tabBtn, e[i.normal] = this.getColorComp(h.Other, m.transparent), e[i.hover] = this.getColorComp(h.Other, m.White), e[i.pressed] = e[i.hover], e[i.disabled] = e[i.normal], o[i.normal] = this.getColorComp(h.Other, m.transparent), o[i.hover] = o[i.normal], o[i.pressed] = this.getColorComp(h.Other, m.LeftPanelIconsGradiant1), o[i.disabled] = o[i.normal], t[i.normal] = this.getColorComp(h.Other, m.LeftPanelMainDeactive), t[i.hover] = this.getColorComp(h.Other, m.LeftPanelIconsGradiant1), t[i.pressed] = t[i.hover], t[i.disabled] = t[i.normal], r[i.normal] = this.getColorComp(h.Other, m.LeftPanelMainDeactive), r[i.hover] = r[i.normal], r[i.pressed] = this.getColorComp(h.Other, m.LeftPanelHighlightMain), r[i.disabled] = r[i.normal], this.colorConfig.set(n.sprite1, e), this.colorConfig.set(n.sprite2, o), this.colorConfig.set(n.sprite3, t), this.colorConfig.set(n.label1, r);
                    break;
                case s.gameTypePanelTab:
                    this.inputType = l.tabBtn, e[i.normal] = this.getColorComp(h.Other, m.transparent), e[i.hover] = this.getColorComp(h.Other, m.GameTypePanelTabHoverStart), e[i.pressed] = e[i.disabled] = e[i.mouseDown] = e[i.normal], o[i.normal] = this.getColorComp(h.Other, m.transparent), o[i.hover] = o[i.normal], o[i.pressed] = this.getColorComp(h.Gold, p.W600), o[i.disabled] = o[i.normal], e[i.mouseDown] = e[i.pressed], r[i.normal] = this.getColorComp(h.Other, m.TabNormalLabel), r[i.hover] = r[i.normal], r[i.pressed] = this.getColorComp(h.Other, m.MainBlue), r[i.disabled] = r[i.normal], t[i.normal] = r[i.normal], t[i.hover] = r[i.hover], t[i.pressed] = r[i.pressed], t[i.disabled] = r[i.disabled], this.colorConfig.set(n.sprite1, e), this.colorConfig.set(n.sprite2, o), this.colorConfig.set(n.sprite3, t), this.colorConfig.set(n.label1, r);
                    break;
                case s.lobbyV2GameTypePanelTab:
                    this.inputType = l.tabBtn, this.themeColorNodeMap.get(n.sprite2).gradientDir = a.leftToRight, o[i.normal] = this.getColorComp(h.Other, m.transparent), o[i.hover] = o[i.normal], o[i.pressed] = this.getColorComp(h.Gold, p.W600, h.Gold, p.W800), o[i.disabled] = o[i.normal], e[i.mouseDown] = e[i.pressed], r[i.normal] = this.getColorComp(h.Other, m.LobbyV2PokerTabButton_Normal), r[i.hover] = r[i.normal], r[i.pressed] = this.getColorComp(h.Other, m.LobbyV2PokerTabButton_Pressed), r[i.disabled] = r[i.normal], t[i.normal] = r[i.normal], t[i.hover] = r[i.hover], t[i.pressed] = r[i.pressed], t[i.disabled] = r[i.disabled], this.colorConfig.set(n.sprite2, o), this.colorConfig.set(n.sprite3, t), this.colorConfig.set(n.label1, r);
                    break;
                case s.lobbyV2MttTabBtn:
                    this.inputType = l.tabBtn, e[i.normal] = this.getColorComp(h.Other, m.transparent), e[i.hover] = e[i.normal], e[i.pressed] = this.getColorComp(h.Other, m.LobbyV2MttTabBtnPressed), e[i.disabled] = e[i.normal], e[i.mouseDown] = e[i.hover], r[i.normal] = this.getColorComp(h.Other, m.LobbyV2MttTabBtnTextNormal), r[i.hover] = r[i.normal], r[i.pressed] = this.getColorComp(h.Other, m.LobbyV2MttTabBtnTextPressed), r[i.disabled] = r[i.normal], this.colorConfig.set(n.sprite1, e), this.colorConfig.set(n.label1, r);
                    break;
                case s.lobbyV2TabBtnCollapse:
                    this.inputType = l.collapseBtn, e[i.normal] = this.getColorComp(h.Other, m.LobbyV2ButtonCollapseNormal), e[i.hover] = this.getColorComp(h.Other, m.LobbyV2ButtonCollapsePressed), e[i.pressed] = e[i.hover], e[i.disabled] = e[i.normal], e[i.mouseDown] = e[i.hover], r[i.normal] = this.getColorComp(h.Other, m.LobbyV2ButtonTextCollapseNormal), r[i.hover] = this.getColorComp(h.Other, m.LobbyV2ButtonTextCollapsePressed), r[i.pressed] = r[i.hover], r[i.disabled] = r[i.normal], r[i.mouseDown] = r[i.hover], this.colorConfig.set(n.sprite1, e), this.colorConfig.set(n.label1, r);
                    break;
                case s.lobbyV2TabBtnCollapseDesktop:
                    this.inputType = l.collapseBtn, e[i.normal] = this.getColorComp(h.LobbyV2, g.MttDetailLandscape_surface_arrow), e[i.hover] = this.getColorComp(h.Other, m.LobbyV2ButtonCollapsePressed), e[i.pressed] = e[i.hover], e[i.disabled] = e[i.normal], e[i.mouseDown] = e[i.hover], r[i.normal] = this.getColorComp(h.Other, m.LobbyV2ButtonTextCollapseNormal), r[i.hover] = this.getColorComp(h.Other, m.LobbyV2ButtonTextCollapsePressed), r[i.pressed] = r[i.hover], r[i.disabled] = r[i.normal], r[i.mouseDown] = r[i.hover], this.colorConfig.set(n.sprite1, e), this.colorConfig.set(n.label1, r);
                    break;
                case s.lobbyV2CashHoverItem:
                    this.inputType = l.bounceBtn, e[i.normal] = this.getColorComp(h.LobbyV2, g.ListItem_SurfaceTertiary), e[i.hover] = this.getColorComp(h.LobbyV2, g.ListItem_BorderStrong), e[i.pressed] = e[i.hover], e[i.disabled] = e[i.normal], e[i.mouseDown] = e[i.hover], o[i.normal] = this.getColorComp(h.Other, m.CashNextButtonBg_Normal), o[i.hover] = this.getColorComp(h.Other, m.CashNextButtonBg_Hover), o[i.pressed] = o[i.hover], o[i.disabled] = o[i.normal], o[i.mouseDown] = o[i.hover], t[i.normal] = this.getColorComp(h.Other, m.CashNextButtonIcon_Normal), t[i.hover] = this.getColorComp(h.Other, m.CashNextButtonIcon_Hover), t[i.pressed] = t[i.hover], t[i.disabled] = t[i.normal], t[i.mouseDown] = t[i.hover], this.colorConfig.set(n.sprite1, e), this.colorConfig.set(n.sprite2, o), this.colorConfig.set(n.sprite3, t);
                    break;
                case s.lobbyV2SubfilterTab:
                    this.inputType = l.bounceBtn, r[i.normal] = this.getColorComp(h.Other, m.LobbyV2PokerSubfilterTabButtonText_Normal), r[i.hover] = r[i.normal], r[i.pressed] = this.getColorComp(h.Other, m.LobbyV2PokerSubfilterTabButtonText_Pressed), r[i.disabled] = this.getColorComp(h.MainBtn, C.OutlineDisableBorder), u[i.normal] = this.getColorComp(h.Other, m.LobbyV2PokerSubfilterTabButtonBorderFill_Normal), u[i.hover] = this.getColorComp(h.Other, m.LobbyV2PokerSubfilterTabButtonBorderFill_Hover), u[i.pressed] = this.getColorComp(h.Other, m.LobbyV2PokerSubfilterTabButtonBorderFill_Pressed), u[i.disabled] = this.getColorComp(h.Nero, p.W600), B[i.normal] = this.getColorComp(h.Other, m.LobbyV2PokerSubfilterTabButtonBorder_Normal), B[i.hover] = this.getColorComp(h.Other, m.LobbyV2PokerSubfilterTabButtonBorderFill_Hover), B[i.pressed] = this.getColorComp(h.Other, m.LobbyV2PokerSubfilterTabButtonBorder_Pressed), B[i.disabled] = B[i.normal], d[i.normal] = this.getColorComp(h.Other, m.LobbyV2PokerSubfilterAmountText_Normal), d[i.hover] = d[i.normal], d[i.pressed] = this.getColorComp(h.Other, m.LobbyV2PokerSubfilterAmountText_Pressed), d[i.disabled] = this.getColorComp(h.MainBtn, C.OutlineDisableBorder), c[i.normal] = this.getColorComp(h.Other, m.LobbyV2PokerSubfilterAmountBorderFill_Normal), c[i.hover] = c[i.normal], c[i.pressed] = this.getColorComp(h.Other, m.LobbyV2PokerSubfilterAmountBorderFill_Selected), c[i.disabled] = this.getColorComp(h.Nero, p.W600), b[i.normal] = this.getColorComp(h.Other, m.LobbyV2PokerSubfilterAmountZeroText_Normal), b[i.hover] = b[i.normal], b[i.pressed] = d[i.pressed], b[i.disabled] = d[i.disabled], y[i.normal] = this.getColorComp(h.Other, m.LobbyV2PokerSubfilterAmountZeroBorderFill_Normal), y[i.hover] = y[i.normal], y[i.pressed] = c[i.pressed], y[i.disabled] = c[i.disabled], this.colorConfig.set(n.label1, r), this.colorConfig.set(n.border1Fill, u), this.colorConfig.set(n.border1, B), this.colorConfig.set(n.label2, d), this.colorConfig.set(n.border2Fill, c), this.colorConfig.set(n.label3, b), this.colorConfig.set(n.border3Fill, y);
                    break;
                case s.lobbyV2SubfilterTab_Desktop:
                    this.inputType = l.bounceBtn, r[i.normal] = this.getColorComp(h.Other, m.LobbyV2PokerSubfilterTabButtonText_Normal), r[i.hover] = r[i.normal], r[i.pressed] = this.getColorComp(h.Other, m.LobbyV2PokerSubfilterTabButtonText_Pressed), r[i.disabled] = this.getColorComp(h.MainBtn, C.OutlineDisableBorder), u[i.normal] = this.getColorComp(h.Other, m.LobbyV2PokerSubfilterTabButtonBorderFill_Normal), u[i.hover] = this.getColorComp(h.Other, m.LobbyV2PokerSubfilterTabButtonBorderFill_Hover), u[i.pressed] = this.getColorComp(h.Other, m.LobbyV2PokerSubfilterTabButtonBorderFill_Pressed), u[i.disabled] = this.getColorComp(h.Nero, p.W600), d[i.normal] = this.getColorComp(h.Other, m.LobbyV2PokerSubfilterAmountText_Normal), d[i.hover] = d[i.normal], d[i.pressed] = this.getColorComp(h.Other, m.LobbyV2PokerSubfilterAmountText_Pressed), d[i.disabled] = this.getColorComp(h.MainBtn, C.OutlineDisableBorder), c[i.normal] = this.getColorComp(h.Other, m.LobbyV2PokerSubfilterAmountBorderFill_Normal), c[i.hover] = c[i.normal], c[i.pressed] = this.getColorComp(h.Other, m.LobbyV2PokerSubfilterAmountBorderFill_Selected), c[i.disabled] = this.getColorComp(h.Nero, p.W600), b[i.normal] = this.getColorComp(h.Other, m.LobbyV2PokerSubfilterAmountZeroText_Normal), b[i.hover] = b[i.normal], b[i.pressed] = d[i.pressed], b[i.disabled] = d[i.disabled], y[i.normal] = this.getColorComp(h.Other, m.LobbyV2PokerSubfilterAmountZeroBorderFill_Normal), y[i.hover] = y[i.normal], y[i.pressed] = c[i.pressed], y[i.disabled] = c[i.disabled], this.colorConfig.set(n.label1, r), this.colorConfig.set(n.sprite1, u), this.colorConfig.set(n.label2, d), this.colorConfig.set(n.sprite2, c), this.colorConfig.set(n.label3, b), this.colorConfig.set(n.sprite3, y);
                    break;
                case s.lobbyV2SubfilterCurrency:
                    this.inputType = l.bounceBtn, e[i.normal] = this.getColorComp(h.Other, m.CashOpenSeatBgFill_Normal), e[i.hover] = this.getColorComp(h.Other, m.CashOpenSeatBgFill_Hover), e[i.pressed] = this.getColorComp(h.Other, m.LobbyV2PokerSubfilterCurrencyBg_Selected), e[i.disabled] = this.getColorComp(h.Other, m.CashOpenSeatBgFill_Normal), o[i.normal] = this.getColorComp(h.Other, m.CashOpenSeatBgBorder_Normal), o[i.hover] = this.getColorComp(h.Other, m.CashOpenSeatBgFill_Hover), o[i.pressed] = this.getColorComp(h.Other, m.LobbyV2PokerSubfilterCurrencyBg_Selected), o[i.disabled] = o[i.normal], t[i.normal] = this.getColorComp(h.Other, m.LobbyV2PokerSubfilterCurrencyIcon_Normal), t[i.hover] = this.getColorComp(h.Other, m.LobbyV2PokerSubfilterCurrencyIcon_Normal), t[i.pressed] = this.getColorComp(h.Other, m.LobbyV2PokerSubfilterCurrencyIcon_Selected), t[i.disabled] = this.getColorComp(h.MainBtn, C.OutlineDisableBorder), this.colorConfig.set(n.sprite1, e), this.colorConfig.set(n.sprite2, o), this.colorConfig.set(n.sprite3, t);
                    break;
                case s.lobbyV2SubfilterOpenSeat:
                    this.inputType = l.bounceBtn, e[i.normal] = this.getColorComp(h.Other, m.CashOpenSeatBgFill_Normal), e[i.hover] = this.getColorComp(h.Other, m.CashOpenSeatBgFill_Hover), e[i.pressed] = this.getColorComp(h.Other, m.CashOpenSeatBgFill_Normal), e[i.disabled] = this.getColorComp(h.Other, m.CashOpenSeatBgFill_Normal), o[i.normal] = this.getColorComp(h.Other, m.CashOpenSeatBgBorder_Normal), o[i.hover] = this.getColorComp(h.Other, m.CashOpenSeatBgFill_Hover), o[i.pressed] = this.getColorComp(h.Other, m.CashOpenSeatBgBorder_Normal), o[i.disabled] = o[i.normal], u[i.normal] = this.getColorComp(h.Other, m.LobbyV2PokerSubfilterOpenSeatTickFill_Normal), u[i.hover] = u[i.normal], u[i.pressed] = this.getColorComp(h.Other, m.LobbyV2PokerSubfilterOpenSeatTickFill_Selected), u[i.disabled] = this.getColorComp(h.Nero, p.W600), B[i.normal] = this.getColorComp(h.Other, m.LobbyV2PokerSubfilterOpenSeatTickBorder_Normal), B[i.hover] = B[i.normal], B[i.pressed] = this.getColorComp(h.Other, m.LobbyV2PokerSubfilterOpenSeatTickBorder_Selected), B[i.disabled] = B[i.normal], t[i.normal] = this.getColorComp(h.Other, m.LobbyV2PokerSubfilterOpenSeatTickIcon_Normal), t[i.hover] = this.getColorComp(h.Other, m.LobbyV2PokerSubfilterOpenSeatTickIcon_Normal), t[i.pressed] = this.getColorComp(h.Other, m.LobbyV2PokerSubfilterOpenSeatTickIcon_Selected), t[i.disabled] = t[i.normal], this.colorConfig.set(n.sprite1, e), this.colorConfig.set(n.sprite2, o), this.colorConfig.set(n.border1Fill, u), this.colorConfig.set(n.border1, B), this.colorConfig.set(n.sprite3, t);
                    break;
                case s.lobbyV2CashRoomBack:
                    this.inputType = l.bounceBtn, e[i.normal] = this.getColorComp(h.Other, m.LobbyV2PokerTabPanelBg), e[i.hover] = this.getColorComp(h.Other, m.LobbyV2PokerSubfilterTabButtonBorderFill_Hover), e[i.pressed] = this.getColorComp(h.Other, m.LobbyV2PokerSubfilterTabButtonBorderFill_Hover), e[i.disabled] = this.getColorComp(h.Other, m.LobbyV2PokerSubfilterTabButtonBorderFill_Hover), this.colorConfig.set(n.sprite1, e);
                    break;
                case s.lobbyAddGold:
                    this.inputType = l.bounceBtn, e[i.normal] = this.getColorComp(h.Gold, p.W600), e[i.hover] = this.getColorComp(h.MainBtn, C.PrimaryBgHover), e[i.pressed] = e[i.hover], e[i.disabled] = this.getColorComp(h.Other, m.Icon), this.colorConfig.set(n.sprite1, e);
                    break;
                case s.lobbyOnlyText:
                    this.inputType = l.bounceBtn, r[i.normal] = this.getColorComp(h.Other, m.Icon), r[i.hover] = this.getColorComp(h.Other, m.TypoGraphyMain), r[i.pressed] = r[i.hover], r[i.disabled] = r[i.normal], this.colorConfig.set(n.label1, r);
                    break;
                case s.GameDetailRightPartSeat:
                    this.inputType = l.toggle, e[i.normal] = this.getColorComp(h.Other, m.LobbyGameTabsBackground), e[i.hover] = this.getColorComp(h.Other, m.LightBG_Light), e[i.pressed] = this.getColorComp(h.Other, m.MainBlue), e[i.disabled] = this.getColorComp(h.MainBtn, C.SecondaryNormalBg), o[i.normal] = this.getColorComp(h.Other, m.MainBlue), o[i.hover] = o[i.normal], o[i.pressed] = this.getColorComp(h.Other, m.LobbyGameTabsBackground), o[i.disabled] = this.getColorComp(h.Vulcano, p.W600), this.colorConfig.set(n.sprite1, e), this.colorConfig.set(n.sprite2, o);
                    break;
                case s.lobbyBell:
                    this.inputType = l.bounceBtn, e[i.normal] = this.getColorComp(h.Other, m.Icon), e[i.hover] = this.getColorComp(h.Other, m.TypoGraphySecond), e[i.pressed] = this.getColorComp(h.Other, m.lobbyBellPressed), e[i.disabled] = this.getColorComp(h.MainBtn, C.OutlineDisableBorder), this.colorConfig.set(n.sprite1, e);
                    break;
                case s.helpBtn:
                    this.inputType = l.bounceBtn, e[i.normal] = this.getColorComp(h.Other, m.helpButtonNormal), e[i.hover] = this.getColorComp(h.Other, m.helpButtonHover), e[i.pressed] = this.getColorComp(h.Other, m.helpButtonPressed), e[i.disabled] = this.getColorComp(h.MainBtn, C.OutlineDisableBorder), this.colorConfig.set(n.sprite1, e);
                    break;
                case s.menuSideBarMobile:
                    this.inputType = l.tabBtn, e[i.normal] = this.getColorComp(h.Other, m.Icon), e[i.hover] = this.getColorComp(h.Gold, p.W600, h.Gold, p.W800), e[i.pressed] = e[i.hover], e[i.disabled] = e[i.normal], r[i.normal] = this.getColorComp(h.Other, m.TypoGraphySecond), r[i.hover] = this.getColorComp(h.Other, m.MainBlue), r[i.pressed] = r[i.hover], r[i.disabled] = r[i.normal], this.colorConfig.set(n.sprite1, e), this.colorConfig.set(n.label1, r);
                    break;
                case s.checkbox:
                    this.inputType = l.toggle, e[i.normal] = this.getColorComp(h.Other, m.Border), e[i.hover] = this.getColorComp(h.MainBtn, C.HoverBorder), e[i.pressed] = e[i.hover], e[i.disabled] = e[i.normal], this.colorConfig.set(n.sprite1, e);
                    break;
                case s.text:
                    this.inputType = l.bounceBtn, u[i.normal] = this.getColorComp(h.MainBtn, C.SecondaryNormalBg), u[i.hover] = u[i.pressed] = u[i.normal], u[i.disabled] = this.getColorComp(h.Nero, p.W800), e[i.normal] = this.getColorComp(h.Gold, p.W600), e[i.hover] = this.getColorComp(h.MainBtn, C.PrimaryBgHover), e[i.pressed] = this.getColorComp(h.MainBtn, C.PrimaryBgPressed), e[i.disabled] = this.getColorComp(h.Other, m.Icon), o[i.normal] = this.getColorComp(h.Other, m.Icon), o[i.hover] = this.getColorComp(h.Other, m.TypoGraphyMain), o[i.pressed] = o[i.hover], o[i.disabled] = o[i.normal], r[i.normal] = this.getColorComp(h.Other, m.TypoGraphySecond), r[i.hover] = this.getColorComp(h.Other, m.TypoGraphyMain), r[i.pressed] = r[i.hover], r[i.disabled] = r[i.normal], this.colorConfig.set(n.border1Fill, u), this.colorConfig.set(n.sprite1, e), this.colorConfig.set(n.sprite2, o), this.colorConfig.set(n.label1, r);
                    break;
                case s.getCode:
                    this.inputType = l.bounceBtn, e[i.normal] = this.getColorComp(h.Other, m.MainAccentColorGold_3), e[i.hover] = this.getColorComp(h.MainBtn, C.GetCodeHoverBg), e[i.pressed] = this.getColorComp(h.MainBtn, C.GetCodePressedBg), e[i.disabled] = this.getColorComp(h.MainBtn, C.PrimaryBgDisableStart), r[i.normal] = this.getColorComp(h.Other, m.Mirage), r[i.hover] = r[i.pressed] = r[i.normal], r[i.disabled] = this.getColorComp(h.Other, m.PrimaryBtnTextDisalbe), this.colorConfig.set(n.sprite1, e), this.colorConfig.set(n.label1, r);
                    break;
                case s.selfViewSideBarTab:
                    this.inputType = l.tabBtn, e[i.normal] = this.getColorComp(h.Other, m.transparent), e[i.hover] = this.getColorComp(h.Other, m.White), e[i.pressed] = this.getColorComp(h.Other, m.White), e[i.mouseDown] = e[i.pressed], e[i.disabled] = e[i.normal], o[i.normal] = this.getColorComp(h.Other, m.transparent), o[i.hover] = o[i.normal], o[i.pressed] = this.getColorComp(h.Gold, p.W600), o[i.mouseDown] = o[i.pressed], o[i.disabled] = o[i.normal], t[i.normal] = this.getColorComp(h.Other, m.Icon), t[i.hover] = this.getColorComp(h.Gold, p.W600), t[i.pressed] = t[i.hover], t[i.mouseDown] = t[i.pressed], t[i.disabled] = this.getColorComp(h.Other, m.SelfViewLeftTabIconDisabled), r[i.normal] = this.getColorComp(h.Other, m.SelfViewLeftTabTextNormal), r[i.hover] = r[i.normal], r[i.pressed] = r[i.normal], r[i.mouseDown] = r[i.normal], r[i.disabled] = this.getColorComp(h.Other, m.SelfViewLeftTabIconDisabled), this.colorConfig.set(n.sprite1, e), this.colorConfig.set(n.sprite2, o), this.colorConfig.set(n.sprite3, t), this.colorConfig.set(n.label1, r);
                    break;
                case s.genderMaleButtonText:
                    this.inputType = l.tabBtn, r[i.normal] = this.getColorComp(h.Other, m.RoleInfoSetGenderTextNormal), r[i.hover] = this.getColorComp(h.Other, m.RoleInfoSetGenderMaleTextHover), r[i.pressed] = r[i.hover], r[i.disabled] = r[i.normal], this.colorConfig.set(n.label1, r);
                    break;
                case s.genderFemaleButtonText:
                    this.inputType = l.tabBtn, r[i.normal] = this.getColorComp(h.Other, m.RoleInfoSetGenderTextNormal), r[i.hover] = this.getColorComp(h.Other, m.RoleInfoSetGenderFemaleTextHover), r[i.pressed] = r[i.hover], r[i.disabled] = r[i.normal], this.colorConfig.set(n.label1, r);
                    break;
                case s.controlSwitch:
                    this.inputType = l.toggle, u[i.normal] = this.getColorComp(h.Other, m.ControlSwitchNormalBg), u[i.hover] = u[i.normal], u[i.pressed] = this.getColorComp(h.Other, m.ControlSwitchActiveBg), u[i.disabled] = u[i.normal], c[i.normal] = this.getColorComp(h.Other, m.smallButtonShadow), c[i.hover] = c[i.normal], c[i.pressed] = c[i.normal], c[i.disabled] = c[i.normal], y[i.normal] = this.getColorComp(h.Other, m.ControlSwitchBallNormal), y[i.hover] = this.getColorComp(h.Other, m.ControSwitchBallHover), y[i.pressed] = this.getColorComp(h.Other, m.ControlSwitchBallNormal), y[i.disabled] = y[i.normal], this.colorConfig.set(n.border1Fill, u), this.colorConfig.set(n.border2Fill, c), this.colorConfig.set(n.border3Fill, y);
                    break;
                case s.pokerGroupFilterControlSwitchV2:
                    this.inputType = l.toggle, u[i.normal] = this.getColorComp(h.Other, m.MttGroupFilterToggleInactiveBtnBg), u[i.hover] = u[i.normal], u[i.pressed] = this.getColorComp(h.Other, m.MttGroupFilterToggleActiveBtnBg), u[i.disabled] = u[i.normal], y[i.normal] = this.getColorComp(h.Other, m.White), y[i.hover] = this.getColorComp(h.Other, m.ControSwitchBallHover), y[i.pressed] = this.getColorComp(h.Other, m.CheckMarkIcon), y[i.disabled] = y[i.normal], this.colorConfig.set(n.border1Fill, u), this.colorConfig.set(n.border3Fill, y);
                    break;
                case s.controlSwitchInPopUp:
                    this.inputType = l.toggle, u[i.normal] = this.getColorComp(h.Other, m.ControlSwitchNormalBgPopup), u[i.hover] = u[i.normal], u[i.pressed] = this.getColorComp(h.Other, m.ControlSwitchActiveBg), u[i.disabled] = u[i.normal], c[i.normal] = this.getColorComp(h.Other, m.smallButtonShadow), c[i.hover] = c[i.normal], c[i.pressed] = c[i.normal], c[i.disabled] = c[i.normal], y[i.normal] = this.getColorComp(h.Other, m.ControlSwitchBallNormal), y[i.hover] = this.getColorComp(h.Other, m.ControSwitchBallHover), y[i.pressed] = this.getColorComp(h.Other, m.ControlSwitchBallNormal), y[i.disabled] = y[i.normal], this.colorConfig.set(n.border1Fill, u), this.colorConfig.set(n.border2Fill, c), this.colorConfig.set(n.border3Fill, y);
                    break;
                case s.filterBtn:
                    this.inputType = l.toggle, B[i.normal] = this.getColorComp(h.Other, m.FilterNormalBorder), B[i.hover] = this.getColorComp(h.MainBtn, C.HoverBorder), B[i.pressed] = this.getColorComp(h.MainBtn, C.HoverBorder), B[i.disabled] = this.getColorComp(h.Other, m.MainPanel), e[i.normal] = this.getColorComp(h.Other, m.transparent), e[i.hover] = e[i.normal], e[i.pressed] = this.getColorComp(h.MainBtn, C.PressedStartBg, h.MainBtn, C.PressedEndBg), e[i.disabled] = this.getColorComp(h.Other, m.ButtonStylePrimary), r[i.normal] = this.getColorComp(h.Other, m.ButtonStyleText), r[i.hover] = this.getColorComp(h.MainBtn, C.HoverBorder), r[i.pressed] = this.getColorComp(h.Nero, p.W600), r[i.disabled] = this.getColorComp(h.Other, m.FilterDisableText), this.colorConfig.set(n.border1, B), this.colorConfig.set(n.sprite1, e), this.colorConfig.set(n.label1, r);
                    break;
                case s.pokerGroupFilterBtnV2:
                    this.inputType = l.toggle, B[i.normal] = this.getColorComp(h.Other, m.MttGroupFilterBtnBorderNormal), B[i.hover] = B[i.normal], B[i.pressed] = this.getColorComp(h.Other, m.MttGroupFilterBtnBorderSelected), B[i.disabled] = this.getColorComp(h.Other, m.MainPanel), e[i.normal] = this.getColorComp(h.Other, m.MttGroupFilterBtnBgNormal), e[i.hover] = e[i.normal], e[i.pressed] = this.getColorComp(h.Other, m.MttGroupFilterBtnBgSelected), e[i.disabled] = this.getColorComp(h.Other, m.ButtonStylePrimary), r[i.normal] = this.getColorComp(h.Other, m.MttGroupFilterTextPrimary), r[i.hover] = r[i.normal], r[i.pressed] = this.getColorComp(h.Other, m.MttGroupFilterTextPrimarySelected), r[i.disabled] = this.getColorComp(h.Other, m.FilterDisableText), this.colorConfig.set(n.border1, B), this.colorConfig.set(n.sprite1, e), this.colorConfig.set(n.label1, r);
                    break;
                case s.pokerGroupFilterBuyInBtnV2:
                    this.inputType = l.toggle, B[i.normal] = this.getColorComp(h.Other, m.MttGroupFilterBtnBorderNormal), B[i.hover] = B[i.normal], B[i.pressed] = this.getColorComp(h.Other, m.MttGroupFilterBtnBorderSelected), B[i.disabled] = this.getColorComp(h.Other, m.MainPanel), e[i.normal] = this.getColorComp(h.Other, m.MttGroupFilterBtnBgNormal), e[i.hover] = e[i.normal], e[i.pressed] = this.getColorComp(h.Other, m.MttGroupFilterBtnBgSelected), e[i.disabled] = this.getColorComp(h.Other, m.ButtonStylePrimary), r[i.normal] = this.getColorComp(h.Other, m.MttGroupFilterTextPrimary), r[i.hover] = r[i.normal], r[i.pressed] = this.getColorComp(h.Other, m.MttGroupFilterTextPrimarySelected), r[i.disabled] = this.getColorComp(h.Other, m.FilterDisableText), d[i.normal] = this.getColorComp(h.Other, m.MttGroupFilterTextSecondary), d[i.hover] = d[i.normal], d[i.pressed] = this.getColorComp(h.Other, m.MttGroupFilterTextSecondarySelected), d[i.disabled] = this.getColorComp(h.Other, m.MttGroupFilterTextSecondary), this.colorConfig.set(n.border1, B), this.colorConfig.set(n.sprite1, e), this.colorConfig.set(n.label1, r), this.colorConfig.set(n.label2, d);
                    break;
                case s.lobbyV2PokerGroupFilterBtnV2_Desktop:
                    this.inputType = l.toggle, B[i.normal] = this.getColorComp(h.Other, m.MttGroupFilterBtnBorderNormal), B[i.hover] = B[i.normal], B[i.pressed] = this.getColorComp(h.Other, m.MttGroupFilterBtnBorderSelected), B[i.disabled] = this.getColorComp(h.Other, m.MainPanel), e[i.normal] = this.getColorComp(h.Other, m.MttGroupFilterBtnBgNormal), e[i.hover] = e[i.normal], e[i.pressed] = this.getColorComp(h.Other, m.MttGroupFilterBtnBgSelected), e[i.disabled] = this.getColorComp(h.Other, m.ButtonStylePrimary), r[i.normal] = this.getColorComp(h.Other, m.MttGroupFilterTextPrimary), r[i.hover] = r[i.normal], r[i.pressed] = this.getColorComp(h.Other, m.MttGroupFilterTextPrimarySelected), r[i.disabled] = this.getColorComp(h.Other, m.FilterDisableText), this.colorConfig.set(n.sprite1, B), this.colorConfig.set(n.sprite2, e), this.colorConfig.set(n.label1, r);
                    break;
                case s.lobbyV2SubfilterRefresh_Desktop:
                    this.inputType = l.bounceBtn, e[i.normal] = this.getColorComp(h.Other, m.LobbyV2SubfilterBtnBgNormal), e[i.hover] = this.getColorComp(h.Other, m.LobbyV2SubfilterBtnBgHover), e[i.pressed] = this.getColorComp(h.Other, m.LobbyV2SubfilterBtnBgPress), e[i.disabled] = e[i.normal], o[i.normal] = this.getColorComp(h.Other, m.TypoGraphySecond), o[i.hover] = o[i.normal], o[i.pressed] = this.getColorComp(h.Other, m.MainBlue), o[i.disabled] = o[i.normal], t[i.normal] = this.getColorComp(h.Other, m.transparent), t[i.hover] = t[i.normal], t[i.pressed] = this.getColorComp(h.Other, m.MainBlue), t[i.disabled] = t[i.normal], this.colorConfig.set(n.sprite1, e), this.colorConfig.set(n.sprite2, o), this.colorConfig.set(n.sprite3, t);
                    break;
                case s.lobbyV2SubfilterCustomFilter_Desktop:
                    this.inputType = l.toggle, e[i.normal] = this.getColorComp(h.Other, m.LobbyV2SubfilterBtnBgNormal), e[i.hover] = this.getColorComp(h.Other, m.LobbyV2SubfilterBtnBgHover), e[i.pressed] = this.getColorComp(h.Other, m.LobbyV2SubfilterBtnBgPress), e[i.disabled] = e[i.normal], o[i.normal] = this.getColorComp(h.Other, m.TypoGraphySecond), o[i.hover] = o[i.normal], o[i.pressed] = this.getColorComp(h.Other, m.MainBlue), o[i.disabled] = o[i.normal], t[i.normal] = this.getColorComp(h.Other, m.transparent), t[i.hover] = t[i.normal], t[i.pressed] = this.getColorComp(h.Other, m.MainBlue), t[i.disabled] = t[i.normal], this.colorConfig.set(n.sprite1, e), this.colorConfig.set(n.sprite2, o), this.colorConfig.set(n.sprite3, t);
                    break;
                case s.lobbyV2SubfilterTextButton_Desktop:
                    this.inputType = l.toggle, e[i.normal] = this.getColorComp(h.MainBtn, C.integrateMttFilterButton_BG_normal_Desktop), e[i.hover] = this.getColorComp(h.MainBtn, C.integrateMttFilterButton_BG_pressed), e[i.pressed] = this.getColorComp(h.MainBtn, C.integrateMttFilterButton_BG_pressed), e[i.disabled] = e[i.normal], o[i.normal] = this.getColorComp(h.Other, m.transparent), o[i.hover] = o[i.normal], o[i.pressed] = this.getColorComp(h.Other, m.MainBlue), o[i.disabled] = o[i.normal], r[i.normal] = this.getColorComp(h.Other, m.TypoGraphySecond), r[i.hover] = this.getColorComp(h.Other, m.MainBlue), r[i.pressed] = this.getColorComp(h.Other, m.MainBlue), r[i.disabled] = this.getColorComp(h.Other, m.FilterDisableText), d[i.normal] = this.getColorComp(h.Other, m.TypoGraphySecond), d[i.hover] = this.getColorComp(h.Other, m.MainBlue), d[i.pressed] = this.getColorComp(h.Other, m.MainBlue), d[i.disabled] = this.getColorComp(h.Other, m.FilterDisableText), this.colorConfig.set(n.sprite1, e), this.colorConfig.set(n.sprite2, o), this.colorConfig.set(n.label1, r), this.colorConfig.set(n.label2, d);
                    break;
                case s.lobbyV2SubfilterArrowButton_Desktop:
                    this.inputType = l.bounceBtn, e[i.normal] = this.getColorComp(h.Other, m.SurfaceTertiary), e[i.hover] = this.getColorComp(h.Other, m.SurfaceElevation), e[i.pressed] = e[i.normal], e[i.disabled] = e[i.normal], o[i.normal] = this.getColorComp(h.Other, m.TextPrimary), o[i.hover] = o[i.normal], o[i.pressed] = this.getColorComp(h.Other, m.MainBlue), o[i.disabled] = this.getColorComp(h.Other, m.TextTertiary), this.colorConfig.set(n.sprite1, e), this.colorConfig.set(n.sprite2, o);
                    break;
                case s.lobbyV2CustomFilterTextButton_Desktop:
                    this.inputType = l.toggle, e[i.normal] = this.getColorComp(h.Other, m.SurfaceTertiary), e[i.hover] = this.getColorComp(h.Other, m.LobbyV2SubfilterBtnBgPress), e[i.pressed] = this.getColorComp(h.Other, m.LobbyV2SubfilterBtnBgPress), e[i.disabled] = e[i.normal], o[i.normal] = this.getColorComp(h.Other, m.transparent), o[i.hover] = o[i.normal], o[i.pressed] = this.getColorComp(h.Other, m.LobbyV2CustomfilterBtnBorderPress), o[i.disabled] = o[i.normal], r[i.normal] = this.getColorComp(h.Other, m.TypoGraphyMain), r[i.hover] = this.getColorComp(h.Other, m.MainBlue), r[i.pressed] = this.getColorComp(h.Other, m.MainBlue), r[i.disabled] = this.getColorComp(h.Other, m.FilterDisableText), this.colorConfig.set(n.sprite1, e), this.colorConfig.set(n.sprite2, o), this.colorConfig.set(n.label1, r);
                    break;
                case s.lobbyV2CustomFilterCloseIconButton_Desktop:
                    this.inputType = l.bounceBtn, e[i.normal] = this.getColorComp(h.Other, m.SurfaceTertiary), e[i.hover] = e[i.normal], e[i.pressed] = this.getColorComp(h.Other, m.LobbyV2SubfilterBtnBgPress), e[i.disabled] = e[i.normal], o[i.normal] = this.getColorComp(h.Other, m.transparent), o[i.hover] = this.getColorComp(h.Other, m.LobbyV2CustomfilterBtnBorderPress), o[i.pressed] = this.getColorComp(h.Other, m.LobbyV2CustomfilterBtnBorderPress), o[i.disabled] = o[i.normal], t[i.normal] = this.getColorComp(h.Other, m.TypoGraphyMain), t[i.hover] = this.getColorComp(h.Other, m.MainBlue), t[i.pressed] = this.getColorComp(h.Other, m.MainBlue), t[i.disabled] = this.getColorComp(h.Other, m.FilterDisableText), this.colorConfig.set(n.sprite1, e), this.colorConfig.set(n.sprite2, o), this.colorConfig.set(n.sprite3, t);
                    break;
                case s.lobbyV2CustomFilterResetButton_Desktop:
                    this.inputType = l.bounceBtn, e[i.normal] = this.getColorComp(h.Other, m.SurfaceTertiary), e[i.hover] = e[i.normal], e[i.pressed] = this.getColorComp(h.Other, m.LobbyV2SubfilterBtnBgPress), e[i.disabled] = e[i.normal], o[i.normal] = this.getColorComp(h.Other, m.transparent), o[i.hover] = this.getColorComp(h.Other, m.LobbyV2CustomfilterBtnBorderPress), o[i.pressed] = this.getColorComp(h.Other, m.LobbyV2CustomfilterBtnBorderPress), o[i.disabled] = o[i.normal], r[i.normal] = this.getColorComp(h.Other, m.TypoGraphyMain), r[i.hover] = this.getColorComp(h.Other, m.MainBlue), r[i.pressed] = this.getColorComp(h.Other, m.MainBlue), r[i.disabled] = this.getColorComp(h.Other, m.FilterDisableText), this.colorConfig.set(n.sprite1, e), this.colorConfig.set(n.sprite2, o), this.colorConfig.set(n.label1, r);
                    break;
                case s.lobbyV2CustomFilterShowHideToggle_Desktop:
                    this.inputType = l.toggle, e[i.normal] = this.getColorComp(h.Other, m.SurfaceTertiary), e[i.hover] = e[i.hover] = this.getColorComp(h.Other, m.LobbyV2SubfilterBtnBgPress), e[i.pressed] = this.getColorComp(h.Other, m.LobbyV2SubfilterBtnBgPress), e[i.disabled] = e[i.normal], o[i.normal] = this.getColorComp(h.Other, m.transparent), o[i.hover] = o[i.normal], o[i.pressed] = this.getColorComp(h.Other, m.LobbyV2CustomfilterBtnBorderPress), o[i.disabled] = o[i.normal], r[i.normal] = this.getColorComp(h.Other, m.TypoGraphyMain), r[i.hover] = this.getColorComp(h.Other, m.MainBlue), r[i.pressed] = this.getColorComp(h.Other, m.MainBlue), r[i.disabled] = this.getColorComp(h.Other, m.FilterDisableText), this.colorConfig.set(n.sprite1, e), this.colorConfig.set(n.sprite2, o), this.colorConfig.set(n.label1, r);
                    break;
                case s.newReplayerExtraButtons_Toggle:
                    this.inputType = l.toggle, e[i.normal] = this.getColorComp(h.Other, m.NewReplayerExtraButtonNormal), e[i.hover] = this.getColorComp(h.Other, m.NewReplayerExtraButtonHover), e[i.pressed] = this.getColorComp(h.Other, m.NewReplayerExtraButtonPress), e[i.disabled] = e[i.normal], o[i.normal] = this.getColorComp(h.Other, m.NewReplayerExtraButtonIconNormal), o[i.hover] = o[i.normal], o[i.pressed] = this.getColorComp(h.Other, m.NewReplayerExtraButtonIconPress), o[i.disabled] = o[i.normal], this.colorConfig.set(n.sprite1, e), this.colorConfig.set(n.sprite2, o);
                    break;
                case s.newReplayerExtraButtons_Normal:
                    this.inputType = l.bounceBtn, e[i.normal] = this.getColorComp(h.Other, m.NewReplayerExtraButtonNormal), e[i.hover] = this.getColorComp(h.Other, m.NewReplayerExtraButtonHover), e[i.pressed] = e[i.hover], e[i.disabled] = e[i.normal], o[i.normal] = this.getColorComp(h.Other, m.NewReplayerExtraButtonIconNormal), o[i.hover] = o[i.normal], o[i.pressed] = o[i.hover], o[i.disabled] = o[i.normal], this.colorConfig.set(n.sprite1, e), this.colorConfig.set(n.sprite2, o);
                    break;
                case s.newReplayerExtraButtons_Normal_Mobile:
                    this.inputType = l.bounceBtn, e[i.normal] = this.getColorComp(h.Other, m.NewReplayerExtraButtonNormal), e[i.hover] = this.getColorComp(h.Other, m.NewReplayerExtraButtonHover), e[i.pressed] = e[i.hover], e[i.disabled] = e[i.normal], o[i.normal] = this.getColorComp(h.Other, m.NewReplayerExtraButtonIconNormal), o[i.hover] = o[i.normal], o[i.pressed] = this.getColorComp(h.Other, m.NewReplayerExtraButtonIconPress), o[i.disabled] = o[i.normal], this.colorConfig.set(n.sprite1, e), this.colorConfig.set(n.sprite2, o);
                    break;
                case s.newReplayerRevealHand_Button:
                    this.inputType = l.bounceBtn, e[i.normal] = this.getColorComp(h.Other, m.NewReplayerExtraButtonNormal), e[i.hover] = this.getColorComp(h.Other, m.NewReplayerExtraButtonHover), e[i.pressed] = this.getColorComp(h.Other, m.NewReplayerExtraButtonPress), e[i.disabled] = e[i.pressed], o[i.normal] = this.getColorComp(h.Other, m.NewReplayerExtraButtonIconNormal), o[i.hover] = o[i.normal], o[i.pressed] = this.getColorComp(h.Other, m.NewReplayerExtraButtonIconPress), o[i.disabled] = o[i.normal], this.colorConfig.set(n.sprite1, e), this.colorConfig.set(n.sprite2, o);
                    break;
                case s.pokerGroupFilterResetBtnV2:
                    this.inputType = l.bounceBtn, e[i.normal] = this.getColorComp(h.Other, m.MttGroupFilterResetBtnBgNormal), e[i.hover] = e[i.normal], e[i.pressed] = this.getColorComp(h.Other, m.MttGroupFilterResetBtnBgSelected), e[i.disabled] = e[i.normal], r[i.normal] = this.getColorComp(h.Other, m.MttGroupFilterTextPrimary), r[i.hover] = r[i.normal], r[i.pressed] = this.getColorComp(h.Other, m.MttGroupFilterTextPrimarySelected), r[i.disabled] = this.getColorComp(h.Other, m.FilterDisableText), this.colorConfig.set(n.sprite1, e), this.colorConfig.set(n.label1, r);
                    break;
                case s.pokerPagePanelFilterBtnV2:
                    this.inputType = l.pokerPagePanelFilterBtn, e[i.normal] = this.getColorComp(h.Other, m.MttGroupFilterTextPrimary), e[i.hover] = this.getColorComp(h.Other, m.pokerPagePanelToggleHover), e[i.pressed] = this.getColorComp(h.Other, m.MttGroupFilterPageFilterBtnIconPressed), e[i.disabled] = this.getColorComp(h.MainBtn, C.OutlineDisableBorder), u[i.normal] = this.getColorComp(h.Other, m.MttGroupFilterPageFilterBtnBg), u[i.hover] = u[i.normal], u[i.pressed] = this.getColorComp(h.Other, m.MttGroupFilterPageFilterBtnBg), u[i.disabled] = u[i.normal], c[i.normal] = this.getColorComp(h.Other, m.MttGroupFilterPageFilterBtnIconShadow), c[i.hover] = this.getColorComp(h.Other, m.MttGroupFilterPageFilterBtnIconShadow), c[i.pressed] = c[i.hover], c[i.disabled] = c[i.normal], this.colorConfig.set(n.sprite1, e), this.colorConfig.set(n.border1Fill, u), this.colorConfig.set(n.border2Fill, c);
                    break;
                case s.walletBtn:
                    this.inputType = l.bounceBtn, e[i.normal] = e[i.disabled] = this.getColorComp(h.Nero, p.W600), e[i.hover] = e[i.pressed] = this.getColorComp(h.Other, m.SelectedOptionBg), this.colorConfig.set(n.sprite1, e);
                    break;
                case s.walletAmountBtn:
                    this.inputType = l.bounceBtn, e[i.normal] = e[i.hover] = e[i.disabled] = this.getColorComp(h.Other, m.CurrencyStatesButtonBGHover), e[i.pressed] = this.getColorComp(h.Gold, p.W600), r[i.normal] = r[i.disabled] = r[i.hover] = this.getColorComp(h.Other, m.TypoGraphySecond), r[i.pressed] = this.getColorComp(h.Nero, p.W600), this.colorConfig.set(n.sprite1, e), this.colorConfig.set(n.label1, r);
                    break;
                case s.cashierTabBtn:
                    this.inputType = l.bounceBtn, e[i.normal] = e[i.hover] = e[i.disabled] = this.getColorComp(h.Other, m.EarnViewTabNormalIcon), e[i.pressed] = this.getColorComp(h.Other, m.EarnViewTabPressedIcon, h.Other, m.EarnViewTabPressedIcon), r[i.normal] = r[i.hover] = r[i.disabled] = this.getColorComp(h.Other, m.EarnViewTabNormalText), r[i.pressed] = this.getColorComp(h.Other, m.EarnViewTabPressedText), u[i.normal] = u[i.disabled] = this.getColorComp(h.Nero, p.W600), u[i.hover] = u[i.pressed] = this.getColorComp(h.Other, m.EarnViewTabBorderFillPressed), B[i.normal] = B[i.hover] = B[i.disabled] = this.getColorComp(h.Other, m.EarnViewTabBorderNormal), B[i.pressed] = this.getColorComp(h.Other, m.EarnViewTabBorderPressed), this.colorConfig.set(n.label1, r), this.colorConfig.set(n.border1Fill, u), this.colorConfig.set(n.border1, B), this.colorConfig.set(n.sprite1, e);
                    break;
                case s.cashierPaymentSupportBtn:
                    this.inputType = l.bounceBtn, e[i.normal] = this.getColorComp(h.Gold, p.W600, h.Gold, p.W800), e[i.hover] = this.getColorComp(h.MainBtn, C.PrimaryBgHover), e[i.pressed] = this.getColorComp(h.MainBtn, C.PrimaryBgPressed), e[i.disabled] = this.getColorComp(h.MainBtn, C.PrimaryBgDisableStart, h.MainBtn, C.PrimaryBgDisableEnd), r[i.normal] = this.getColorComp(h.Other, m.TypoGraphyMain), r[i.hover] = r[i.normal], r[i.pressed] = r[i.normal], r[i.disabled] = r[i.normal], B[i.normal] = this.getColorComp(h.Other, m.Border), B[i.hover] = this.getColorComp(h.Other, m.TopBarFeedbackButtonHover), B[i.pressed] = B[i.hover], B[i.disabled] = B[i.normal], this.colorConfig.set(n.sprite1, e), this.colorConfig.set(n.label1, r), this.colorConfig.set(n.border1, B);
                    break;
                case s.cashierPaymentSupportMobileBtn:
                    this.inputType = l.bounceBtn, e[i.normal] = this.getColorComp(h.Gold, p.W600, h.Gold, p.W800), e[i.hover] = this.getColorComp(h.MainBtn, C.PrimaryBgHover), e[i.pressed] = this.getColorComp(h.MainBtn, C.PrimaryBgPressed), e[i.disabled] = this.getColorComp(h.MainBtn, C.PrimaryBgDisableStart, h.MainBtn, C.PrimaryBgDisableEnd), o[i.normal] = this.getColorComp(h.Other, m.Icon), o[i.hover] = this.getColorComp(h.Other, m.Icon), o[i.pressed] = this.getColorComp(h.Other, m.EarnViewRightArrowPresssed), o[i.disabled] = o[i.normal], r[i.normal] = this.getColorComp(h.Other, m.TypoGraphyMain), r[i.hover] = r[i.normal], r[i.pressed] = r[i.normal], r[i.disabled] = r[i.normal], u[i.normal] = this.getColorComp(h.Other, m.BackgroundSecond), u[i.hover] = u[i.pressed] = u[i.disabled] = u[i.normal], B[i.normal] = this.getColorComp(h.Other, m.EarnViewInfoBorder), B[i.hover] = B[i.pressed] = B[i.disabled] = B[i.normal], this.colorConfig.set(n.sprite1, e), this.colorConfig.set(n.sprite2, o), this.colorConfig.set(n.label1, r), this.colorConfig.set(n.border1Fill, u), this.colorConfig.set(n.border1, B);
                    break;
                case s.languageToggle:
                    this.inputType = l.toggle, e[i.normal] = this.getColorComp(h.Other, m.transparent), e[i.hover] = e[i.normal], e[i.pressed] = this.getColorComp(h.Other, m.MainBlue), e[i.disabled] = e[i.normal], e[i.mouseDown] = e[i.pressed], B[i.normal] = this.getColorComp(h.Other, m.FilterNormalBorder), B[i.hover] = this.getColorComp(h.MainBtn, C.HoverBorder), B[i.pressed] = this.getColorComp(h.MainBtn, C.HoverBorder), B[i.disabled] = this.getColorComp(h.Other, m.MainPanel), B[i.mouseDown] = B[i.hover], r[i.normal] = this.getColorComp(h.Other, m.TypoGraphySecond), r[i.hover] = this.getColorComp(h.MainBtn, C.HoverBorder), r[i.pressed] = this.getColorComp(h.Other, m.ButtonStyleText), r[i.disabled] = this.getColorComp(h.Other, m.FilterDisableText), r[i.mouseDown] = r[i.hover], d[i.normal] = this.getColorComp(h.Other, m.TypoGraphySecond), d[i.hover] = this.getColorComp(h.MainBtn, C.HoverBorder), d[i.pressed] = this.getColorComp(h.Other, m.ButtonStyleText), d[i.disabled] = this.getColorComp(h.Other, m.FilterDisableText), d[i.mouseDown] = d[i.hover], this.colorConfig.set(n.sprite1, e), this.colorConfig.set(n.border1, B), this.colorConfig.set(n.label1, r), this.colorConfig.set(n.label2, d);
                    break;
                case s.darkBtn:
                    this.inputType = l.bounceBtn, e[i.normal] = this.getColorComp(h.Other, m.InsuranceLeave), e[i.hover] = this.getColorComp(h.Other, m.BgDark3), e[i.pressed] = this.getColorComp(h.Other, m.InsuranceLeave), e[i.disabled] = this.getColorComp(h.MainBtn, C.PrimaryBgDisableStart, h.MainBtn, C.PrimaryBgDisableEnd), r[i.normal] = this.getColorComp(h.Other, m.WhiteCreamy_100), r[i.hover] = r[i.normal], r[i.pressed] = r[i.normal], r[i.disabled] = r[i.normal], this.colorConfig.set(n.sprite1, e), this.colorConfig.set(n.label1, r);
                    break;
                case s.third:
                    this.inputType = l.bounceBtn, e[i.normal] = this.getColorComp(h.MainBtn, C.ThirdNormalBorder), e[i.hover] = this.getColorComp(h.MainBtn, C.ThirdHoverBorder), e[i.pressed] = e[i.hover], e[i.disabled] = e[i.normal], r[i.normal] = this.getColorComp(h.Other, m.ButtonStyleOutline), r[i.hover] = r[i.normal], r[i.pressed] = r[i.normal], r[i.disabled] = this.getColorComp(h.MainBtn, C.PopupConfirmDisableText), this.colorConfig.set(n.sprite1, e), this.colorConfig.set(n.label1, r);
                    break;
                case s.popupConfirmBtn:
                    this.inputType = l.bounceBtn, e[i.normal] = this.getColorComp(h.MainBtn, C.PopupConfirmNormalBg), e[i.hover] = e[i.normal], e[i.pressed] = e[i.normal], e[i.disabled] = e[i.normal], r[i.normal] = this.getColorComp(h.Other, m.ButtonStylePrimary), r[i.hover] = r[i.normal], r[i.pressed] = r[i.normal], r[i.disabled] = this.getColorComp(h.Other, m.PrimaryBtnTextDisalbe), this.colorConfig.set(n.sprite1, e), this.colorConfig.set(n.label1, r);
                    break;
                case s.popupCloseBtn:
                    this.inputType = l.bounceBtn, e[i.normal] = this.getColorComp(h.Other, m.TypoGraphyMain), e[i.hover] = this.getColorComp(h.Other, m.MainBlue), e[i.pressed] = e[i.hover], e[i.disabled] = e[i.normal], e[i.mouseDown] = e[i.hover], this.colorConfig.set(n.sprite1, e);
                    break;
                case s.scrollBar:
                    this.inputType = l.bounceBtn, e[i.normal] = this.getColorComp(h.Other, m.ScrollBarNormalState), e[i.hover] = this.getColorComp(h.Other, m.TypoGraphyMain), e[i.pressed] = e[i.hover], e[i.mouseDown] = e[i.hover], e[i.disabled] = e[i.normal], this.colorConfig.set(n.sprite1, e);
                    break;
                case s.hamburgerBar:
                    this.inputType = l.bounceBtn, e[i.normal] = this.getColorComp(h.Other, m.HamburgerBar), e[i.hover] = this.getColorComp(h.Other, m.TypoGraphySecond), e[i.pressed] = this.getColorComp(h.Other, m.lobbyBellPressed), e[i.disabled] = this.getColorComp(h.MainBtn, C.OutlineDisableBorder), this.colorConfig.set(n.sprite1, e);
                    break;
                case s.cowboyPromotionPlayNowBtn:
                    e[i.normal] = this.getColorComp(h.Other, m.CowboyPlayNowBtnNormal), e[i.hover] = this.getColorComp(h.Other, m.CowboyPlayNowBtnHover), e[i.pressed] = e[i.hover], e[i.disabled] = e[i.hover], e[i.mouseDown] = e[i.hover], u[i.normal] = this.getColorComp(h.Other, m.CowboyPlayNowBtnNormal), u[i.hover] = this.getColorComp(h.Other, m.CowboyPlayNowBtnHover), u[i.pressed] = e[i.hover], u[i.disabled] = e[i.hover], u[i.mouseDown] = e[i.hover], this.colorConfig.set(n.sprite1, e), this.colorConfig.set(n.border1Fill, u);
                    break;
                case s.cowboyPromotionRemindLaterBtn:
                    B[i.normal] = this.getColorComp(h.Other, m.CowboyRemindLaterBtnNormal), B[i.hover] = this.getColorComp(h.Other, m.CowboyRemindLaterBtnHover), B[i.pressed] = u[i.hover], B[i.disabled] = u[i.hover], B[i.mouseDown] = u[i.hover], this.colorConfig.set(n.border1, B);
                    break;
                case s.videoCowboyPromotionPlayNowBtn:
                    e[i.normal] = this.getColorComp(h.Other, m.VideoCowboyPlayNowBtnNormal), e[i.hover] = this.getColorComp(h.Other, m.VideoCowboyPlayNowBtnHover), e[i.pressed] = e[i.hover], e[i.disabled] = e[i.hover], e[i.mouseDown] = e[i.hover], u[i.normal] = this.getColorComp(h.Other, m.VideoCowboyPlayNowBtnNormal), u[i.hover] = this.getColorComp(h.Other, m.VideoCowboyPlayNowBtnHover), u[i.pressed] = e[i.hover], u[i.disabled] = e[i.hover], u[i.mouseDown] = e[i.hover], this.colorConfig.set(n.sprite1, e), this.colorConfig.set(n.border1Fill, u);
                    break;
                case s.topBarFeedbackBtn:
                    this.inputType = l.bounceBtn, e[i.normal] = this.getColorComp(h.Other, m.Icon), e[i.hover] = e[i.normal], e[i.pressed] = e[i.normal], e[i.disabled] = e[i.normal], r[i.normal] = this.getColorComp(h.Other, m.TypoGraphyMain), r[i.hover] = r[i.normal], r[i.pressed] = r[i.normal], r[i.disabled] = r[i.normal], o[i.normal] = this.getColorComp(h.Other, m.Border), o[i.hover] = this.getColorComp(h.Other, m.TopBarFeedbackButtonHover), o[i.pressed] = o[i.hover], o[i.disabled] = o[i.normal], this.colorConfig.set(n.sprite1, e), this.colorConfig.set(n.label1, r), this.colorConfig.set(n.sprite2, o);
                    break;
                case s.btnSwitchCurrencyStats:
                    this.inputType = l.tabBtn, r[i.normal] = this.getColorComp(h.Other, m.CurrencyStatesButtonLabelNormal), r[i.hover] = this.getColorComp(h.Other, m.CurrencyStatesButtonLabelHover), r[i.pressed] = this.getColorComp(h.Other, m.CurrencyStatesButtonLabelPressed), r[i.disabled] = this.getColorComp(h.MainBtn, C.OutlineDisableBorder), u[i.normal] = this.getColorComp(h.Other, m.CurrencyStatesButtonBGNormal), u[i.hover] = this.getColorComp(h.Other, m.CurrencyStatesButtonBGHover), u[i.pressed] = u[i.hover], u[i.disabled] = this.getColorComp(h.Nero, p.W600), B[i.normal] = this.getColorComp(h.Other, m.transparent), B[i.hover] = this.getColorComp(h.Other, m.transparent), B[i.pressed] = this.getColorComp(h.Other, m.currencyButtonBorder), B[i.disabled] = this.getColorComp(h.Other, m.transparent), c[i.normal] = this.getColorComp(h.Other, m.currencyButtonShadow), c[i.hover] = this.getColorComp(h.Other, m.currencyButtonShadow), c[i.pressed] = this.getColorComp(h.Other, m.currencyButtonShadow), c[i.disabled] = this.getColorComp(h.Other, m.currencyButtonShadow), this.colorConfig.set(n.label1, r), this.colorConfig.set(n.border1Fill, u), this.colorConfig.set(n.border2Fill, c), this.colorConfig.set(n.border1, B);
                    break;
                case s.pokerPopupMainButton:
                    this.inputType = l.bounceBtn, e[i.normal] = this.getColorComp(h.MainBtn, C.GameplayPopupNormalBG), e[i.hover] = this.getColorComp(h.MainBtn, C.GameplayPopupHoverBG), e[i.pressed] = this.getColorComp(h.MainBtn, C.GameplayPopupPressedBG), e[i.disabled] = this.getColorComp(h.MainBtn, C.GameplayPopupDisableBG), r[i.normal] = this.getColorComp(h.Other, m.GameTextSecondary2), r[i.hover] = r[i.normal], r[i.pressed] = r[i.normal], r[i.disabled] = r[i.normal], this.colorConfig.set(n.sprite1, e), this.colorConfig.set(n.label1, r);
                    break;
                case s.lobbyV2BuyInPopupButton:
                    this.inputType = l.bounceBtn, e[i.normal] = this.getColorComp(h.MainBtn, C.LobbyV2BuyInPopupButtonNormalBG), e[i.hover] = this.getColorComp(h.MainBtn, C.LobbyV2BuyInPopupButtonPressedBG), e[i.pressed] = this.getColorComp(h.MainBtn, C.LobbyV2BuyInPopupButtonHoverBG), e[i.disabled] = this.getColorComp(h.MainBtn, C.LobbyV2BuyInPopupButtonDisableBG), this.colorConfig.set(n.sprite1, e);
                    break;
                case s.lobbyV2BuyInPopupButton2:
                    this.inputType = l.bounceBtn, e[i.normal] = this.getColorComp(h.MainBtn, C.LobbyV2BuyInPopupButton2NormalBG), e[i.hover] = this.getColorComp(h.MainBtn, C.LobbyV2BuyInPopupButton2PressedBG), e[i.pressed] = this.getColorComp(h.MainBtn, C.LobbyV2BuyInPopupButton2HoverBG), e[i.disabled] = this.getColorComp(h.MainBtn, C.LobbyV2BuyInPopupButton2DisableBG), this.colorConfig.set(n.sprite1, e);
                    break;
                case s.MTTUnregisterPopupButton:
                    this.inputType = l.bounceBtn, e[i.normal] = this.getColorComp(h.MainBtn, C.MTTUnregisterPopupButtonNormalBG), e[i.hover] = this.getColorComp(h.MainBtn, C.MTTUnregisterPopupButtonPressedBG), e[i.pressed] = this.getColorComp(h.MainBtn, C.MTTUnregisterPopupButtonHoverBG), e[i.disabled] = this.getColorComp(h.MainBtn, C.MTTUnregisterPopupButtonDisableBG), this.colorConfig.set(n.sprite1, e);
                    break;
                case s.MTTUnregisterPopupCancelButton:
                    this.inputType = l.bounceBtn, e[i.normal] = this.getColorComp(h.MainBtn, C.MTTUnregisterPopupCancelButtonNormalBG), e[i.hover] = this.getColorComp(h.MainBtn, C.MTTUnregisterPopupCancelButtonPressedBG), e[i.pressed] = this.getColorComp(h.MainBtn, C.MTTUnregisterPopupCancelButtonHoverBG), e[i.disabled] = this.getColorComp(h.MainBtn, C.MTTUnregisterPopupCancelButtonDisableBG), this.colorConfig.set(n.sprite1, e);
                    break;
                case s.globalSpinBuyInBtn:
                    this.inputType = l.bounceBtn, e[i.normal] = this.getColorComp(h.Other, m.GlobalSpinBuyInBtnNormal), e[i.hover] = e[i.normal], e[i.pressed] = e[i.normal], e[i.disabled] = this.getColorComp(h.Other, m.GlobalSpinBuyInBtnDisabled), o[i.normal] = this.getColorComp(h.Other, m.GlobalSpinActiveBtn), o[i.hover] = o[i.normal], o[i.pressed] = o[i.normal], o[i.disabled] = this.getColorComp(h.Other, m.GlobalSpinDeactiveBtn), this.colorConfig.set(n.sprite1, e), this.colorConfig.set(n.sprite2, o);
                    break;
                case s.integrateMttFilterButton:
                    e[i.normal] = this.getColorComp(h.MainBtn, C.integrateMttFilterButton_Text_normal), e[i.hover] = this.getColorComp(h.MainBtn, C.integrateMttFilterButton_Text_normal), e[i.pressed] = this.getColorComp(h.MainBtn, C.integrateMttFilterButton_Border_pressed), e[i.disabled] = this.getColorComp(h.MainBtn, C.integrateMttFilterButton_Text_normal), o[i.normal] = this.getColorComp(h.MainBtn, C.integrateMttFilterButton_BG_normal), o[i.hover] = o[i.normal], o[i.pressed] = this.getColorComp(h.MainBtn, C.integrateMttFilterButton_BG_pressed, null, null, 36), o[i.disabled] = o[i.normal], this.colorConfig.set(n.sprite1, e), this.colorConfig.set(n.sprite2, o);
                    break;
                case s.integrateMttFilterConfirmButton:
                    r[i.normal] = this.getColorComp(h.MainBtn, C.integrateMttFilterConfirmButton_text_default), r[i.hover] = r[i.normal], r[i.pressed] = r[i.normal], r[i.disabled] = this.getColorComp(h.MainBtn, C.integrateMttFilterButton_text_disable), e[i.normal] = this.getColorComp(h.MainBtn, C.integrateMttOverviewRegButton_BG_normal), e[i.hover] = this.getColorComp(h.MainBtn, C.integrateMttOverviewRegButton_BG_hover), e[i.pressed] = this.getColorComp(h.MainBtn, C.integrateMttOverviewRegButton_BG_pressed), e[i.disabled] = this.getColorComp(h.MainBtn, C.integrateMttOverviewRegButton_BG_disable), this.colorConfig.set(n.label1, r), this.colorConfig.set(n.sprite1, e);
                    break;
                case s.integrateMttFilterResetButton:
                    r[i.normal] = this.getColorComp(h.LobbyV2, g.ListItem_TextPrimary), r[i.hover] = r[i.normal], r[i.pressed] = r[i.normal], r[i.disabled] = this.getColorComp(h.MainBtn, C.integrateMttFilterButton_text_disable), e[i.normal] = this.getColorComp(h.MainBtn, C.integrateMttFilterResetButton_BG_normal), e[i.hover] = this.getColorComp(h.MainBtn, C.integrateMttFilterResetButton_BG_hover), e[i.pressed] = this.getColorComp(h.MainBtn, C.integrateMttFilterResetButton_BG_pressed), e[i.disabled] = this.getColorComp(h.MainBtn, C.integrateMttFilterResetButton_BG_disable), this.colorConfig.set(n.label1, r), this.colorConfig.set(n.sprite1, e);
                    break;
                case s.integrateMttSubFilterButton:
                    r[i.normal] = this.getColorComp(h.MainBtn, C.integrateMttFilterButton_Text_normal), r[i.hover] = r[i.normal], r[i.pressed] = this.getColorComp(h.MainBtn, C.integrateMttFilterButton_Border_pressed), r[i.disabled] = r[i.normal], r[i.mouseDown] = r[i.normal], e[i.normal] = this.getColorComp(h.MainBtn, C.integrateMttFilterButton_Text_normal), e[i.hover] = r[i.normal], e[i.pressed] = this.getColorComp(h.MainBtn, C.integrateMttFilterButton_Border_pressed), e[i.disabled] = r[i.normal], e[i.mouseDown] = r[i.normal], o[i.normal] = this.getColorComp(h.MainBtn, C.integrateMttFilterButton_BG_normal, null, null, 1), o[i.hover] = o[i.normal], o[i.pressed] = this.getColorComp(h.MainBtn, C.integrateMttFilterButton_Border_pressed), o[i.disabled] = o[i.normal], o[i.mouseDown] = o[i.normal], t[i.normal] = this.getColorComp(h.MainBtn, C.integrateMttFilterButton_BG_normal), t[i.hover] = t[i.normal], t[i.pressed] = this.getColorComp(h.MainBtn, C.integrateMttFilterButton_BG_pressed, null, null, 36), t[i.disabled] = t[i.normal], t[i.mouseDown] = t[i.normal], this.colorConfig.set(n.label1, r), this.colorConfig.set(n.sprite1, e), this.colorConfig.set(n.sprite2, o), this.colorConfig.set(n.sprite3, t);
                    break;
                case s.integrateMttOverviewRegButton:
                    r[i.normal] = this.getColorComp(h.MainBtn, C.PressedText), r[i.hover] = this.getColorComp(h.MainBtn, C.PressedText), r[i.pressed] = this.getColorComp(h.MainBtn, C.PressedText), r[i.disabled] = this.getColorComp(h.MainBtn, C.PrimaryTextDisable), e[i.normal] = this.getColorComp(h.MainBtn, C.integrateMttOverviewRegButton_BG_normal), e[i.hover] = this.getColorComp(h.MainBtn, C.integrateMttOverviewRegButton_BG_hover), e[i.pressed] = this.getColorComp(h.MainBtn, C.integrateMttOverviewRegButton_BG_pressed), e[i.disabled] = this.getColorComp(h.MainBtn, C.integrateMttOverviewRegButton_BG_disable), this.colorConfig.set(n.label1, r), this.colorConfig.set(n.sprite1, e);
                    break;
                case s.integrateMttOverviewRegButton2:
                    r[i.normal] = this.getColorComp(h.MainBtn, C.PressedText), r[i.hover] = this.getColorComp(h.MainBtn, C.PressedText), r[i.pressed] = this.getColorComp(h.MainBtn, C.PressedText), r[i.disabled] = this.getColorComp(h.MainBtn, C.PrimaryTextDisable), e[i.normal] = this.getColorComp(h.MainBtn, C.integrateMttOverviewRegButton2_BG_normal), e[i.hover] = this.getColorComp(h.MainBtn, C.integrateMttOverviewRegButton2_BG_hover), e[i.pressed] = this.getColorComp(h.MainBtn, C.integrateMttOverviewRegButton2_BG_pressed), e[i.disabled] = this.getColorComp(h.MainBtn, C.integrateMttOverviewRegButton_BG_disable), this.colorConfig.set(n.label1, r), this.colorConfig.set(n.sprite1, e);
                case s.sendCodeAgain:
                    this.inputType = l.bounceBtn, e[i.normal] = this.getColorComp(h.MainBtn, C.GetCodePressedBg), e[i.hover] = this.getColorComp(h.MainBtn, C.GetCodePressedBg), e[i.pressed] = this.getColorComp(h.MainBtn, C.GetCodePressedBg), e[i.disabled] = this.getColorComp(h.MainBtn, C.PrimaryBgDisableStart), o[i.normal] = this.getColorComp(h.Other, m.Mirage), o[i.hover] = this.getColorComp(h.Other, m.Mirage), o[i.pressed] = this.getColorComp(h.Other, m.Mirage), o[i.disabled] = this.getColorComp(h.Other, m.PrimaryBtnTextDisalbe), r[i.normal] = this.getColorComp(h.Other, m.Mirage), r[i.hover] = r[i.pressed] = r[i.normal], r[i.disabled] = this.getColorComp(h.Other, m.PrimaryBtnTextDisalbe), this.colorConfig.set(n.sprite1, e), this.colorConfig.set(n.sprite2, o), this.colorConfig.set(n.label1, r);
                    break;
                case s.tabWindowMttDetail:
                    this.inputType = l.bounceBtn, e[i.normal] = this.getColorComp(h.LobbyV2, g.MttDetail_TabBtn_Bg_Inactive_Landscape), e[i.hover] = this.getColorComp(h.LobbyV2, g.MttDetail_TabBtn_Bg_Active_Landscape), e[i.pressed] = this.getColorComp(h.LobbyV2, g.MttDetail_TabBtn_Bg_Active_Landscape), e[i.disabled] = this.getColorComp(h.LobbyV2, g.MttDetail_TabBtn_Bg_Inactive_Landscape), o[i.normal] = this.getColorComp(h.Other, m.transparent), o[i.hover] = this.getColorComp(h.Other, m.White), o[i.pressed] = o[i.hover], o[i.disabled] = o[i.normal], t[i.normal] = this.getColorComp(h.Other, m.transparent), t[i.hover] = t[i.normal], t[i.pressed] = this.getColorComp(h.Other, m.LeftPanelIconsGradiant1), t[i.disabled] = t[i.normal], r[i.normal] = this.getColorComp(h.LobbyV2, g.MttDetail_TabBtn_Text_Inactive_Landscape), r[i.hover] = this.getColorComp(h.LobbyV2, g.MttDetail_TabBtn_Text_Active_Landscape), r[i.pressed] = this.getColorComp(h.LobbyV2, g.MttDetail_TabBtn_Text_Active_Landscape), r[i.disabled] = this.getColorComp(h.LobbyV2, g.MttDetail_TabBtn_Text_Inactive_Landscape), this.colorConfig.set(n.sprite1, e), this.colorConfig.set(n.sprite2, o), this.colorConfig.set(n.sprite3, t), this.colorConfig.set(n.label1, r);
                    break;
                case s.openTableButton:
                    this.inputType = l.bounceBtn, e[i.normal] = this.getColorComp(h.LobbyV2, g.MttDetail_Open_Table_BG), e[i.hover] = this.getColorComp(h.LobbyV2, g.MttDetail_Open_Table_BG_Press), e[i.pressed] = this.getColorComp(h.LobbyV2, g.MttDetail_Open_Table_BG_Press), e[i.disabled] = this.getColorComp(h.LobbyV2, g.MttDetail_Open_Table_BG_Press), r[i.normal] = this.getColorComp(h.LobbyV2, g.MttDetail_Open_Table_Text), r[i.hover] = this.getColorComp(h.LobbyV2, g.MttDetail_Open_Table_Text_Press), r[i.pressed] = this.getColorComp(h.LobbyV2, g.MttDetail_Open_Table_Text_Press), r[i.disabled] = this.getColorComp(h.LobbyV2, g.MttDetail_Open_Table_Text_Press), this.colorConfig.set(n.sprite1, e), this.colorConfig.set(n.label1, r);
                    break;
                case s.whiteCreamBtn:
                    this.inputType = l.bounceBtn, e[i.normal] = this.getColorComp(h.Other, m.DodgerBlue), e[i.hover] = this.getColorComp(h.Other, m.ButtonHoverColor), e[i.pressed] = this.getColorComp(h.Other, m.ButtonPressedColor), e[i.disabled] = this.getColorComp(h.MainBtn, C.PrimaryBgDisableStart), r[i.normal] = this.getColorComp(h.Other, m.WhiteCreamy_100), r[i.hover] = r[i.normal], r[i.pressed] = r[i.normal], r[i.disabled] = this.getColorComp(h.Other, m.PrimaryBtnTextDisalbe), this.colorConfig.set(n.sprite1, e), this.colorConfig.set(n.label1, r);
                    break;
                case s.minMaxBuyIn:
                    this.inputType = l.bounceBtn, e[i.normal] = this.getColorComp(h.Other, m.BgDark3), e[i.hover] = e[i.normal], e[i.pressed] = this.getColorComp(h.Other, m.InsuranceLeave), e[i.disabled] = this.getColorComp(h.MainBtn, C.PrimaryBgDisableStart, h.MainBtn, C.PrimaryBgDisableEnd), r[i.normal] = this.getColorComp(h.Other, m.WhiteCreamy_100), r[i.hover] = r[i.normal], r[i.pressed] = r[i.normal], r[i.disabled] = this.getColorComp(h.Other, m.PrimaryBtnTextDisalbe), this.colorConfig.set(n.sprite1, e), this.colorConfig.set(n.label1, r)
            }
            this.colorConfig.forEach(((e, o) => {
                e[i.mouseDown] || (e[i.mouseDown] = e[i.pressed]), e[i.disabled] || (e[i.disabled] = e[i.normal])
            }))
        }
        getThemeNodeColorVis(e) {
            return this.colorConfig.has(e)
        }
    }) || d) || d);
    o._RF.pop()
}