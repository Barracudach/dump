import * as t from "./cc.js";
import * as d from "./cc.js";
import * as g from "./cc.js";
import * as _ from "./cc.js";
import * as p from "./cc.js";
import * as r from "./cc.js";
import * as s from "./cc.js";
import * as c from "./cc.js";
import * as M from "./cc.js";
import * as i from "./cc.js";
import * as D from "./cc.js";
import * as I from "./cc.js";
import * as b from "./cc.js";
import * as n from "./cc.js";
import * as o from "./cc.js";
import * as a from "./cc.js";
import * as G from "./ws_protocol.mjs_cjs=&original=.js";
import * as l from "./gs_protocol.mjs_cjs=&original=.js";
import * as S from "./cowboy.mjs_cjs=&original=.js";
import * as h from "./jackfruit.mjs_cjs=&original=.js";
import * as R from "./cv.js";

function main() {
    var u, m;
    o._RF.push({}, "f213cZ0CWhIj7td/grLVTxL", "LoadingView", void 0);
    class C {
        constructor() {
            this.serverID = 0, this.sendID = 0, this.recvID = 0, this.timeValue = 0
        }
    }
    e("WebSocketMsg", C);
    class E {
        constructor() {
            this.funcString = "", this.timeValue = 0
        }
    }
    e("HttpMsg", E);
    const {
        ccclass: T,
        property: A
    } = t;
    e("LoadingView", T(((m = class e extends s {
        constructor(...e) {
            super(...e), this.loadingNode = null, this.loadingPanel = null, this._img = null, this.totalMsgMap = [], this.socketMsg = [], this.httpMsg = [], this._shadeNode = null, this.CHECK_TIME = 2e3, this.webviewHide = !1
        }
        init() {
            i.load("zh_CN/commonPrefab/LoadingView", function(e, o) {
                console.log("start load commonPrefab/LoadingView.prefab file"), e ? console.log(e.message || e) : (this.loadingNode = I(o), n.addPersistRootNode(this.loadingNode), this.loadingNode.addComponent(D), this.loadingNode.setSiblingIndex(G.Enum.ZORDER_TYPE.ZORDER_LOADING), _("loadingPanel/loading_ex", this.loadingNode).active = !1, this._img = _("loadingPanel/img", this.loadingNode), this.loadingPanel = _("loadingPanel", this.loadingNode), this._shadeNode = _("shadeNode", this.loadingNode), this._shadeNode.on(M.EventType.TOUCH_END, (e => {
                    e.propagationStopped = !0
                }), this), this.loadingPanel.active = !1, this._shadeNode.active = !1, this.initTotalMap(), n.getScheduler().schedule(this.show, this, this.CHECK_TIME / 1e3))
            }.bind(this))
        }
        onDestroy() {
            i.release("zh_CN/commonPrefab/LoadingView")
        }
        onLoad() {}
        onde() {}
        reset() {
            G.resMgr.adaptWidget(this.loadingNode, !0)
        }
        show() {
            let e = (new Date).getTime();
            this.checkWebSocket(e) || this.checkHttp(e) ? (this.webviewHide = !0, G.MessageCenter.send("HideWebview_ShowWindows"), this.loadingPanel.active = !0, this.loadingPanel.getComponent(p).opacity = G.SwitchLoadingView.isShow() || G.config.getCurrentScene() == G.Enum.SCENE.HOTUPDATE_SCENE ? 0 : 255, a.instance.ActionManager.getNumberOfRunningActionsInTarget(this._img) <= 0 && d(this._img).sequence(d().to(.5, {
                scale: b(0, 1, 1)
            }), d().to(.5, {
                scale: b(r.ONE)
            })).repeat(10).call((() => {
                let e = (new Date).getTime();
                this.checkWebSocket(e) && (G.SwitchLoadingView.isShow() ? G.SwitchLoadingView.hide() : G.netWorkManager.reconnect()), this.clean()
            })).start()) : (this.webviewHide && (this.webviewHide = !1, G.MessageCenter.send("HideWebview_ShowWindows", !0)), g.stopAllByTarget(this._img), this.loadingPanel.active = !1)
        }
        showShade() {
            this._shadeNode && null != this._shadeNode.active && (this.socketMsg.length > 0 || this.httpMsg.length > 0 ? this._shadeNode.active = !0 : this._shadeNode.active = !1)
        }
        checkWebSocket(e) {
            let o = this.socketMsg.length;
            if (o <= 0) return !1;
            if (e - this.socketMsg[0].timeValue < this.CHECK_TIME) return !1;
            for (let t = 0; t < o && e - this.socketMsg[t].timeValue > this.CHECK_TIME; t++) console.log("websocket超时消息id =>" + this.socketMsg[t].recvID + ", serverID = " + this.socketMsg[t].serverID);
            return !0
        }
        checkHttp(e) {
            let o = this.httpMsg.length;
            if (o <= 0) return !1;
            if (e - this.httpMsg[0].timeValue < this.CHECK_TIME) return !1;
            for (let t = 0; t < o && e - this.httpMsg[t].timeValue > this.CHECK_TIME; t++) console.log("http超时: " + this.httpMsg[t].funcString);
            return !0
        }
        addWebSocketMsg(e, o) {
            let t = this.totalMsgMap.length;
            G.roomManager.checkGameIsZoom(e) ? e = l.pb.GameId.Texas : e != l.pb.GameId.Bet && e !== l.pb.GameId.PLO || (e = l.pb.GameId.Texas);
            for (let s = 0; s < t; s++)
                if (o == this.totalMsgMap[s].sendID && e == this.totalMsgMap[s].serverID) {
                    let t = new C;
                    t.serverID = e, t.sendID = o, t.recvID = this.totalMsgMap[s].recvID, t.timeValue = (new Date).getTime(), this.socketMsg.push(t)
                } this.showShade()
        }
        removeWebSocketMsg(e, o) {
            let t = 0,
                s = 0,
                i = !1,
                I = this.socketMsg.length;
            for (let n = 0; n < I; n++)
                if (e == this.socketMsg[n].serverID && o == this.socketMsg[n].recvID) {
                    t = this.socketMsg[n].sendID, s = this.socketMsg[n].serverID, i = !0, this.socketMsg.splice(n, 1);
                    break
                } if (i) {
                let e = this.socketMsg.length;
                for (let o = 0; o < e; o++) s == this.socketMsg[o].serverID && t == this.socketMsg[o].sendID && (this.socketMsg.splice(o, 1), o--, e--)
            }
            this.showShade()
        }
        addHttpMsg(e) {
            let o = new E;
            o.funcString = e, o.timeValue = (new Date).getTime(), this.httpMsg.push(o), this.showShade()
        }
        removeHttpMsg(e) {
            let o = this.httpMsg.length;
            for (let t = 0; t < o; t++) this.httpMsg[t].funcString == e && (this.httpMsg.splice(t, 1), t--, o--);
            this.showShade()
        }
        clean() {
            this.loadingNode && c(this.loadingNode, !0) && (this.httpMsg = [], this.socketMsg = [], g.stopAllByTarget(this._img), this.loadingPanel.active = !1, this.showShade())
        }
        _showOverTimeMsg(e) {
            0 == G.appConfig.isProd && G.TT.showMsg(e, G.Enum.ToastType.ToastTypeError)
        }
        initTotalMap() {
            this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_Logon_Response, l.pb.MSGID.MsgID_Logon_Request), this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_CreateClub_Response, l.pb.MSGID.MsgID_CreateClub_Request), this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_ClubSnapshotList_Response, l.pb.MSGID.MsgID_ClubSnapshotList_Request), this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_ClubSnapshotList_Notice, l.pb.MSGID.MsgID_ClubSnapshotList_Request), this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_JoinClub_Response_To_Member, l.pb.MSGID.MsgID_JoinClub_Reply), this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_JoinClub_Notice_To_Member, l.pb.MSGID.MsgID_JoinClub_Reply), this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_JoinClub_Response_To_Admin, l.pb.MSGID.MsgID_JoinClub_Reply), this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_LeaveClub_Response, l.pb.MSGID.MsgID_LeaveClub_Request), this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_ClubCurrentBoard_Response, l.pb.MSGID.MsgID_ClubCurrentBoard_Request), this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_ClubCurrentBoard_Notice, l.pb.MSGID.MsgID_ClubCurrentBoard_Request), this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_ClubMemberSnapshotList_Response, l.pb.MSGID.MsgID_ClubMemberSnapshotList_Request), this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_ClubMemberSnapshotList_Notice, l.pb.MSGID.MsgID_ClubMemberSnapshotList_Request), this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_ModifyClubMember_Response, l.pb.MSGID.MsgID_ModifyClubMember_Request), this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_ModifyClubMember_Notice, l.pb.MSGID.MsgID_ModifyClubMember_Request), this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_ModifyClubInfo_Response, l.pb.MSGID.MsgID_ModifyClubInfo_Request), this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_GrantClubFund_Response, l.pb.MSGID.MsgID_GrantClubFund_Request), this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_SearchClubInfo_Response, l.pb.MSGID.MsgID_SearchClubInfo_Request), this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_SearchClubInfo_Notice, l.pb.MSGID.MsgID_SearchClubInfo_Request), this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_ClubCreaterInfo_Response, l.pb.MSGID.MsgID_ClubCreaterInfo_Request), this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_ClubCreaterInfo_Notice, l.pb.MSGID.MsgID_ClubCreaterInfo_Request), this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_SendMsg_Response, l.pb.MSGID.MsgID_SendMsg_Request), this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_SendMsg_Notice, l.pb.MSGID.MsgID_SendMsg_Request), this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_GetUserData_Response, l.pb.MSGID.MsgID_GetUserData_Request), this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_GetUserData_Notice, l.pb.MSGID.MsgID_GetUserData_Request), this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_HeartBeat_Response, l.pb.MSGID.MsgID_HeartBeat_Request), this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_GetJackpotData_Response, l.pb.MSGID.MsgID_GetJackpotData_Request), this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_GetJackpotData_Notice, l.pb.MSGID.MsgID_GetJackpotData_Request), this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_JackpotSetting_Response, l.pb.MSGID.MsgID_JackpotSetting_Request), this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_JackpotSetting_Notice, l.pb.MSGID.MsgID_JackpotSetting_Request), this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_SetJackpot_Response, l.pb.MSGID.MsgID_SetJackpot_Request), this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_SetJackpot_Notice, l.pb.MSGID.MsgID_SetJackpot_Request), this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_RecoverJackpotSetting_Response, l.pb.MSGID.MsgID_RecoverJackpotSetting_Request), this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_CurrentRoomJackpot_Response, l.pb.MSGID.MsgID_CurrentRoomJackpot_Request), this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_CurrentRoomJackpot_Notice, l.pb.MSGID.MsgID_CurrentRoomJackpot_Request), this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_JackpotAwardRecord_Response, l.pb.MSGID.MsgID_JackpotAwardRecord_Request), this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_JackpotAwardRecord_Notice, l.pb.MSGID.MsgID_JackpotAwardRecord_Request), this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_JackpotInjectAmount_Response, l.pb.MSGID.MsgID_JackpotInjectAmount_Request), this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_JackpotInjectAmount_Notice, l.pb.MSGID.MsgID_JackpotInjectAmount_Request), this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_CreateAlliance_Response, l.pb.MSGID.MsgID_CreateAlliance_Request), this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_LeaveAlliance_Response, l.pb.MSGID.MsgID_LeaveAlliance_Request), this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_LeaveAlliance_Notice, l.pb.MSGID.MsgID_LeaveAlliance_Request), this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_SearchAlliance_Response, l.pb.MSGID.MsgID_SearchAlliance_Request), this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_SearchAlliance_Notice, l.pb.MSGID.MsgID_SearchAlliance_Request), this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_KickoffAllianceMember_Response, l.pb.MSGID.MsgID_KickoffAllianceMember_Request), this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_KickoffAllianceMember_Notice, l.pb.MSGID.MsgID_KickoffAllianceMember_Request), this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_AllianceList_Response, l.pb.MSGID.MsgID_AllianceList_Request), this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_AllianceList_Notice, l.pb.MSGID.MsgID_AllianceList_Request), this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_JoinAlliance_Response_To_Member, l.pb.MSGID.MsgID_JoinAllianceReply_To_World), this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_JoinAlliance_Response_To_Admin, l.pb.MSGID.MsgID_JoinAllianceReply_To_World), this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_AddRemarks_Response, l.pb.MSGID.MsgID_AddRemarks_Request), this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_AddRemarks_Notice, l.pb.MSGID.MsgID_AddRemarks_Request), this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_GetAllRemarks_Response, l.pb.MSGID.MsgID_GetAllRemarks_Request), this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_GetAllRemarks_Notice, l.pb.MSGID.MsgID_GetAllRemarks_Request), this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_ClearAllianceMaxBuyinLimit_Response, l.pb.MSGID.MsgID_ClearAllianceMaxBuyinLimit_Request), this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_SetAllianceMaxBuyinLimit_Response, l.pb.MSGID.MsgID_SetAllianceMaxBuyinLimit_Request), this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_SetAllianceControlBuyin_Response, l.pb.MSGID.MsgID_SetAllianceControlBuyin_Request), this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_FairPlay_Report_Response, l.pb.MSGID.MsgID_FairPlay_Report_Request), this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_DeviceInfo_Report_Response, l.pb.MSGID.MsgID_DeviceInfo_Report_Request), this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_GetIncome_Response, l.pb.MSGID.MsgID_GetIncome_Request), this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_GetIncome_Notice, l.pb.MSGID.MsgID_GetIncome_Request), this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_GetUserClubGrantInfo_Response, l.pb.MSGID.MsgID_GetUserClubGrantInfo_Request), this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_GetUserClubGrantInfo_Notice, l.pb.MSGID.MsgID_GetUserClubGrantInfo_Request), this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_GetUserMailListInfo_Response, l.pb.MSGID.MsgID_GetUserMailListInfo_Request), this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_GetUserMailListInfo_Notice, l.pb.MSGID.MsgID_GetUserMailListInfo_Request), this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_ReadAndFetchOneMail_Response, l.pb.MSGID.MsgID_ReadAndFetchOneMail_Request), this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_ReadAndFetchOneMail_Notice, l.pb.MSGID.MsgID_ReadAndFetchOneMail_Request), this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_ResponseAnounceList, l.pb.MSGID.MsgID_RequestAnounceList), this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_AddCoinOrder_Pay_Response, l.pb.MSGID.MsgID_AddCoinOrder_Pay_Request), this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_DelCoinOrder_Pay_Response, l.pb.MSGID.MsgID_DelCoinOrder_Pay_Request), this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_SearchClubMember_Response, l.pb.MSGID.MsgID_SearchClubMember_Request), this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_SearchClubMember_Notice, l.pb.MSGID.MsgID_SearchClubMember_Request), this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_ReadAndFetchOneAnounce_Response, l.pb.MSGID.MsgID_ReadAndFetchOneAnounce_Request), this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_ReadAndFetchOneAnounce_Notice, l.pb.MSGID.MsgID_ReadAndFetchOneAnounce_Request), this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_SetClubInvitePercent_Response, l.pb.MSGID.MsgID_SetClubInvitePercent_Request), this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_Exchange_UserPoints_Response, l.pb.MSGID.MsgID_Exchange_UserPoints_Request), this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_Goods_List_Response, l.pb.MSGID.MsgID_Goods_List_Request), this.bindingID(l.pb.GameId.World, l.pb.MSGID.MsgID_Bank_Details_Query_Response, l.pb.MSGID.MsgID_Bank_Details_Query_Request), this.bindingID(G.Enum.GameId.World, l.pb.MSGID.MsgID_AuthApi_Notice, l.pb.MSGID.MsgID_AuthApi_Request), this.bindingID(G.Enum.GameId.World, l.pb.MSGID.MsgID_AuthApi_Response, l.pb.MSGID.MsgID_AuthApi_Request), this.bindingID(l.pb.GameId.Texas, S.protocol.MSGID.MsgID_Logon_Response, S.protocol.MSGID.MsgID_Logon_Request), this.bindingID(l.pb.GameId.Texas, S.protocol.MSGID.MsgID_CreateRoom_Response, S.protocol.MSGID.MsgID_CreateRoom_Request), this.bindingID(l.pb.GameId.Texas, S.protocol.MSGID.MsgID_CreateRoom_Notice, S.protocol.MSGID.MsgID_CreateRoom_Request), this.bindingID(l.pb.GameId.Texas, S.protocol.MSGID.MsgID_DestroyRoom_Response, S.protocol.MSGID.MsgID_DestroyRoom_Request), this.bindingID(l.pb.GameId.Texas, S.protocol.MSGID.MsgID_DestroyRoom_Notice, S.protocol.MSGID.MsgID_DestroyRoom_Request), this.bindingID(l.pb.GameId.Texas, S.protocol.MSGID.MsgID_JoinRoom_Response, S.protocol.MSGID.MsgID_JoinRoom_Request), this.bindingID(l.pb.GameId.Texas, S.protocol.MSGID.MsgID_LeaveRoom_Response, S.protocol.MSGID.MsgID_LeaveRoom_Request), this.bindingID(l.pb.GameId.Texas, S.protocol.MSGID.MsgID_SitDown_Response, S.protocol.MSGID.MsgID_SitDown_Request), this.bindingID(l.pb.GameId.Texas, S.protocol.MSGID.MsgID_SitDown_Notice, S.protocol.MSGID.MsgID_SitDown_Request), this.bindingID(l.pb.GameId.Texas, S.protocol.MSGID.MsgID_Standup_Response, S.protocol.MSGID.MsgID_Standup_Request), this.bindingID(l.pb.GameId.Texas, S.protocol.MSGID.MsgID_Standup_Notice, S.protocol.MSGID.MsgID_Standup_Request), this.bindingID(l.pb.GameId.Texas, S.protocol.MSGID.MsgID_Buyin_Response, S.protocol.MSGID.MsgID_Buyin_Request), this.bindingID(l.pb.GameId.Texas, S.protocol.MSGID.MsgID_Buyin_Notice, S.protocol.MSGID.MsgID_Buyin_Request), this.bindingID(l.pb.GameId.Texas, S.protocol.MSGID.MsgID_Answer_Buyin_Response, S.protocol.MSGID.MsgID_Answer_Buyin_Request), this.bindingID(l.pb.GameId.Texas, S.protocol.MSGID.MsgID_StartGame_Response, S.protocol.MSGID.MsgID_StartGame_Request), this.bindingID(l.pb.GameId.Texas, S.protocol.MSGID.MsgID_StartGame_Notice, S.protocol.MSGID.MsgID_StartGame_Request), this.bindingID(l.pb.GameId.Texas, S.protocol.MSGID.MsgID_BuyInsurance_Response, S.protocol.MSGID.MsgID_BuyInsurance_Request), this.bindingID(l.pb.GameId.Texas, S.protocol.MSGID.MsgID_SendCard_Fun_Response, S.protocol.MSGID.MsgID_SendCard_Fun_Request), this.bindingID(l.pb.GameId.Texas, S.protocol.MSGID.MsgID_SendCard_Fun_Notice, S.protocol.MSGID.MsgID_SendCard_Fun_Request), this.bindingID(l.pb.GameId.Texas, S.protocol.MSGID.MsgID_SendChat_Response, S.protocol.MSGID.MsgID_SendChat_Request), this.bindingID(l.pb.GameId.Texas, S.protocol.MSGID.MsgID_SendChat_Notice, S.protocol.MSGID.MsgID_SendChat_Request), this.bindingID(l.pb.GameId.Texas, S.protocol.MSGID.MsgID_StayPosition_Response, S.protocol.MSGID.MsgID_StayPosition_Request), this.bindingID(l.pb.GameId.Texas, S.protocol.MSGID.MsgID_StayPosition_Notice, S.protocol.MSGID.MsgID_StayPosition_Request), this.bindingID(l.pb.GameId.Texas, S.protocol.MSGID.MsgID_BackPosition_Response, S.protocol.MSGID.MsgID_BackPosition_Request), this.bindingID(l.pb.GameId.Texas, S.protocol.MSGID.MsgID_BackPosition_Notice, S.protocol.MSGID.MsgID_BackPosition_Request), this.bindingID(l.pb.GameId.Texas, S.protocol.MSGID.MsgID_ShowCard_Response, S.protocol.MSGID.MsgID_ShowCard_Request), this.bindingID(l.pb.GameId.Texas, S.protocol.MSGID.MsgID_ShowCard_Notice, S.protocol.MSGID.MsgID_ShowCard_Request), this.bindingID(l.pb.GameId.Texas, S.protocol.MSGID.MsgID_UpdateMoney_Response, S.protocol.MSGID.MsgID_UpdateMoney_Request), this.bindingID(l.pb.GameId.Texas, S.protocol.MSGID.MsgID_ModifyBuyinLimit_Response, S.protocol.MSGID.MsgID_ModifyBuyinLimit_Request), this.bindingID(l.pb.GameId.Texas, S.protocol.MSGID.MsgID_ModifyBuyinLimit_Notice, S.protocol.MSGID.MsgID_ModifyBuyinLimit_Request), this.bindingID(l.pb.GameId.Texas, S.protocol.MSGID.MsgID_Snapshot_Response, S.protocol.MSGID.MsgID_Snapshot_Request), this.bindingID(l.pb.GameId.Texas, S.protocol.MSGID.MsgID_Buyout_Response, S.protocol.MSGID.MsgID_Buyout_Request), this.bindingID(l.pb.GameId.Texas, S.protocol.MSGID.MsgID_Buyout_Notice, S.protocol.MSGID.MsgID_Buyout_Request), this.bindingID(l.pb.GameId.Texas, S.protocol.MSGID.MsgID_HeartBeat_Response, S.protocol.MSGID.MsgID_HeartBeat_Request), this.bindingID(l.pb.GameId.Texas, S.protocol.MSGID.MsgID_InteractiveExpression_Response, S.protocol.MSGID.MsgID_InteractiveExpression_Request), this.bindingID(l.pb.GameId.Texas, S.protocol.MSGID.MsgID_InteractiveExpression_Notice, S.protocol.MSGID.MsgID_InteractiveExpression_Request), this.bindingID(l.pb.GameId.Texas, S.protocol.MSGID.MsgID_AddInsuranceTime_Response, S.protocol.MSGID.MsgID_AddInsuranceTime_Request), this.bindingID(l.pb.GameId.Texas, S.protocol.MSGID.MsgID_AddInsuranceTime_Notice, S.protocol.MSGID.MsgID_AddInsuranceTime_Request), this.bindingID(l.pb.GameId.Texas, S.protocol.MSGID.MsgID_AddRoomTime_Response, S.protocol.MSGID.MsgID_AddRoomTime_Request), this.bindingID(l.pb.GameId.Texas, S.protocol.MSGID.MsgID_AddRoomTime_Notice, S.protocol.MSGID.MsgID_AddRoomTime_Request), this.bindingID(l.pb.GameId.Texas, S.protocol.MSGID.MsgID_ProhibitSitdown_Response, S.protocol.MSGID.MsgID_ProhibitSitdown_Request), this.bindingID(l.pb.GameId.Texas, S.protocol.MSGID.MsgID_ProhibitSitdown_Notice, S.protocol.MSGID.MsgID_ProhibitSitdown_Request), this.bindingID(l.pb.GameId.Texas, S.protocol.MSGID.MsgID_ForceStandup_Response, S.protocol.MSGID.MsgID_ForceStandup_Request), this.bindingID(l.pb.GameId.Texas, S.protocol.MSGID.MsgID_ForceStandup_Notice, S.protocol.MSGID.MsgID_ForceStandup_Request), this.bindingID(l.pb.GameId.Texas, S.protocol.MSGID.MsgID_PauseGame_Response, S.protocol.MSGID.MsgID_PauseGame_Request), this.bindingID(l.pb.GameId.Texas, S.protocol.MSGID.MsgID_PauseGame_Notice, S.protocol.MSGID.MsgID_PauseGame_Request), this.bindingID(l.pb.GameId.Texas, S.protocol.MSGID.MsgID_CheckOutAndLeave_Response, S.protocol.MSGID.MsgID_CheckOutAndLeave_Request), this.bindingID(l.pb.GameId.Texas, S.protocol.MSGID.MsgID_CheckOutAndLeave_Notice, S.protocol.MSGID.MsgID_CheckOutAndLeave_Request), this.bindingID(l.pb.GameId.Texas, S.protocol.MSGID.MsgID_DefaultFold_Response, S.protocol.MSGID.MsgID_DefaultFold_Request), this.bindingID(l.pb.GameId.Texas, S.protocol.MSGID.MsgID_OwnerSetBuyinLimit_Response, S.protocol.MSGID.MsgID_OwnerSetBuyinLimit_Request), this.bindingID(l.pb.GameId.Texas, S.protocol.MSGID.MsgID_OwnerSetBuyinLimit_Notice, S.protocol.MSGID.MsgID_OwnerSetBuyinLimit_Request), this.bindingID(l.pb.GameId.Texas, S.protocol.MSGID.MsgID_PlayerBuyinsInfo_Response, S.protocol.MSGID.MsgID_PlayerBuyinsInfo_Request), this.bindingID(l.pb.GameId.Texas, S.protocol.MSGID.MsgID_PlayerBuyinsInfo_Notice, S.protocol.MSGID.MsgID_PlayerBuyinsInfo_Request), this.bindingID(l.pb.GameId.Texas, S.protocol.MSGID.MsgID_GameActionTurn_Response, S.protocol.MSGID.MsgID_GameActionTurn_Request), this.bindingID(l.pb.GameId.Texas, S.protocol.MSGID.MsgID_PhotoVerify_Response, S.protocol.MSGID.MsgID_PhotoVerify_Request), this.bindingID(l.pb.GameId.Texas, S.protocol.MSGID.MsgID_PhotoVerify_Notice, S.protocol.MSGID.MsgID_PhotoVerify_Request), this.bindingID(l.pb.GameId.Texas, S.protocol.MSGID.MsgID_UploadVerifyPhotoSucc_Response, S.protocol.MSGID.MsgID_UploadVerifyPhotoSucc_Request), this.bindingID(l.pb.GameId.Texas, S.protocol.MSGID.MsgID_UploadVerifyPhotoSucc_Notice, S.protocol.MSGID.MsgID_UploadVerifyPhotoSucc_Request), this.bindingID(l.pb.GameId.Texas, S.protocol.MSGID.MsgID_CheckAllianceRoomPriviledge_Response, S.protocol.MSGID.MsgID_CheckAllianceRoomPriviledge_Request), this.bindingID(l.pb.GameId.Texas, S.protocol.MSGID.MsgID_ForceShowCard_Response, S.protocol.MSGID.MsgID_ForceShowCard_Request), this.bindingID(l.pb.GameId.Texas, S.protocol.MSGID.MsgID_ForceShowCard_Notice, S.protocol.MSGID.MsgID_ForceShowCard_Request), this.bindingID(l.pb.GameId.Texas, S.protocol.MSGID.MsgID_AddRoomTimeCount_response, S.protocol.MSGID.MsgID_AddRoomTimeCount_Request), this.bindingID(l.pb.GameId.CowBoy, h.cowboy_proto.CMD.LOGIN_GAME_RESP, h.cowboy_proto.CMD.LOGIN_GAME_REQ), this.bindingID(l.pb.GameId.CowBoy, h.cowboy_proto.CMD.HEART_BEAT_RESP, h.cowboy_proto.CMD.HEART_BEAT_REQ), this.bindingID(l.pb.GameId.CowBoy, h.cowboy_proto.CMD.JOIN_ROOM_RESP, h.cowboy_proto.CMD.JOIN_ROOM_REQ), this.bindingID(l.pb.GameId.CowBoy, h.cowboy_proto.CMD.BET_RESP, h.cowboy_proto.CMD.BET_REQ), this.bindingID(l.pb.GameId.CowBoy, h.cowboy_proto.CMD.BET_NOTIFY, h.cowboy_proto.CMD.BET_REQ), this.bindingID(l.pb.GameId.CowBoy, h.cowboy_proto.CMD.LEAVE_ROOM_RESP, h.cowboy_proto.CMD.LEAVE_ROOM_REQ), this.bindingID(l.pb.GameId.CowBoy, h.cowboy_proto.CMD.ROOM_TREND_RSP, h.cowboy_proto.CMD.ROOM_TREND_REQ), this.bindingID(l.pb.GameId.CowBoy, h.cowboy_proto.CMD.ROOM_TREND_NOTICE, h.cowboy_proto.CMD.ROOM_TREND_REQ), this.bindingID(l.pb.GameId.CowBoy, h.cowboy_proto.CMD.AUTO_BET_RESP, h.cowboy_proto.CMD.AUTO_BET_REQ), this.bindingID(l.pb.GameId.CowBoy, h.cowboy_proto.CMD.PLAYER_LIST_RESP, h.cowboy_proto.CMD.PLAYER_LIST_REQ), this.bindingID(l.pb.GameId.VideoCowboy, h.cowboy_proto.CMD.LOGIN_GAME_RESP, h.cowboy_proto.CMD.LOGIN_GAME_REQ), this.bindingID(l.pb.GameId.VideoCowboy, h.cowboy_proto.CMD.HEART_BEAT_RESP, h.cowboy_proto.CMD.HEART_BEAT_REQ), this.bindingID(l.pb.GameId.VideoCowboy, h.cowboy_proto.CMD.JOIN_ROOM_RESP, h.cowboy_proto.CMD.JOIN_ROOM_REQ), this.bindingID(l.pb.GameId.VideoCowboy, h.cowboy_proto.CMD.BET_RESP, h.cowboy_proto.CMD.BET_REQ), this.bindingID(l.pb.GameId.VideoCowboy, h.cowboy_proto.CMD.BET_NOTIFY, h.cowboy_proto.CMD.BET_REQ), this.bindingID(l.pb.GameId.VideoCowboy, h.cowboy_proto.CMD.LEAVE_ROOM_RESP, h.cowboy_proto.CMD.LEAVE_ROOM_REQ), this.bindingID(l.pb.GameId.VideoCowboy, h.cowboy_proto.CMD.ROOM_TREND_RSP, h.cowboy_proto.CMD.ROOM_TREND_REQ), this.bindingID(l.pb.GameId.VideoCowboy, h.cowboy_proto.CMD.ROOM_TREND_NOTICE, h.cowboy_proto.CMD.ROOM_TREND_REQ), this.bindingID(l.pb.GameId.VideoCowboy, h.cowboy_proto.CMD.AUTO_BET_RESP, h.cowboy_proto.CMD.AUTO_BET_REQ), this.bindingID(l.pb.GameId.VideoCowboy, h.cowboy_proto.CMD.PLAYER_LIST_RESP, h.cowboy_proto.CMD.PLAYER_LIST_REQ), this.bindingID(l.pb.GameId.Jackfruit, R.jackfruit_proto.CMD.LOGIN_GAME_RESP, R.jackfruit_proto.CMD.LOGIN_GAME_REQ), this.bindingID(l.pb.GameId.Jackfruit, R.jackfruit_proto.CMD.JOIN_ROOM_RESP, R.jackfruit_proto.CMD.JOIN_ROOM_REQ), this.bindingID(l.pb.GameId.Jackfruit, R.jackfruit_proto.CMD.GAME_DATA_SYNC_RESP, R.jackfruit_proto.CMD.GAME_DATA_SYNC_REQ), this.bindingID(l.pb.GameId.Jackfruit, R.jackfruit_proto.CMD.SIT_DOWN_NOTIFY, R.jackfruit_proto.CMD.SIT_DOWN_REQ), this.bindingID(l.pb.GameId.Jackfruit, R.jackfruit_proto.CMD.SIT_DOWN_RESP, R.jackfruit_proto.CMD.SIT_DOWN_REQ), this.bindingID(l.pb.GameId.Jackfruit, R.jackfruit_proto.CMD.PLACE_CARD_OVER_RESP, R.jackfruit_proto.CMD.PLACE_CARD_OVER_REQ), this.bindingID(l.pb.GameId.Jackfruit, R.jackfruit_proto.CMD.PLACE_CARD_OVER_NOTIFY, R.jackfruit_proto.CMD.PLACE_CARD_OVER_REQ), this.bindingID(l.pb.GameId.Jackfruit, R.jackfruit_proto.CMD.STAND_UP_RESP, R.jackfruit_proto.CMD.STAND_UP_REQ), this.bindingID(l.pb.GameId.Jackfruit, R.jackfruit_proto.CMD.READY_RESP, R.jackfruit_proto.CMD.READY_REQ), this.bindingID(l.pb.GameId.Jackfruit, R.jackfruit_proto.CMD.READY_NOTIFY, R.jackfruit_proto.CMD.READY_REQ), this.bindingID(l.pb.GameId.Jackfruit, R.jackfruit_proto.CMD.GAME_RECORD_RESP, R.jackfruit_proto.CMD.GAME_RECORD_REQ), this.bindingID(l.pb.GameId.Jackfruit, R.jackfruit_proto.CMD.LEAVE_RESP, R.jackfruit_proto.CMD.LEAVE_REQ), this.bindingID(l.pb.GameId.Jackfruit, R.jackfruit_proto.CMD.SITUATION_RESP, R.jackfruit_proto.CMD.SITUATION_REQ), this.bindingID(l.pb.GameId.Jackfruit, R.jackfruit_proto.CMD.ACTION_DELAY_RESP, R.jackfruit_proto.CMD.ACTION_DELAY_REQ), this.bindingID(l.pb.GameId.Jackfruit, R.jackfruit_proto.CMD.ACTION_DELAY_NOTIFY, R.jackfruit_proto.CMD.ACTION_DELAY_REQ), this.bindingID(l.pb.GameId.Jackfruit, R.jackfruit_proto.CMD.SEND_BARRAGE_RESP, R.jackfruit_proto.CMD.SEND_BARRAGE_REQ), this.bindingID(l.pb.GameId.Jackfruit, R.jackfruit_proto.CMD.SEND_BARRAGE_NOTIFY, R.jackfruit_proto.CMD.SEND_BARRAGE_REQ)
        }
        bindingID(e, o, t) {
            let s = new C;
            s.serverID = e, s.sendID = t, s.recvID = o, this.totalMsgMap.push(s)
        }
        static getInstance() {
            return e.g_instance && e.g_instance.loadingNode && c(e.g_instance.loadingNode, !0) || (e.g_instance = new e, e.g_instance.init()), e.g_instance
        }
    }).g_instance = void 0, u = m)) || u);
    o._RF.pop()
}