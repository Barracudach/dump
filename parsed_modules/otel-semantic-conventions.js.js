import * as T from "./cjs-loader.mjs.js";

function main() {
    let _;
    E("default", void 0);
    const A = E("__cjsMetaURL", S.meta.url);
    T.define(A, (function(S, T, A, R, e) {
        function s(E) {
            for (var S = {}, T = E.length, _ = 0; _ < T; _++) {
                var A = E[_];
                A && (S[String(A).toUpperCase().replace(/[-.]/g, "_")] = A)
            }
            return S
        }
        var N = "aws.lambda.invoked_arn",
            t = "db.system",
            O = "db.connection_string",
            o = "db.user",
            r = "db.jdbc.driver_classname",
            M = "db.name",
            L = "db.statement",
            C = "db.operation",
            U = "db.mssql.instance_name",
            a = "db.cassandra.keyspace",
            D = "db.cassandra.page_size",
            I = "db.cassandra.consistency_level",
            p = "db.cassandra.table",
            n = "db.cassandra.idempotence",
            P = "db.cassandra.speculative_execution_count",
            V = "db.cassandra.coordinator.id",
            i = "db.cassandra.coordinator.dc",
            c = "db.hbase.namespace",
            x = "db.redis.database_index",
            d = "db.mongodb.collection",
            G = "db.sql.table",
            m = "exception.type",
            Y = "exception.message",
            B = "exception.stacktrace",
            H = "exception.escaped",
            l = "faas.trigger",
            u = "faas.execution",
            g = "faas.document.collection",
            b = "faas.document.operation",
            K = "faas.document.time",
            F = "faas.document.name",
            h = "faas.time",
            y = "faas.cron",
            W = "faas.coldstart",
            v = "faas.invoked_name",
            k = "faas.invoked_provider",
            w = "faas.invoked_region",
            f = "net.transport",
            Q = "net.peer.ip",
            J = "net.peer.port",
            X = "net.peer.name",
            q = "net.host.ip",
            j = "net.host.port",
            Z = "net.host.name",
            z = "net.host.connection.type",
            $ = "net.host.connection.subtype",
            EE = "net.host.carrier.name",
            SE = "net.host.carrier.mcc",
            TE = "net.host.carrier.mnc",
            _E = "net.host.carrier.icc",
            AE = "peer.service",
            RE = "enduser.id",
            eE = "enduser.role",
            sE = "enduser.scope",
            NE = "thread.id",
            tE = "thread.name",
            OE = "code.function",
            oE = "code.namespace",
            rE = "code.filepath",
            ME = "code.lineno",
            LE = "http.method",
            CE = "http.url",
            UE = "http.target",
            aE = "http.host",
            DE = "http.scheme",
            IE = "http.status_code",
            pE = "http.flavor",
            nE = "http.user_agent",
            PE = "http.request_content_length",
            VE = "http.request_content_length_uncompressed",
            iE = "http.response_content_length",
            cE = "http.response_content_length_uncompressed",
            xE = "http.server_name",
            dE = "http.route",
            GE = "http.client_ip",
            mE = "aws.dynamodb.table_names",
            YE = "aws.dynamodb.consumed_capacity",
            BE = "aws.dynamodb.item_collection_metrics",
            HE = "aws.dynamodb.provisioned_read_capacity",
            lE = "aws.dynamodb.provisioned_write_capacity",
            uE = "aws.dynamodb.consistent_read",
            gE = "aws.dynamodb.projection",
            bE = "aws.dynamodb.limit",
            KE = "aws.dynamodb.attributes_to_get",
            FE = "aws.dynamodb.index_name",
            hE = "aws.dynamodb.select",
            yE = "aws.dynamodb.global_secondary_indexes",
            WE = "aws.dynamodb.local_secondary_indexes",
            vE = "aws.dynamodb.exclusive_start_table",
            kE = "aws.dynamodb.table_count",
            wE = "aws.dynamodb.scan_forward",
            fE = "aws.dynamodb.segment",
            QE = "aws.dynamodb.total_segments",
            JE = "aws.dynamodb.count",
            XE = "aws.dynamodb.scanned_count",
            qE = "aws.dynamodb.attribute_definitions",
            jE = "aws.dynamodb.global_secondary_index_updates",
            ZE = "messaging.system",
            zE = "messaging.destination",
            $E = "messaging.destination_kind",
            ES = "messaging.temp_destination",
            SS = "messaging.protocol",
            TS = "messaging.protocol_version",
            _S = "messaging.url",
            AS = "messaging.message_id",
            RS = "messaging.conversation_id",
            eS = "messaging.message_payload_size_bytes",
            sS = "messaging.message_payload_compressed_size_bytes",
            NS = "messaging.operation",
            tS = "messaging.consumer_id",
            OS = "messaging.rabbitmq.routing_key",
            oS = "messaging.kafka.message_key",
            rS = "messaging.kafka.consumer_group",
            MS = "messaging.kafka.client_id",
            LS = "messaging.kafka.partition",
            CS = "messaging.kafka.tombstone",
            US = "rpc.system",
            aS = "rpc.service",
            DS = "rpc.method",
            IS = "rpc.grpc.status_code",
            pS = "rpc.jsonrpc.version",
            nS = "rpc.jsonrpc.request_id",
            PS = "rpc.jsonrpc.error_code",
            VS = "rpc.jsonrpc.error_message",
            iS = "message.type",
            cS = "message.id",
            xS = "message.compressed_size",
            dS = "message.uncompressed_size",
            GS = s([N, t, O, o, r, M, L, C, U, a, D, I, p, n, P, V, i, c, x, d, G, m, Y, B, H, l, u, g, b, K, F, h, y, W, v, k, w, f, Q, J, X, q, j, Z, z, $, EE, SE, TE, _E, AE, RE, eE, sE, NE, tE, OE, oE, rE, ME, LE, CE, UE, aE, DE, IE, pE, nE, PE, VE, iE, cE, xE, dE, GE, mE, YE, BE, HE, lE, uE, gE, bE, KE, FE, hE, yE, WE, vE, kE, wE, fE, QE, JE, XE, qE, jE, ZE, zE, $E, ES, SS, TS, _S, AS, RS, eS, sS, NS, tS, OS, oS, rS, MS, LS, CS, US, aS, DS, IS, pS, nS, PS, VS, iS, cS, xS, dS]),
            mS = "other_sql",
            YS = "mssql",
            BS = "mysql",
            HS = "oracle",
            lS = "postgresql",
            uS = "redshift",
            gS = "hive",
            bS = "cloudscape",
            KS = "hsqldb",
            FS = "progress",
            hS = "maxdb",
            yS = "hanadb",
            WS = "ingres",
            vS = "firstsql",
            kS = "cache",
            wS = "adabas",
            fS = "firebird",
            QS = "derby",
            JS = "filemaker",
            XS = "informix",
            qS = "instantdb",
            jS = "interbase",
            ZS = "mariadb",
            zS = "netezza",
            $S = "pervasive",
            ET = "pointbase",
            ST = "sqlite",
            TT = "sybase",
            _T = "teradata",
            AT = "vertica",
            RT = "coldfusion",
            eT = "cassandra",
            sT = "hbase",
            NT = "mongodb",
            tT = "redis",
            OT = "couchbase",
            oT = "couchdb",
            rT = "cosmosdb",
            MT = "dynamodb",
            LT = "neo4j",
            CT = "geode",
            UT = "elasticsearch",
            aT = "memcached",
            DT = "cockroachdb",
            IT = s([mS, YS, BS, HS, "db2", lS, uS, gS, bS, KS, FS, hS, yS, WS, vS, "edb", kS, wS, fS, QS, JS, XS, qS, jS, ZS, zS, $S, ET, ST, TT, _T, AT, "h2", RT, eT, sT, NT, tT, OT, oT, rT, MT, LT, CT, UT, aT, DT]),
            pT = "each_quorum",
            nT = "quorum",
            PT = "local_quorum",
            VT = "three",
            iT = "local_one",
            cT = "serial",
            xT = "local_serial",
            dT = s(["all", pT, nT, PT, "one", "two", VT, iT, "any", cT, xT]),
            GT = "datasource",
            mT = "http",
            YT = "pubsub",
            BT = "timer",
            HT = "other",
            lT = s([GT, mT, YT, BT, HT]),
            uT = "insert",
            gT = "edit",
            bT = "delete",
            KT = s([uT, gT, bT]),
            FT = "alibaba_cloud",
            hT = "azure",
            yT = s([FT, "aws", hT, "gcp"]),
            WT = "ip_tcp",
            vT = "ip_udp",
            kT = "unix",
            wT = "pipe",
            fT = "inproc",
            QT = "other",
            JT = s([WT, vT, "ip", kT, wT, fT, QT]),
            XT = "wifi",
            qT = "wired",
            jT = "cell",
            ZT = "unavailable",
            zT = "unknown",
            $T = s([XT, qT, jT, ZT, zT]),
            E_ = "gprs",
            S_ = "edge",
            T_ = "umts",
            __ = "cdma",
            A_ = "evdo_0",
            R_ = "evdo_a",
            e_ = "cdma2000_1xrtt",
            s_ = "hsdpa",
            N_ = "hsupa",
            t_ = "hspa",
            O_ = "iden",
            o_ = "evdo_b",
            r_ = "ehrpd",
            M_ = "hspap",
            L_ = "td_scdma",
            C_ = "iwlan",
            U_ = "nrnsa",
            a_ = "lte_ca",
            D_ = s([E_, S_, T_, __, A_, R_, e_, s_, N_, t_, O_, o_, "lte", r_, M_, "gsm", L_, C_, "nr", U_, a_]),
            I_ = "SPDY",
            p_ = "QUIC",
            n_ = {
                HTTP_1_0: "1.0",
                HTTP_1_1: "1.1",
                HTTP_2_0: "2.0",
                SPDY: I_,
                QUIC: p_
            },
            P_ = "queue",
            V_ = "topic",
            i_ = s([P_, V_]),
            c_ = "receive",
            x_ = "process",
            d_ = s([c_, x_]),
            G_ = {
                OK: 0,
                CANCELLED: 1,
                UNKNOWN: 2,
                INVALID_ARGUMENT: 3,
                DEADLINE_EXCEEDED: 4,
                NOT_FOUND: 5,
                ALREADY_EXISTS: 6,
                PERMISSION_DENIED: 7,
                RESOURCE_EXHAUSTED: 8,
                FAILED_PRECONDITION: 9,
                ABORTED: 10,
                OUT_OF_RANGE: 11,
                UNIMPLEMENTED: 12,
                INTERNAL: 13,
                UNAVAILABLE: 14,
                DATA_LOSS: 15,
                UNAUTHENTICATED: 16
            },
            m_ = "SENT",
            Y_ = "RECEIVED",
            B_ = s([m_, Y_]),
            H_ = "cloud.provider",
            l_ = "cloud.account.id",
            u_ = "cloud.region",
            g_ = "cloud.availability_zone",
            b_ = "cloud.platform",
            K_ = "aws.ecs.container.arn",
            F_ = "aws.ecs.cluster.arn",
            h_ = "aws.ecs.launchtype",
            y_ = "aws.ecs.task.arn",
            W_ = "aws.ecs.task.family",
            v_ = "aws.ecs.task.revision",
            k_ = "aws.eks.cluster.arn",
            w_ = "aws.log.group.names",
            f_ = "aws.log.group.arns",
            Q_ = "aws.log.stream.names",
            J_ = "aws.log.stream.arns",
            X_ = "container.name",
            q_ = "container.id",
            j_ = "container.runtime",
            Z_ = "container.image.name",
            z_ = "container.image.tag",
            $_ = "deployment.environment",
            EA = "device.id",
            SA = "device.model.identifier",
            TA = "device.model.name",
            _A = "faas.name",
            AA = "faas.id",
            RA = "faas.version",
            eA = "faas.instance",
            sA = "faas.max_memory",
            NA = "host.id",
            tA = "host.name",
            OA = "host.type",
            oA = "host.arch",
            rA = "host.image.name",
            MA = "host.image.id",
            LA = "host.image.version",
            CA = "k8s.cluster.name",
            UA = "k8s.node.name",
            aA = "k8s.node.uid",
            DA = "k8s.namespace.name",
            IA = "k8s.pod.uid",
            pA = "k8s.pod.name",
            nA = "k8s.container.name",
            PA = "k8s.replicaset.uid",
            VA = "k8s.replicaset.name",
            iA = "k8s.deployment.uid",
            cA = "k8s.deployment.name",
            xA = "k8s.statefulset.uid",
            dA = "k8s.statefulset.name",
            GA = "k8s.daemonset.uid",
            mA = "k8s.daemonset.name",
            YA = "k8s.job.uid",
            BA = "k8s.job.name",
            HA = "k8s.cronjob.uid",
            lA = "k8s.cronjob.name",
            uA = "os.type",
            gA = "os.description",
            bA = "os.name",
            KA = "os.version",
            FA = "process.pid",
            hA = "process.executable.name",
            yA = "process.executable.path",
            WA = "process.command",
            vA = "process.command_line",
            kA = "process.command_args",
            wA = "process.owner",
            fA = "process.runtime.name",
            QA = "process.runtime.version",
            JA = "process.runtime.description",
            XA = "service.name",
            qA = "service.namespace",
            jA = "service.instance.id",
            ZA = "service.version",
            zA = "telemetry.sdk.name",
            $A = "telemetry.sdk.language",
            ER = "telemetry.sdk.version",
            SR = "telemetry.auto.version",
            TR = "webengine.name",
            _R = "webengine.version",
            AR = "webengine.description",
            RR = s([H_, l_, u_, g_, b_, K_, F_, h_, y_, W_, v_, k_, w_, f_, Q_, J_, X_, q_, j_, Z_, z_, $_, EA, SA, TA, _A, AA, RA, eA, sA, NA, tA, OA, oA, rA, MA, LA, CA, UA, aA, DA, IA, pA, nA, PA, VA, iA, cA, xA, dA, GA, mA, YA, BA, HA, lA, uA, gA, bA, KA, FA, hA, yA, WA, vA, kA, wA, fA, QA, JA, XA, qA, jA, ZA, zA, $A, ER, SR, TR, _R, AR]),
            eR = "alibaba_cloud",
            sR = "azure",
            NR = s([eR, "aws", sR, "gcp"]),
            tR = "alibaba_cloud_ecs",
            OR = "alibaba_cloud_fc",
            oR = "aws_ec2",
            rR = "aws_ecs",
            MR = "aws_eks",
            LR = "aws_lambda",
            CR = "aws_elastic_beanstalk",
            UR = "azure_vm",
            aR = "azure_container_instances",
            DR = "azure_aks",
            IR = "azure_functions",
            pR = "azure_app_service",
            nR = "gcp_compute_engine",
            PR = "gcp_cloud_run",
            VR = "gcp_kubernetes_engine",
            iR = "gcp_cloud_functions",
            cR = "gcp_app_engine",
            xR = s([tR, OR, oR, rR, MR, LR, CR, UR, aR, DR, IR, pR, nR, PR, VR, iR, cR]),
            dR = "fargate",
            GR = s(["ec2", dR]),
            mR = "amd64",
            YR = "arm32",
            BR = "arm64",
            HR = "ia64",
            lR = "ppc32",
            uR = "ppc64",
            gR = s([mR, YR, BR, HR, lR, uR, "x86"]),
            bR = "windows",
            KR = "linux",
            FR = "darwin",
            hR = "freebsd",
            yR = "netbsd",
            WR = "openbsd",
            vR = "dragonflybsd",
            kR = "hpux",
            wR = "solaris",
            fR = "z_os",
            QR = s([bR, KR, FR, hR, yR, WR, vR, kR, "aix", wR, fR]),
            JR = "dotnet",
            XR = "erlang",
            qR = "java",
            jR = "nodejs",
            ZR = "python",
            zR = "ruby",
            $R = "webjs",
            Ee = s(["cpp", JR, XR, "go", qR, jR, "php", ZR, zR, $R]);
        S.ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT_VALUE_ABORTED = "aborted", S.ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT_VALUE_HANDLED = "handled", S.ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT_VALUE_SKIPPED = "skipped", S.ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT_VALUE_UNHANDLED = "unhandled", S.ASPNETCORE_RATE_LIMITING_RESULT_VALUE_ACQUIRED = "acquired", S.ASPNETCORE_RATE_LIMITING_RESULT_VALUE_ENDPOINT_LIMITER = "endpoint_limiter", S.ASPNETCORE_RATE_LIMITING_RESULT_VALUE_GLOBAL_LIMITER = "global_limiter", S.ASPNETCORE_RATE_LIMITING_RESULT_VALUE_REQUEST_CANCELED = "request_canceled", S.ASPNETCORE_ROUTING_MATCH_STATUS_VALUE_FAILURE = "failure", S.ASPNETCORE_ROUTING_MATCH_STATUS_VALUE_SUCCESS = "success", S.ATTR_ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT = "aspnetcore.diagnostics.exception.result", S.ATTR_ASPNETCORE_DIAGNOSTICS_HANDLER_TYPE = "aspnetcore.diagnostics.handler.type", S.ATTR_ASPNETCORE_RATE_LIMITING_POLICY = "aspnetcore.rate_limiting.policy", S.ATTR_ASPNETCORE_RATE_LIMITING_RESULT = "aspnetcore.rate_limiting.result", S.ATTR_ASPNETCORE_REQUEST_IS_UNHANDLED = "aspnetcore.request.is_unhandled", S.ATTR_ASPNETCORE_ROUTING_IS_FALLBACK = "aspnetcore.routing.is_fallback", S.ATTR_ASPNETCORE_ROUTING_MATCH_STATUS = "aspnetcore.routing.match_status", S.ATTR_CLIENT_ADDRESS = "client.address", S.ATTR_CLIENT_PORT = "client.port", S.ATTR_ERROR_TYPE = "error.type", S.ATTR_EXCEPTION_ESCAPED = "exception.escaped", S.ATTR_EXCEPTION_MESSAGE = "exception.message", S.ATTR_EXCEPTION_STACKTRACE = "exception.stacktrace", S.ATTR_EXCEPTION_TYPE = "exception.type", S.ATTR_HTTP_REQUEST_HEADER = function(E) {
            return "http.request.header." + E
        }, S.ATTR_HTTP_REQUEST_METHOD = "http.request.method", S.ATTR_HTTP_REQUEST_METHOD_ORIGINAL = "http.request.method_original", S.ATTR_HTTP_REQUEST_RESEND_COUNT = "http.request.resend_count", S.ATTR_HTTP_RESPONSE_HEADER = function(E) {
            return "http.response.header." + E
        }, S.ATTR_HTTP_RESPONSE_STATUS_CODE = "http.response.status_code", S.ATTR_HTTP_ROUTE = "http.route", S.ATTR_JVM_GC_ACTION = "jvm.gc.action", S.ATTR_JVM_GC_NAME = "jvm.gc.name", S.ATTR_JVM_MEMORY_POOL_NAME = "jvm.memory.pool.name", S.ATTR_JVM_MEMORY_TYPE = "jvm.memory.type", S.ATTR_JVM_THREAD_DAEMON = "jvm.thread.daemon", S.ATTR_JVM_THREAD_STATE = "jvm.thread.state", S.ATTR_NETWORK_LOCAL_ADDRESS = "network.local.address", S.ATTR_NETWORK_LOCAL_PORT = "network.local.port", S.ATTR_NETWORK_PEER_ADDRESS = "network.peer.address", S.ATTR_NETWORK_PEER_PORT = "network.peer.port", S.ATTR_NETWORK_PROTOCOL_NAME = "network.protocol.name", S.ATTR_NETWORK_PROTOCOL_VERSION = "network.protocol.version", S.ATTR_NETWORK_TRANSPORT = "network.transport", S.ATTR_NETWORK_TYPE = "network.type", S.ATTR_OTEL_SCOPE_NAME = "otel.scope.name", S.ATTR_OTEL_SCOPE_VERSION = "otel.scope.version", S.ATTR_OTEL_STATUS_CODE = "otel.status_code", S.ATTR_OTEL_STATUS_DESCRIPTION = "otel.status_description", S.ATTR_SERVER_ADDRESS = "server.address", S.ATTR_SERVER_PORT = "server.port", S.ATTR_SERVICE_NAME = "service.name", S.ATTR_SERVICE_VERSION = "service.version", S.ATTR_SIGNALR_CONNECTION_STATUS = "signalr.connection.status", S.ATTR_SIGNALR_TRANSPORT = "signalr.transport", S.ATTR_TELEMETRY_SDK_LANGUAGE = "telemetry.sdk.language", S.ATTR_TELEMETRY_SDK_NAME = "telemetry.sdk.name", S.ATTR_TELEMETRY_SDK_VERSION = "telemetry.sdk.version", S.ATTR_URL_FRAGMENT = "url.fragment", S.ATTR_URL_FULL = "url.full", S.ATTR_URL_PATH = "url.path", S.ATTR_URL_QUERY = "url.query", S.ATTR_URL_SCHEME = "url.scheme", S.ATTR_USER_AGENT_ORIGINAL = "user_agent.original", S.AWSECSLAUNCHTYPEVALUES_EC2 = "ec2", S.AWSECSLAUNCHTYPEVALUES_FARGATE = "fargate", S.AwsEcsLaunchtypeValues = GR, S.CLOUDPLATFORMVALUES_ALIBABA_CLOUD_ECS = "alibaba_cloud_ecs", S.CLOUDPLATFORMVALUES_ALIBABA_CLOUD_FC = "alibaba_cloud_fc", S.CLOUDPLATFORMVALUES_AWS_EC2 = "aws_ec2", S.CLOUDPLATFORMVALUES_AWS_ECS = "aws_ecs", S.CLOUDPLATFORMVALUES_AWS_EKS = "aws_eks", S.CLOUDPLATFORMVALUES_AWS_ELASTIC_BEANSTALK = "aws_elastic_beanstalk", S.CLOUDPLATFORMVALUES_AWS_LAMBDA = "aws_lambda", S.CLOUDPLATFORMVALUES_AZURE_AKS = "azure_aks", S.CLOUDPLATFORMVALUES_AZURE_APP_SERVICE = "azure_app_service", S.CLOUDPLATFORMVALUES_AZURE_CONTAINER_INSTANCES = "azure_container_instances", S.CLOUDPLATFORMVALUES_AZURE_FUNCTIONS = "azure_functions", S.CLOUDPLATFORMVALUES_AZURE_VM = "azure_vm", S.CLOUDPLATFORMVALUES_GCP_APP_ENGINE = "gcp_app_engine", S.CLOUDPLATFORMVALUES_GCP_CLOUD_FUNCTIONS = "gcp_cloud_functions", S.CLOUDPLATFORMVALUES_GCP_CLOUD_RUN = "gcp_cloud_run", S.CLOUDPLATFORMVALUES_GCP_COMPUTE_ENGINE = "gcp_compute_engine", S.CLOUDPLATFORMVALUES_GCP_KUBERNETES_ENGINE = "gcp_kubernetes_engine", S.CLOUDPROVIDERVALUES_ALIBABA_CLOUD = "alibaba_cloud", S.CLOUDPROVIDERVALUES_AWS = "aws", S.CLOUDPROVIDERVALUES_AZURE = "azure", S.CLOUDPROVIDERVALUES_GCP = "gcp", S.CloudPlatformValues = xR, S.CloudProviderValues = NR, S.DBCASSANDRACONSISTENCYLEVELVALUES_ALL = "all", S.DBCASSANDRACONSISTENCYLEVELVALUES_ANY = "any", S.DBCASSANDRACONSISTENCYLEVELVALUES_EACH_QUORUM = "each_quorum", S.DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_ONE = "local_one", S.DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_QUORUM = "local_quorum", S.DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_SERIAL = "local_serial", S.DBCASSANDRACONSISTENCYLEVELVALUES_ONE = "one", S.DBCASSANDRACONSISTENCYLEVELVALUES_QUORUM = "quorum", S.DBCASSANDRACONSISTENCYLEVELVALUES_SERIAL = "serial", S.DBCASSANDRACONSISTENCYLEVELVALUES_THREE = "three", S.DBCASSANDRACONSISTENCYLEVELVALUES_TWO = "two", S.DBSYSTEMVALUES_ADABAS = "adabas", S.DBSYSTEMVALUES_CACHE = "cache", S.DBSYSTEMVALUES_CASSANDRA = "cassandra", S.DBSYSTEMVALUES_CLOUDSCAPE = "cloudscape", S.DBSYSTEMVALUES_COCKROACHDB = "cockroachdb", S.DBSYSTEMVALUES_COLDFUSION = "coldfusion", S.DBSYSTEMVALUES_COSMOSDB = "cosmosdb", S.DBSYSTEMVALUES_COUCHBASE = "couchbase", S.DBSYSTEMVALUES_COUCHDB = "couchdb", S.DBSYSTEMVALUES_DB2 = "db2", S.DBSYSTEMVALUES_DERBY = "derby", S.DBSYSTEMVALUES_DYNAMODB = "dynamodb", S.DBSYSTEMVALUES_EDB = "edb", S.DBSYSTEMVALUES_ELASTICSEARCH = "elasticsearch", S.DBSYSTEMVALUES_FILEMAKER = "filemaker", S.DBSYSTEMVALUES_FIREBIRD = "firebird", S.DBSYSTEMVALUES_FIRSTSQL = "firstsql", S.DBSYSTEMVALUES_GEODE = "geode", S.DBSYSTEMVALUES_H2 = "h2", S.DBSYSTEMVALUES_HANADB = "hanadb", S.DBSYSTEMVALUES_HBASE = "hbase", S.DBSYSTEMVALUES_HIVE = "hive", S.DBSYSTEMVALUES_HSQLDB = "hsqldb", S.DBSYSTEMVALUES_INFORMIX = "informix", S.DBSYSTEMVALUES_INGRES = "ingres", S.DBSYSTEMVALUES_INSTANTDB = "instantdb", S.DBSYSTEMVALUES_INTERBASE = "interbase", S.DBSYSTEMVALUES_MARIADB = "mariadb", S.DBSYSTEMVALUES_MAXDB = "maxdb", S.DBSYSTEMVALUES_MEMCACHED = "memcached", S.DBSYSTEMVALUES_MONGODB = "mongodb", S.DBSYSTEMVALUES_MSSQL = "mssql", S.DBSYSTEMVALUES_MYSQL = "mysql", S.DBSYSTEMVALUES_NEO4J = "neo4j", S.DBSYSTEMVALUES_NETEZZA = "netezza", S.DBSYSTEMVALUES_ORACLE = "oracle", S.DBSYSTEMVALUES_OTHER_SQL = "other_sql", S.DBSYSTEMVALUES_PERVASIVE = "pervasive", S.DBSYSTEMVALUES_POINTBASE = "pointbase", S.DBSYSTEMVALUES_POSTGRESQL = "postgresql", S.DBSYSTEMVALUES_PROGRESS = "progress", S.DBSYSTEMVALUES_REDIS = "redis", S.DBSYSTEMVALUES_REDSHIFT = "redshift", S.DBSYSTEMVALUES_SQLITE = "sqlite", S.DBSYSTEMVALUES_SYBASE = "sybase", S.DBSYSTEMVALUES_TERADATA = "teradata", S.DBSYSTEMVALUES_VERTICA = "vertica", S.DbCassandraConsistencyLevelValues = dT, S.DbSystemValues = IT, S.ERROR_TYPE_VALUE_OTHER = "_OTHER", S.FAASDOCUMENTOPERATIONVALUES_DELETE = "delete", S.FAASDOCUMENTOPERATIONVALUES_EDIT = "edit", S.FAASDOCUMENTOPERATIONVALUES_INSERT = "insert", S.FAASINVOKEDPROVIDERVALUES_ALIBABA_CLOUD = "alibaba_cloud", S.FAASINVOKEDPROVIDERVALUES_AWS = "aws", S.FAASINVOKEDPROVIDERVALUES_AZURE = "azure", S.FAASINVOKEDPROVIDERVALUES_GCP = "gcp", S.FAASTRIGGERVALUES_DATASOURCE = "datasource", S.FAASTRIGGERVALUES_HTTP = "http", S.FAASTRIGGERVALUES_OTHER = "other", S.FAASTRIGGERVALUES_PUBSUB = "pubsub", S.FAASTRIGGERVALUES_TIMER = "timer", S.FaasDocumentOperationValues = KT, S.FaasInvokedProviderValues = yT, S.FaasTriggerValues = lT, S.HOSTARCHVALUES_AMD64 = "amd64", S.HOSTARCHVALUES_ARM32 = "arm32", S.HOSTARCHVALUES_ARM64 = "arm64", S.HOSTARCHVALUES_IA64 = "ia64", S.HOSTARCHVALUES_PPC32 = "ppc32", S.HOSTARCHVALUES_PPC64 = "ppc64", S.HOSTARCHVALUES_X86 = "x86", S.HTTPFLAVORVALUES_HTTP_1_0 = "1.0", S.HTTPFLAVORVALUES_HTTP_1_1 = "1.1", S.HTTPFLAVORVALUES_HTTP_2_0 = "2.0", S.HTTPFLAVORVALUES_QUIC = "QUIC", S.HTTPFLAVORVALUES_SPDY = "SPDY", S.HTTP_REQUEST_METHOD_VALUE_CONNECT = "CONNECT", S.HTTP_REQUEST_METHOD_VALUE_DELETE = "DELETE", S.HTTP_REQUEST_METHOD_VALUE_GET = "GET", S.HTTP_REQUEST_METHOD_VALUE_HEAD = "HEAD", S.HTTP_REQUEST_METHOD_VALUE_OPTIONS = "OPTIONS", S.HTTP_REQUEST_METHOD_VALUE_OTHER = "_OTHER", S.HTTP_REQUEST_METHOD_VALUE_PATCH = "PATCH", S.HTTP_REQUEST_METHOD_VALUE_POST = "POST", S.HTTP_REQUEST_METHOD_VALUE_PUT = "PUT", S.HTTP_REQUEST_METHOD_VALUE_TRACE = "TRACE", S.HostArchValues = gR, S.HttpFlavorValues = n_, S.JVM_MEMORY_TYPE_VALUE_HEAP = "heap", S.JVM_MEMORY_TYPE_VALUE_NON_HEAP = "non_heap", S.JVM_THREAD_STATE_VALUE_BLOCKED = "blocked", S.JVM_THREAD_STATE_VALUE_NEW = "new", S.JVM_THREAD_STATE_VALUE_RUNNABLE = "runnable", S.JVM_THREAD_STATE_VALUE_TERMINATED = "terminated", S.JVM_THREAD_STATE_VALUE_TIMED_WAITING = "timed_waiting", S.JVM_THREAD_STATE_VALUE_WAITING = "waiting", S.MESSAGETYPEVALUES_RECEIVED = "RECEIVED", S.MESSAGETYPEVALUES_SENT = "SENT", S.MESSAGINGDESTINATIONKINDVALUES_QUEUE = "queue", S.MESSAGINGDESTINATIONKINDVALUES_TOPIC = "topic", S.MESSAGINGOPERATIONVALUES_PROCESS = "process", S.MESSAGINGOPERATIONVALUES_RECEIVE = "receive", S.METRIC_ASPNETCORE_DIAGNOSTICS_EXCEPTIONS = "aspnetcore.diagnostics.exceptions", S.METRIC_ASPNETCORE_RATE_LIMITING_ACTIVE_REQUEST_LEASES = "aspnetcore.rate_limiting.active_request_leases", S.METRIC_ASPNETCORE_RATE_LIMITING_QUEUED_REQUESTS = "aspnetcore.rate_limiting.queued_requests", S.METRIC_ASPNETCORE_RATE_LIMITING_REQUESTS = "aspnetcore.rate_limiting.requests", S.METRIC_ASPNETCORE_RATE_LIMITING_REQUEST_LEASE_DURATION = "aspnetcore.rate_limiting.request_lease.duration", S.METRIC_ASPNETCORE_RATE_LIMITING_REQUEST_TIME_IN_QUEUE = "aspnetcore.rate_limiting.request.time_in_queue", S.METRIC_ASPNETCORE_ROUTING_MATCH_ATTEMPTS = "aspnetcore.routing.match_attempts", S.METRIC_HTTP_CLIENT_REQUEST_DURATION = "http.client.request.duration", S.METRIC_HTTP_SERVER_REQUEST_DURATION = "http.server.request.duration", S.METRIC_JVM_CLASS_COUNT = "jvm.class.count", S.METRIC_JVM_CLASS_LOADED = "jvm.class.loaded", S.METRIC_JVM_CLASS_UNLOADED = "jvm.class.unloaded", S.METRIC_JVM_CPU_COUNT = "jvm.cpu.count", S.METRIC_JVM_CPU_RECENT_UTILIZATION = "jvm.cpu.recent_utilization", S.METRIC_JVM_CPU_TIME = "jvm.cpu.time", S.METRIC_JVM_GC_DURATION = "jvm.gc.duration", S.METRIC_JVM_MEMORY_COMMITTED = "jvm.memory.committed", S.METRIC_JVM_MEMORY_LIMIT = "jvm.memory.limit", S.METRIC_JVM_MEMORY_USED = "jvm.memory.used", S.METRIC_JVM_MEMORY_USED_AFTER_LAST_GC = "jvm.memory.used_after_last_gc", S.METRIC_JVM_THREAD_COUNT = "jvm.thread.count", S.METRIC_KESTREL_ACTIVE_CONNECTIONS = "kestrel.active_connections", S.METRIC_KESTREL_ACTIVE_TLS_HANDSHAKES = "kestrel.active_tls_handshakes", S.METRIC_KESTREL_CONNECTION_DURATION = "kestrel.connection.duration", S.METRIC_KESTREL_QUEUED_CONNECTIONS = "kestrel.queued_connections", S.METRIC_KESTREL_QUEUED_REQUESTS = "kestrel.queued_requests", S.METRIC_KESTREL_REJECTED_CONNECTIONS = "kestrel.rejected_connections", S.METRIC_KESTREL_TLS_HANDSHAKE_DURATION = "kestrel.tls_handshake.duration", S.METRIC_KESTREL_UPGRADED_CONNECTIONS = "kestrel.upgraded_connections", S.METRIC_SIGNALR_SERVER_ACTIVE_CONNECTIONS = "signalr.server.active_connections", S.METRIC_SIGNALR_SERVER_CONNECTION_DURATION = "signalr.server.connection.duration", S.MessageTypeValues = B_, S.MessagingDestinationKindValues = i_, S.MessagingOperationValues = d_, S.NETHOSTCONNECTIONSUBTYPEVALUES_CDMA = "cdma", S.NETHOSTCONNECTIONSUBTYPEVALUES_CDMA2000_1XRTT = "cdma2000_1xrtt", S.NETHOSTCONNECTIONSUBTYPEVALUES_EDGE = "edge", S.NETHOSTCONNECTIONSUBTYPEVALUES_EHRPD = "ehrpd", S.NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_0 = "evdo_0", S.NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_A = "evdo_a", S.NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_B = "evdo_b", S.NETHOSTCONNECTIONSUBTYPEVALUES_GPRS = "gprs", S.NETHOSTCONNECTIONSUBTYPEVALUES_GSM = "gsm", S.NETHOSTCONNECTIONSUBTYPEVALUES_HSDPA = "hsdpa", S.NETHOSTCONNECTIONSUBTYPEVALUES_HSPA = "hspa", S.NETHOSTCONNECTIONSUBTYPEVALUES_HSPAP = "hspap", S.NETHOSTCONNECTIONSUBTYPEVALUES_HSUPA = "hsupa", S.NETHOSTCONNECTIONSUBTYPEVALUES_IDEN = "iden", S.NETHOSTCONNECTIONSUBTYPEVALUES_IWLAN = "iwlan", S.NETHOSTCONNECTIONSUBTYPEVALUES_LTE = "lte", S.NETHOSTCONNECTIONSUBTYPEVALUES_LTE_CA = "lte_ca", S.NETHOSTCONNECTIONSUBTYPEVALUES_NR = "nr", S.NETHOSTCONNECTIONSUBTYPEVALUES_NRNSA = "nrnsa", S.NETHOSTCONNECTIONSUBTYPEVALUES_TD_SCDMA = "td_scdma", S.NETHOSTCONNECTIONSUBTYPEVALUES_UMTS = "umts", S.NETHOSTCONNECTIONTYPEVALUES_CELL = "cell", S.NETHOSTCONNECTIONTYPEVALUES_UNAVAILABLE = "unavailable", S.NETHOSTCONNECTIONTYPEVALUES_UNKNOWN = "unknown", S.NETHOSTCONNECTIONTYPEVALUES_WIFI = "wifi", S.NETHOSTCONNECTIONTYPEVALUES_WIRED = "wired", S.NETTRANSPORTVALUES_INPROC = "inproc", S.NETTRANSPORTVALUES_IP = "ip", S.NETTRANSPORTVALUES_IP_TCP = "ip_tcp", S.NETTRANSPORTVALUES_IP_UDP = "ip_udp", S.NETTRANSPORTVALUES_OTHER = "other", S.NETTRANSPORTVALUES_PIPE = "pipe", S.NETTRANSPORTVALUES_UNIX = "unix", S.NETWORK_TRANSPORT_VALUE_PIPE = "pipe", S.NETWORK_TRANSPORT_VALUE_QUIC = "quic", S.NETWORK_TRANSPORT_VALUE_TCP = "tcp", S.NETWORK_TRANSPORT_VALUE_UDP = "udp", S.NETWORK_TRANSPORT_VALUE_UNIX = "unix", S.NETWORK_TYPE_VALUE_IPV4 = "ipv4", S.NETWORK_TYPE_VALUE_IPV6 = "ipv6", S.NetHostConnectionSubtypeValues = D_, S.NetHostConnectionTypeValues = $T, S.NetTransportValues = JT, S.OSTYPEVALUES_AIX = "aix", S.OSTYPEVALUES_DARWIN = "darwin", S.OSTYPEVALUES_DRAGONFLYBSD = "dragonflybsd", S.OSTYPEVALUES_FREEBSD = "freebsd", S.OSTYPEVALUES_HPUX = "hpux", S.OSTYPEVALUES_LINUX = "linux", S.OSTYPEVALUES_NETBSD = "netbsd", S.OSTYPEVALUES_OPENBSD = "openbsd", S.OSTYPEVALUES_SOLARIS = "solaris", S.OSTYPEVALUES_WINDOWS = "windows", S.OSTYPEVALUES_Z_OS = "z_os", S.OTEL_STATUS_CODE_VALUE_ERROR = "ERROR", S.OTEL_STATUS_CODE_VALUE_OK = "OK", S.OsTypeValues = QR, S.RPCGRPCSTATUSCODEVALUES_ABORTED = 10, S.RPCGRPCSTATUSCODEVALUES_ALREADY_EXISTS = 6, S.RPCGRPCSTATUSCODEVALUES_CANCELLED = 1, S.RPCGRPCSTATUSCODEVALUES_DATA_LOSS = 15, S.RPCGRPCSTATUSCODEVALUES_DEADLINE_EXCEEDED = 4, S.RPCGRPCSTATUSCODEVALUES_FAILED_PRECONDITION = 9, S.RPCGRPCSTATUSCODEVALUES_INTERNAL = 13, S.RPCGRPCSTATUSCODEVALUES_INVALID_ARGUMENT = 3, S.RPCGRPCSTATUSCODEVALUES_NOT_FOUND = 5, S.RPCGRPCSTATUSCODEVALUES_OK = 0, S.RPCGRPCSTATUSCODEVALUES_OUT_OF_RANGE = 11, S.RPCGRPCSTATUSCODEVALUES_PERMISSION_DENIED = 7, S.RPCGRPCSTATUSCODEVALUES_RESOURCE_EXHAUSTED = 8, S.RPCGRPCSTATUSCODEVALUES_UNAUTHENTICATED = 16, S.RPCGRPCSTATUSCODEVALUES_UNAVAILABLE = 14, S.RPCGRPCSTATUSCODEVALUES_UNIMPLEMENTED = 12, S.RPCGRPCSTATUSCODEVALUES_UNKNOWN = 2, S.RpcGrpcStatusCodeValues = G_, S.SEMATTRS_AWS_DYNAMODB_ATTRIBUTES_TO_GET = "aws.dynamodb.attributes_to_get", S.SEMATTRS_AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS = "aws.dynamodb.attribute_definitions", S.SEMATTRS_AWS_DYNAMODB_CONSISTENT_READ = "aws.dynamodb.consistent_read", S.SEMATTRS_AWS_DYNAMODB_CONSUMED_CAPACITY = "aws.dynamodb.consumed_capacity", S.SEMATTRS_AWS_DYNAMODB_COUNT = "aws.dynamodb.count", S.SEMATTRS_AWS_DYNAMODB_EXCLUSIVE_START_TABLE = "aws.dynamodb.exclusive_start_table", S.SEMATTRS_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES = "aws.dynamodb.global_secondary_indexes", S.SEMATTRS_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES = "aws.dynamodb.global_secondary_index_updates", S.SEMATTRS_AWS_DYNAMODB_INDEX_NAME = "aws.dynamodb.index_name", S.SEMATTRS_AWS_DYNAMODB_ITEM_COLLECTION_METRICS = "aws.dynamodb.item_collection_metrics", S.SEMATTRS_AWS_DYNAMODB_LIMIT = "aws.dynamodb.limit", S.SEMATTRS_AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES = "aws.dynamodb.local_secondary_indexes", S.SEMATTRS_AWS_DYNAMODB_PROJECTION = "aws.dynamodb.projection", S.SEMATTRS_AWS_DYNAMODB_PROVISIONED_READ_CAPACITY = "aws.dynamodb.provisioned_read_capacity", S.SEMATTRS_AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY = "aws.dynamodb.provisioned_write_capacity", S.SEMATTRS_AWS_DYNAMODB_SCANNED_COUNT = "aws.dynamodb.scanned_count", S.SEMATTRS_AWS_DYNAMODB_SCAN_FORWARD = "aws.dynamodb.scan_forward", S.SEMATTRS_AWS_DYNAMODB_SEGMENT = "aws.dynamodb.segment", S.SEMATTRS_AWS_DYNAMODB_SELECT = "aws.dynamodb.select", S.SEMATTRS_AWS_DYNAMODB_TABLE_COUNT = "aws.dynamodb.table_count", S.SEMATTRS_AWS_DYNAMODB_TABLE_NAMES = "aws.dynamodb.table_names", S.SEMATTRS_AWS_DYNAMODB_TOTAL_SEGMENTS = "aws.dynamodb.total_segments", S.SEMATTRS_AWS_LAMBDA_INVOKED_ARN = "aws.lambda.invoked_arn", S.SEMATTRS_CODE_FILEPATH = "code.filepath", S.SEMATTRS_CODE_FUNCTION = "code.function", S.SEMATTRS_CODE_LINENO = "code.lineno", S.SEMATTRS_CODE_NAMESPACE = "code.namespace", S.SEMATTRS_DB_CASSANDRA_CONSISTENCY_LEVEL = "db.cassandra.consistency_level", S.SEMATTRS_DB_CASSANDRA_COORDINATOR_DC = "db.cassandra.coordinator.dc", S.SEMATTRS_DB_CASSANDRA_COORDINATOR_ID = "db.cassandra.coordinator.id", S.SEMATTRS_DB_CASSANDRA_IDEMPOTENCE = "db.cassandra.idempotence", S.SEMATTRS_DB_CASSANDRA_KEYSPACE = "db.cassandra.keyspace", S.SEMATTRS_DB_CASSANDRA_PAGE_SIZE = "db.cassandra.page_size", S.SEMATTRS_DB_CASSANDRA_SPECULATIVE_EXECUTION_COUNT = "db.cassandra.speculative_execution_count", S.SEMATTRS_DB_CASSANDRA_TABLE = "db.cassandra.table", S.SEMATTRS_DB_CONNECTION_STRING = "db.connection_string", S.SEMATTRS_DB_HBASE_NAMESPACE = "db.hbase.namespace", S.SEMATTRS_DB_JDBC_DRIVER_CLASSNAME = "db.jdbc.driver_classname", S.SEMATTRS_DB_MONGODB_COLLECTION = "db.mongodb.collection", S.SEMATTRS_DB_MSSQL_INSTANCE_NAME = "db.mssql.instance_name", S.SEMATTRS_DB_NAME = "db.name", S.SEMATTRS_DB_OPERATION = "db.operation", S.SEMATTRS_DB_REDIS_DATABASE_INDEX = "db.redis.database_index", S.SEMATTRS_DB_SQL_TABLE = "db.sql.table", S.SEMATTRS_DB_STATEMENT = "db.statement", S.SEMATTRS_DB_SYSTEM = "db.system", S.SEMATTRS_DB_USER = "db.user", S.SEMATTRS_ENDUSER_ID = "enduser.id", S.SEMATTRS_ENDUSER_ROLE = "enduser.role", S.SEMATTRS_ENDUSER_SCOPE = "enduser.scope", S.SEMATTRS_EXCEPTION_ESCAPED = "exception.escaped", S.SEMATTRS_EXCEPTION_MESSAGE = "exception.message", S.SEMATTRS_EXCEPTION_STACKTRACE = "exception.stacktrace", S.SEMATTRS_EXCEPTION_TYPE = "exception.type", S.SEMATTRS_FAAS_COLDSTART = "faas.coldstart", S.SEMATTRS_FAAS_CRON = "faas.cron", S.SEMATTRS_FAAS_DOCUMENT_COLLECTION = "faas.document.collection", S.SEMATTRS_FAAS_DOCUMENT_NAME = "faas.document.name", S.SEMATTRS_FAAS_DOCUMENT_OPERATION = "faas.document.operation", S.SEMATTRS_FAAS_DOCUMENT_TIME = "faas.document.time", S.SEMATTRS_FAAS_EXECUTION = "faas.execution", S.SEMATTRS_FAAS_INVOKED_NAME = "faas.invoked_name", S.SEMATTRS_FAAS_INVOKED_PROVIDER = "faas.invoked_provider", S.SEMATTRS_FAAS_INVOKED_REGION = "faas.invoked_region", S.SEMATTRS_FAAS_TIME = "faas.time", S.SEMATTRS_FAAS_TRIGGER = "faas.trigger", S.SEMATTRS_HTTP_CLIENT_IP = "http.client_ip", S.SEMATTRS_HTTP_FLAVOR = "http.flavor", S.SEMATTRS_HTTP_HOST = "http.host", S.SEMATTRS_HTTP_METHOD = "http.method", S.SEMATTRS_HTTP_REQUEST_CONTENT_LENGTH = "http.request_content_length", S.SEMATTRS_HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED = "http.request_content_length_uncompressed", S.SEMATTRS_HTTP_RESPONSE_CONTENT_LENGTH = "http.response_content_length", S.SEMATTRS_HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED = "http.response_content_length_uncompressed", S.SEMATTRS_HTTP_ROUTE = "http.route", S.SEMATTRS_HTTP_SCHEME = "http.scheme", S.SEMATTRS_HTTP_SERVER_NAME = "http.server_name", S.SEMATTRS_HTTP_STATUS_CODE = "http.status_code", S.SEMATTRS_HTTP_TARGET = "http.target", S.SEMATTRS_HTTP_URL = "http.url", S.SEMATTRS_HTTP_USER_AGENT = "http.user_agent", S.SEMATTRS_MESSAGE_COMPRESSED_SIZE = "message.compressed_size", S.SEMATTRS_MESSAGE_ID = "message.id", S.SEMATTRS_MESSAGE_TYPE = "message.type", S.SEMATTRS_MESSAGE_UNCOMPRESSED_SIZE = "message.uncompressed_size", S.SEMATTRS_MESSAGING_CONSUMER_ID = "messaging.consumer_id", S.SEMATTRS_MESSAGING_CONVERSATION_ID = "messaging.conversation_id", S.SEMATTRS_MESSAGING_DESTINATION = "messaging.destination", S.SEMATTRS_MESSAGING_DESTINATION_KIND = "messaging.destination_kind", S.SEMATTRS_MESSAGING_KAFKA_CLIENT_ID = "messaging.kafka.client_id", S.SEMATTRS_MESSAGING_KAFKA_CONSUMER_GROUP = "messaging.kafka.consumer_group", S.SEMATTRS_MESSAGING_KAFKA_MESSAGE_KEY = "messaging.kafka.message_key", S.SEMATTRS_MESSAGING_KAFKA_PARTITION = "messaging.kafka.partition", S.SEMATTRS_MESSAGING_KAFKA_TOMBSTONE = "messaging.kafka.tombstone", S.SEMATTRS_MESSAGING_MESSAGE_ID = "messaging.message_id", S.SEMATTRS_MESSAGING_MESSAGE_PAYLOAD_COMPRESSED_SIZE_BYTES = "messaging.message_payload_compressed_size_bytes", S.SEMATTRS_MESSAGING_MESSAGE_PAYLOAD_SIZE_BYTES = "messaging.message_payload_size_bytes", S.SEMATTRS_MESSAGING_OPERATION = "messaging.operation", S.SEMATTRS_MESSAGING_PROTOCOL = "messaging.protocol", S.SEMATTRS_MESSAGING_PROTOCOL_VERSION = "messaging.protocol_version", S.SEMATTRS_MESSAGING_RABBITMQ_ROUTING_KEY = "messaging.rabbitmq.routing_key", S.SEMATTRS_MESSAGING_SYSTEM = "messaging.system", S.SEMATTRS_MESSAGING_TEMP_DESTINATION = "messaging.temp_destination", S.SEMATTRS_MESSAGING_URL = "messaging.url", S.SEMATTRS_NET_HOST_CARRIER_ICC = "net.host.carrier.icc", S.SEMATTRS_NET_HOST_CARRIER_MCC = "net.host.carrier.mcc", S.SEMATTRS_NET_HOST_CARRIER_MNC = "net.host.carrier.mnc", S.SEMATTRS_NET_HOST_CARRIER_NAME = "net.host.carrier.name", S.SEMATTRS_NET_HOST_CONNECTION_SUBTYPE = "net.host.connection.subtype", S.SEMATTRS_NET_HOST_CONNECTION_TYPE = "net.host.connection.type", S.SEMATTRS_NET_HOST_IP = "net.host.ip", S.SEMATTRS_NET_HOST_NAME = "net.host.name", S.SEMATTRS_NET_HOST_PORT = "net.host.port", S.SEMATTRS_NET_PEER_IP = "net.peer.ip", S.SEMATTRS_NET_PEER_NAME = "net.peer.name", S.SEMATTRS_NET_PEER_PORT = "net.peer.port", S.SEMATTRS_NET_TRANSPORT = "net.transport", S.SEMATTRS_PEER_SERVICE = "peer.service", S.SEMATTRS_RPC_GRPC_STATUS_CODE = "rpc.grpc.status_code", S.SEMATTRS_RPC_JSONRPC_ERROR_CODE = "rpc.jsonrpc.error_code", S.SEMATTRS_RPC_JSONRPC_ERROR_MESSAGE = "rpc.jsonrpc.error_message", S.SEMATTRS_RPC_JSONRPC_REQUEST_ID = "rpc.jsonrpc.request_id", S.SEMATTRS_RPC_JSONRPC_VERSION = "rpc.jsonrpc.version", S.SEMATTRS_RPC_METHOD = "rpc.method", S.SEMATTRS_RPC_SERVICE = "rpc.service", S.SEMATTRS_RPC_SYSTEM = "rpc.system", S.SEMATTRS_THREAD_ID = "thread.id", S.SEMATTRS_THREAD_NAME = "thread.name", S.SEMRESATTRS_AWS_ECS_CLUSTER_ARN = "aws.ecs.cluster.arn", S.SEMRESATTRS_AWS_ECS_CONTAINER_ARN = "aws.ecs.container.arn", S.SEMRESATTRS_AWS_ECS_LAUNCHTYPE = "aws.ecs.launchtype", S.SEMRESATTRS_AWS_ECS_TASK_ARN = "aws.ecs.task.arn", S.SEMRESATTRS_AWS_ECS_TASK_FAMILY = "aws.ecs.task.family", S.SEMRESATTRS_AWS_ECS_TASK_REVISION = "aws.ecs.task.revision", S.SEMRESATTRS_AWS_EKS_CLUSTER_ARN = "aws.eks.cluster.arn", S.SEMRESATTRS_AWS_LOG_GROUP_ARNS = "aws.log.group.arns", S.SEMRESATTRS_AWS_LOG_GROUP_NAMES = "aws.log.group.names", S.SEMRESATTRS_AWS_LOG_STREAM_ARNS = "aws.log.stream.arns", S.SEMRESATTRS_AWS_LOG_STREAM_NAMES = "aws.log.stream.names", S.SEMRESATTRS_CLOUD_ACCOUNT_ID = "cloud.account.id", S.SEMRESATTRS_CLOUD_AVAILABILITY_ZONE = "cloud.availability_zone", S.SEMRESATTRS_CLOUD_PLATFORM = "cloud.platform", S.SEMRESATTRS_CLOUD_PROVIDER = "cloud.provider", S.SEMRESATTRS_CLOUD_REGION = "cloud.region", S.SEMRESATTRS_CONTAINER_ID = "container.id", S.SEMRESATTRS_CONTAINER_IMAGE_NAME = "container.image.name", S.SEMRESATTRS_CONTAINER_IMAGE_TAG = "container.image.tag", S.SEMRESATTRS_CONTAINER_NAME = "container.name", S.SEMRESATTRS_CONTAINER_RUNTIME = "container.runtime", S.SEMRESATTRS_DEPLOYMENT_ENVIRONMENT = "deployment.environment", S.SEMRESATTRS_DEVICE_ID = "device.id", S.SEMRESATTRS_DEVICE_MODEL_IDENTIFIER = "device.model.identifier", S.SEMRESATTRS_DEVICE_MODEL_NAME = "device.model.name", S.SEMRESATTRS_FAAS_ID = "faas.id", S.SEMRESATTRS_FAAS_INSTANCE = "faas.instance", S.SEMRESATTRS_FAAS_MAX_MEMORY = "faas.max_memory", S.SEMRESATTRS_FAAS_NAME = "faas.name", S.SEMRESATTRS_FAAS_VERSION = "faas.version", S.SEMRESATTRS_HOST_ARCH = "host.arch", S.SEMRESATTRS_HOST_ID = "host.id", S.SEMRESATTRS_HOST_IMAGE_ID = "host.image.id", S.SEMRESATTRS_HOST_IMAGE_NAME = "host.image.name", S.SEMRESATTRS_HOST_IMAGE_VERSION = "host.image.version", S.SEMRESATTRS_HOST_NAME = "host.name", S.SEMRESATTRS_HOST_TYPE = "host.type", S.SEMRESATTRS_K8S_CLUSTER_NAME = "k8s.cluster.name", S.SEMRESATTRS_K8S_CONTAINER_NAME = "k8s.container.name", S.SEMRESATTRS_K8S_CRONJOB_NAME = "k8s.cronjob.name", S.SEMRESATTRS_K8S_CRONJOB_UID = "k8s.cronjob.uid", S.SEMRESATTRS_K8S_DAEMONSET_NAME = "k8s.daemonset.name", S.SEMRESATTRS_K8S_DAEMONSET_UID = "k8s.daemonset.uid", S.SEMRESATTRS_K8S_DEPLOYMENT_NAME = "k8s.deployment.name", S.SEMRESATTRS_K8S_DEPLOYMENT_UID = "k8s.deployment.uid", S.SEMRESATTRS_K8S_JOB_NAME = "k8s.job.name", S.SEMRESATTRS_K8S_JOB_UID = "k8s.job.uid", S.SEMRESATTRS_K8S_NAMESPACE_NAME = "k8s.namespace.name", S.SEMRESATTRS_K8S_NODE_NAME = "k8s.node.name", S.SEMRESATTRS_K8S_NODE_UID = "k8s.node.uid", S.SEMRESATTRS_K8S_POD_NAME = "k8s.pod.name", S.SEMRESATTRS_K8S_POD_UID = "k8s.pod.uid", S.SEMRESATTRS_K8S_REPLICASET_NAME = "k8s.replicaset.name", S.SEMRESATTRS_K8S_REPLICASET_UID = "k8s.replicaset.uid", S.SEMRESATTRS_K8S_STATEFULSET_NAME = "k8s.statefulset.name", S.SEMRESATTRS_K8S_STATEFULSET_UID = "k8s.statefulset.uid", S.SEMRESATTRS_OS_DESCRIPTION = "os.description", S.SEMRESATTRS_OS_NAME = "os.name", S.SEMRESATTRS_OS_TYPE = "os.type", S.SEMRESATTRS_OS_VERSION = "os.version", S.SEMRESATTRS_PROCESS_COMMAND = "process.command", S.SEMRESATTRS_PROCESS_COMMAND_ARGS = "process.command_args", S.SEMRESATTRS_PROCESS_COMMAND_LINE = "process.command_line", S.SEMRESATTRS_PROCESS_EXECUTABLE_NAME = "process.executable.name", S.SEMRESATTRS_PROCESS_EXECUTABLE_PATH = "process.executable.path", S.SEMRESATTRS_PROCESS_OWNER = "process.owner", S.SEMRESATTRS_PROCESS_PID = "process.pid", S.SEMRESATTRS_PROCESS_RUNTIME_DESCRIPTION = "process.runtime.description", S.SEMRESATTRS_PROCESS_RUNTIME_NAME = "process.runtime.name", S.SEMRESATTRS_PROCESS_RUNTIME_VERSION = "process.runtime.version", S.SEMRESATTRS_SERVICE_INSTANCE_ID = "service.instance.id", S.SEMRESATTRS_SERVICE_NAME = "service.name", S.SEMRESATTRS_SERVICE_NAMESPACE = "service.namespace", S.SEMRESATTRS_SERVICE_VERSION = "service.version", S.SEMRESATTRS_TELEMETRY_AUTO_VERSION = "telemetry.auto.version", S.SEMRESATTRS_TELEMETRY_SDK_LANGUAGE = "telemetry.sdk.language", S.SEMRESATTRS_TELEMETRY_SDK_NAME = "telemetry.sdk.name", S.SEMRESATTRS_TELEMETRY_SDK_VERSION = "telemetry.sdk.version", S.SEMRESATTRS_WEBENGINE_DESCRIPTION = "webengine.description", S.SEMRESATTRS_WEBENGINE_NAME = "webengine.name", S.SEMRESATTRS_WEBENGINE_VERSION = "webengine.version", S.SIGNALR_CONNECTION_STATUS_VALUE_APP_SHUTDOWN = "app_shutdown", S.SIGNALR_CONNECTION_STATUS_VALUE_NORMAL_CLOSURE = "normal_closure", S.SIGNALR_CONNECTION_STATUS_VALUE_TIMEOUT = "timeout", S.SIGNALR_TRANSPORT_VALUE_LONG_POLLING = "long_polling", S.SIGNALR_TRANSPORT_VALUE_SERVER_SENT_EVENTS = "server_sent_events", S.SIGNALR_TRANSPORT_VALUE_WEB_SOCKETS = "web_sockets", S.SemanticAttributes = GS, S.SemanticResourceAttributes = RR, S.TELEMETRYSDKLANGUAGEVALUES_CPP = "cpp", S.TELEMETRYSDKLANGUAGEVALUES_DOTNET = "dotnet", S.TELEMETRYSDKLANGUAGEVALUES_ERLANG = "erlang", S.TELEMETRYSDKLANGUAGEVALUES_GO = "go", S.TELEMETRYSDKLANGUAGEVALUES_JAVA = "java", S.TELEMETRYSDKLANGUAGEVALUES_NODEJS = "nodejs", S.TELEMETRYSDKLANGUAGEVALUES_PHP = "php", S.TELEMETRYSDKLANGUAGEVALUES_PYTHON = "python", S.TELEMETRYSDKLANGUAGEVALUES_RUBY = "ruby", S.TELEMETRYSDKLANGUAGEVALUES_WEBJS = "webjs", S.TELEMETRY_SDK_LANGUAGE_VALUE_CPP = "cpp", S.TELEMETRY_SDK_LANGUAGE_VALUE_DOTNET = "dotnet", S.TELEMETRY_SDK_LANGUAGE_VALUE_ERLANG = "erlang", S.TELEMETRY_SDK_LANGUAGE_VALUE_GO = "go", S.TELEMETRY_SDK_LANGUAGE_VALUE_JAVA = "java", S.TELEMETRY_SDK_LANGUAGE_VALUE_NODEJS = "nodejs", S.TELEMETRY_SDK_LANGUAGE_VALUE_PHP = "php", S.TELEMETRY_SDK_LANGUAGE_VALUE_PYTHON = "python", S.TELEMETRY_SDK_LANGUAGE_VALUE_RUBY = "ruby", S.TELEMETRY_SDK_LANGUAGE_VALUE_RUST = "rust", S.TELEMETRY_SDK_LANGUAGE_VALUE_SWIFT = "swift", S.TELEMETRY_SDK_LANGUAGE_VALUE_WEBJS = "webjs", S.TelemetrySdkLanguageValues = Ee, _ = E("default", A.exports), A.exports.ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT_VALUE_ABORTED, A.exports.ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT_VALUE_HANDLED, A.exports.ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT_VALUE_SKIPPED, A.exports.ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT_VALUE_UNHANDLED, A.exports.ASPNETCORE_RATE_LIMITING_RESULT_VALUE_ACQUIRED, A.exports.ASPNETCORE_RATE_LIMITING_RESULT_VALUE_ENDPOINT_LIMITER, A.exports.ASPNETCORE_RATE_LIMITING_RESULT_VALUE_GLOBAL_LIMITER, A.exports.ASPNETCORE_RATE_LIMITING_RESULT_VALUE_REQUEST_CANCELED, A.exports.ASPNETCORE_ROUTING_MATCH_STATUS_VALUE_FAILURE, A.exports.ASPNETCORE_ROUTING_MATCH_STATUS_VALUE_SUCCESS, A.exports.ATTR_ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT, A.exports.ATTR_ASPNETCORE_DIAGNOSTICS_HANDLER_TYPE, A.exports.ATTR_ASPNETCORE_RATE_LIMITING_POLICY, A.exports.ATTR_ASPNETCORE_RATE_LIMITING_RESULT, A.exports.ATTR_ASPNETCORE_REQUEST_IS_UNHANDLED, A.exports.ATTR_ASPNETCORE_ROUTING_IS_FALLBACK, A.exports.ATTR_ASPNETCORE_ROUTING_MATCH_STATUS, A.exports.ATTR_CLIENT_ADDRESS, A.exports.ATTR_CLIENT_PORT, A.exports.ATTR_ERROR_TYPE, A.exports.ATTR_EXCEPTION_ESCAPED, A.exports.ATTR_EXCEPTION_MESSAGE, A.exports.ATTR_EXCEPTION_STACKTRACE, A.exports.ATTR_EXCEPTION_TYPE, A.exports.ATTR_HTTP_REQUEST_HEADER, A.exports.ATTR_HTTP_REQUEST_METHOD, A.exports.ATTR_HTTP_REQUEST_METHOD_ORIGINAL, A.exports.ATTR_HTTP_REQUEST_RESEND_COUNT, A.exports.ATTR_HTTP_RESPONSE_HEADER, A.exports.ATTR_HTTP_RESPONSE_STATUS_CODE, A.exports.ATTR_HTTP_ROUTE, A.exports.ATTR_JVM_GC_ACTION, A.exports.ATTR_JVM_GC_NAME, A.exports.ATTR_JVM_MEMORY_POOL_NAME, A.exports.ATTR_JVM_MEMORY_TYPE, A.exports.ATTR_JVM_THREAD_DAEMON, A.exports.ATTR_JVM_THREAD_STATE, A.exports.ATTR_NETWORK_LOCAL_ADDRESS, A.exports.ATTR_NETWORK_LOCAL_PORT, A.exports.ATTR_NETWORK_PEER_ADDRESS, A.exports.ATTR_NETWORK_PEER_PORT, A.exports.ATTR_NETWORK_PROTOCOL_NAME, A.exports.ATTR_NETWORK_PROTOCOL_VERSION, A.exports.ATTR_NETWORK_TRANSPORT, A.exports.ATTR_NETWORK_TYPE, A.exports.ATTR_OTEL_SCOPE_NAME, A.exports.ATTR_OTEL_SCOPE_VERSION, A.exports.ATTR_OTEL_STATUS_CODE, A.exports.ATTR_OTEL_STATUS_DESCRIPTION, A.exports.ATTR_SERVER_ADDRESS, A.exports.ATTR_SERVER_PORT, A.exports.ATTR_SERVICE_NAME, A.exports.ATTR_SERVICE_VERSION, A.exports.ATTR_SIGNALR_CONNECTION_STATUS, A.exports.ATTR_SIGNALR_TRANSPORT, A.exports.ATTR_TELEMETRY_SDK_LANGUAGE, A.exports.ATTR_TELEMETRY_SDK_NAME, A.exports.ATTR_TELEMETRY_SDK_VERSION, A.exports.ATTR_URL_FRAGMENT, A.exports.ATTR_URL_FULL, A.exports.ATTR_URL_PATH, A.exports.ATTR_URL_QUERY, A.exports.ATTR_URL_SCHEME, A.exports.ATTR_USER_AGENT_ORIGINAL, A.exports.AWSECSLAUNCHTYPEVALUES_EC2, A.exports.AWSECSLAUNCHTYPEVALUES_FARGATE, A.exports.AwsEcsLaunchtypeValues, A.exports.CLOUDPLATFORMVALUES_ALIBABA_CLOUD_ECS, A.exports.CLOUDPLATFORMVALUES_ALIBABA_CLOUD_FC, A.exports.CLOUDPLATFORMVALUES_AWS_EC2, A.exports.CLOUDPLATFORMVALUES_AWS_ECS, A.exports.CLOUDPLATFORMVALUES_AWS_EKS, A.exports.CLOUDPLATFORMVALUES_AWS_ELASTIC_BEANSTALK, A.exports.CLOUDPLATFORMVALUES_AWS_LAMBDA, A.exports.CLOUDPLATFORMVALUES_AZURE_AKS, A.exports.CLOUDPLATFORMVALUES_AZURE_APP_SERVICE, A.exports.CLOUDPLATFORMVALUES_AZURE_CONTAINER_INSTANCES, A.exports.CLOUDPLATFORMVALUES_AZURE_FUNCTIONS, A.exports.CLOUDPLATFORMVALUES_AZURE_VM, A.exports.CLOUDPLATFORMVALUES_GCP_APP_ENGINE, A.exports.CLOUDPLATFORMVALUES_GCP_CLOUD_FUNCTIONS, A.exports.CLOUDPLATFORMVALUES_GCP_CLOUD_RUN, A.exports.CLOUDPLATFORMVALUES_GCP_COMPUTE_ENGINE, A.exports.CLOUDPLATFORMVALUES_GCP_KUBERNETES_ENGINE, A.exports.CLOUDPROVIDERVALUES_ALIBABA_CLOUD, A.exports.CLOUDPROVIDERVALUES_AWS, A.exports.CLOUDPROVIDERVALUES_AZURE, A.exports.CLOUDPROVIDERVALUES_GCP, A.exports.CloudPlatformValues, A.exports.CloudProviderValues, A.exports.DBCASSANDRACONSISTENCYLEVELVALUES_ALL, A.exports.DBCASSANDRACONSISTENCYLEVELVALUES_ANY, A.exports.DBCASSANDRACONSISTENCYLEVELVALUES_EACH_QUORUM, A.exports.DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_ONE, A.exports.DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_QUORUM, A.exports.DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_SERIAL, A.exports.DBCASSANDRACONSISTENCYLEVELVALUES_ONE, A.exports.DBCASSANDRACONSISTENCYLEVELVALUES_QUORUM, A.exports.DBCASSANDRACONSISTENCYLEVELVALUES_SERIAL, A.exports.DBCASSANDRACONSISTENCYLEVELVALUES_THREE, A.exports.DBCASSANDRACONSISTENCYLEVELVALUES_TWO, A.exports.DBSYSTEMVALUES_ADABAS, A.exports.DBSYSTEMVALUES_CACHE, A.exports.DBSYSTEMVALUES_CASSANDRA, A.exports.DBSYSTEMVALUES_CLOUDSCAPE, A.exports.DBSYSTEMVALUES_COCKROACHDB, A.exports.DBSYSTEMVALUES_COLDFUSION, A.exports.DBSYSTEMVALUES_COSMOSDB, A.exports.DBSYSTEMVALUES_COUCHBASE, A.exports.DBSYSTEMVALUES_COUCHDB, A.exports.DBSYSTEMVALUES_DB2, A.exports.DBSYSTEMVALUES_DERBY, A.exports.DBSYSTEMVALUES_DYNAMODB, A.exports.DBSYSTEMVALUES_EDB, A.exports.DBSYSTEMVALUES_ELASTICSEARCH, A.exports.DBSYSTEMVALUES_FILEMAKER, A.exports.DBSYSTEMVALUES_FIREBIRD, A.exports.DBSYSTEMVALUES_FIRSTSQL, A.exports.DBSYSTEMVALUES_GEODE, A.exports.DBSYSTEMVALUES_H2, A.exports.DBSYSTEMVALUES_HANADB, A.exports.DBSYSTEMVALUES_HBASE, A.exports.DBSYSTEMVALUES_HIVE, A.exports.DBSYSTEMVALUES_HSQLDB, A.exports.DBSYSTEMVALUES_INFORMIX, A.exports.DBSYSTEMVALUES_INGRES, A.exports.DBSYSTEMVALUES_INSTANTDB, A.exports.DBSYSTEMVALUES_INTERBASE, A.exports.DBSYSTEMVALUES_MARIADB, A.exports.DBSYSTEMVALUES_MAXDB, A.exports.DBSYSTEMVALUES_MEMCACHED, A.exports.DBSYSTEMVALUES_MONGODB, A.exports.DBSYSTEMVALUES_MSSQL, A.exports.DBSYSTEMVALUES_MYSQL, A.exports.DBSYSTEMVALUES_NEO4J, A.exports.DBSYSTEMVALUES_NETEZZA, A.exports.DBSYSTEMVALUES_ORACLE, A.exports.DBSYSTEMVALUES_OTHER_SQL, A.exports.DBSYSTEMVALUES_PERVASIVE, A.exports.DBSYSTEMVALUES_POINTBASE, A.exports.DBSYSTEMVALUES_POSTGRESQL, A.exports.DBSYSTEMVALUES_PROGRESS, A.exports.DBSYSTEMVALUES_REDIS, A.exports.DBSYSTEMVALUES_REDSHIFT, A.exports.DBSYSTEMVALUES_SQLITE, A.exports.DBSYSTEMVALUES_SYBASE, A.exports.DBSYSTEMVALUES_TERADATA, A.exports.DBSYSTEMVALUES_VERTICA, A.exports.DbCassandraConsistencyLevelValues, A.exports.DbSystemValues, A.exports.ERROR_TYPE_VALUE_OTHER, A.exports.FAASDOCUMENTOPERATIONVALUES_DELETE, A.exports.FAASDOCUMENTOPERATIONVALUES_EDIT, A.exports.FAASDOCUMENTOPERATIONVALUES_INSERT, A.exports.FAASINVOKEDPROVIDERVALUES_ALIBABA_CLOUD, A.exports.FAASINVOKEDPROVIDERVALUES_AWS, A.exports.FAASINVOKEDPROVIDERVALUES_AZURE, A.exports.FAASINVOKEDPROVIDERVALUES_GCP, A.exports.FAASTRIGGERVALUES_DATASOURCE, A.exports.FAASTRIGGERVALUES_HTTP, A.exports.FAASTRIGGERVALUES_OTHER, A.exports.FAASTRIGGERVALUES_PUBSUB, A.exports.FAASTRIGGERVALUES_TIMER, A.exports.FaasDocumentOperationValues, A.exports.FaasInvokedProviderValues, A.exports.FaasTriggerValues, A.exports.HOSTARCHVALUES_AMD64, A.exports.HOSTARCHVALUES_ARM32, A.exports.HOSTARCHVALUES_ARM64, A.exports.HOSTARCHVALUES_IA64, A.exports.HOSTARCHVALUES_PPC32, A.exports.HOSTARCHVALUES_PPC64, A.exports.HOSTARCHVALUES_X86, A.exports.HTTPFLAVORVALUES_HTTP_1_0, A.exports.HTTPFLAVORVALUES_HTTP_1_1, A.exports.HTTPFLAVORVALUES_HTTP_2_0, A.exports.HTTPFLAVORVALUES_QUIC, A.exports.HTTPFLAVORVALUES_SPDY, A.exports.HTTP_REQUEST_METHOD_VALUE_CONNECT, A.exports.HTTP_REQUEST_METHOD_VALUE_DELETE, A.exports.HTTP_REQUEST_METHOD_VALUE_GET, A.exports.HTTP_REQUEST_METHOD_VALUE_HEAD, A.exports.HTTP_REQUEST_METHOD_VALUE_OPTIONS, A.exports.HTTP_REQUEST_METHOD_VALUE_OTHER, A.exports.HTTP_REQUEST_METHOD_VALUE_PATCH, A.exports.HTTP_REQUEST_METHOD_VALUE_POST, A.exports.HTTP_REQUEST_METHOD_VALUE_PUT, A.exports.HTTP_REQUEST_METHOD_VALUE_TRACE, A.exports.HostArchValues, A.exports.HttpFlavorValues, A.exports.JVM_MEMORY_TYPE_VALUE_HEAP, A.exports.JVM_MEMORY_TYPE_VALUE_NON_HEAP, A.exports.JVM_THREAD_STATE_VALUE_BLOCKED, A.exports.JVM_THREAD_STATE_VALUE_NEW, A.exports.JVM_THREAD_STATE_VALUE_RUNNABLE, A.exports.JVM_THREAD_STATE_VALUE_TERMINATED, A.exports.JVM_THREAD_STATE_VALUE_TIMED_WAITING, A.exports.JVM_THREAD_STATE_VALUE_WAITING, A.exports.MESSAGETYPEVALUES_RECEIVED, A.exports.MESSAGETYPEVALUES_SENT, A.exports.MESSAGINGDESTINATIONKINDVALUES_QUEUE, A.exports.MESSAGINGDESTINATIONKINDVALUES_TOPIC, A.exports.MESSAGINGOPERATIONVALUES_PROCESS, A.exports.MESSAGINGOPERATIONVALUES_RECEIVE, A.exports.METRIC_ASPNETCORE_DIAGNOSTICS_EXCEPTIONS, A.exports.METRIC_ASPNETCORE_RATE_LIMITING_ACTIVE_REQUEST_LEASES, A.exports.METRIC_ASPNETCORE_RATE_LIMITING_QUEUED_REQUESTS, A.exports.METRIC_ASPNETCORE_RATE_LIMITING_REQUESTS, A.exports.METRIC_ASPNETCORE_RATE_LIMITING_REQUEST_LEASE_DURATION, A.exports.METRIC_ASPNETCORE_RATE_LIMITING_REQUEST_TIME_IN_QUEUE, A.exports.METRIC_ASPNETCORE_ROUTING_MATCH_ATTEMPTS, A.exports.METRIC_HTTP_CLIENT_REQUEST_DURATION, A.exports.METRIC_HTTP_SERVER_REQUEST_DURATION, A.exports.METRIC_JVM_CLASS_COUNT, A.exports.METRIC_JVM_CLASS_LOADED, A.exports.METRIC_JVM_CLASS_UNLOADED, A.exports.METRIC_JVM_CPU_COUNT, A.exports.METRIC_JVM_CPU_RECENT_UTILIZATION, A.exports.METRIC_JVM_CPU_TIME, A.exports.METRIC_JVM_GC_DURATION, A.exports.METRIC_JVM_MEMORY_COMMITTED, A.exports.METRIC_JVM_MEMORY_LIMIT, A.exports.METRIC_JVM_MEMORY_USED, A.exports.METRIC_JVM_MEMORY_USED_AFTER_LAST_GC, A.exports.METRIC_JVM_THREAD_COUNT, A.exports.METRIC_KESTREL_ACTIVE_CONNECTIONS, A.exports.METRIC_KESTREL_ACTIVE_TLS_HANDSHAKES, A.exports.METRIC_KESTREL_CONNECTION_DURATION, A.exports.METRIC_KESTREL_QUEUED_CONNECTIONS, A.exports.METRIC_KESTREL_QUEUED_REQUESTS, A.exports.METRIC_KESTREL_REJECTED_CONNECTIONS, A.exports.METRIC_KESTREL_TLS_HANDSHAKE_DURATION, A.exports.METRIC_KESTREL_UPGRADED_CONNECTIONS, A.exports.METRIC_SIGNALR_SERVER_ACTIVE_CONNECTIONS, A.exports.METRIC_SIGNALR_SERVER_CONNECTION_DURATION, A.exports.MessageTypeValues, A.exports.MessagingDestinationKindValues, A.exports.MessagingOperationValues, A.exports.NETHOSTCONNECTIONSUBTYPEVALUES_CDMA, A.exports.NETHOSTCONNECTIONSUBTYPEVALUES_CDMA2000_1XRTT, A.exports.NETHOSTCONNECTIONSUBTYPEVALUES_EDGE, A.exports.NETHOSTCONNECTIONSUBTYPEVALUES_EHRPD, A.exports.NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_0, A.exports.NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_A, A.exports.NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_B, A.exports.NETHOSTCONNECTIONSUBTYPEVALUES_GPRS;
        A.exports.NETHOSTCONNECTIONSUBTYPEVALUES_GSM, A.exports.NETHOSTCONNECTIONSUBTYPEVALUES_HSDPA, A.exports.NETHOSTCONNECTIONSUBTYPEVALUES_HSPA, A.exports.NETHOSTCONNECTIONSUBTYPEVALUES_HSPAP, A.exports.NETHOSTCONNECTIONSUBTYPEVALUES_HSUPA, A.exports.NETHOSTCONNECTIONSUBTYPEVALUES_IDEN, A.exports.NETHOSTCONNECTIONSUBTYPEVALUES_IWLAN, A.exports.NETHOSTCONNECTIONSUBTYPEVALUES_LTE, A.exports.NETHOSTCONNECTIONSUBTYPEVALUES_LTE_CA, A.exports.NETHOSTCONNECTIONSUBTYPEVALUES_NR, A.exports.NETHOSTCONNECTIONSUBTYPEVALUES_NRNSA, A.exports.NETHOSTCONNECTIONSUBTYPEVALUES_TD_SCDMA, A.exports.NETHOSTCONNECTIONSUBTYPEVALUES_UMTS, A.exports.NETHOSTCONNECTIONTYPEVALUES_CELL, A.exports.NETHOSTCONNECTIONTYPEVALUES_UNAVAILABLE, A.exports.NETHOSTCONNECTIONTYPEVALUES_UNKNOWN, A.exports.NETHOSTCONNECTIONTYPEVALUES_WIFI, A.exports.NETHOSTCONNECTIONTYPEVALUES_WIRED, A.exports.NETTRANSPORTVALUES_INPROC, A.exports.NETTRANSPORTVALUES_IP, A.exports.NETTRANSPORTVALUES_IP_TCP, A.exports.NETTRANSPORTVALUES_IP_UDP, A.exports.NETTRANSPORTVALUES_OTHER, A.exports.NETTRANSPORTVALUES_PIPE, A.exports.NETTRANSPORTVALUES_UNIX, A.exports.NETWORK_TRANSPORT_VALUE_PIPE, A.exports.NETWORK_TRANSPORT_VALUE_QUIC, A.exports.NETWORK_TRANSPORT_VALUE_TCP, A.exports.NETWORK_TRANSPORT_VALUE_UDP, A.exports.NETWORK_TRANSPORT_VALUE_UNIX, A.exports.NETWORK_TYPE_VALUE_IPV4, A.exports.NETWORK_TYPE_VALUE_IPV6, A.exports.NetHostConnectionSubtypeValues, A.exports.NetHostConnectionTypeValues, A.exports.NetTransportValues, A.exports.OSTYPEVALUES_AIX, A.exports.OSTYPEVALUES_DARWIN, A.exports.OSTYPEVALUES_DRAGONFLYBSD, A.exports.OSTYPEVALUES_FREEBSD, A.exports.OSTYPEVALUES_HPUX, A.exports.OSTYPEVALUES_LINUX, A.exports.OSTYPEVALUES_NETBSD, A.exports.OSTYPEVALUES_OPENBSD, A.exports.OSTYPEVALUES_SOLARIS, A.exports.OSTYPEVALUES_WINDOWS, A.exports.OSTYPEVALUES_Z_OS, A.exports.OTEL_STATUS_CODE_VALUE_ERROR, A.exports.OTEL_STATUS_CODE_VALUE_OK, A.exports.OsTypeValues, A.exports.RPCGRPCSTATUSCODEVALUES_ABORTED, A.exports.RPCGRPCSTATUSCODEVALUES_ALREADY_EXISTS, A.exports.RPCGRPCSTATUSCODEVALUES_CANCELLED, A.exports.RPCGRPCSTATUSCODEVALUES_DATA_LOSS, A.exports.RPCGRPCSTATUSCODEVALUES_DEADLINE_EXCEEDED, A.exports.RPCGRPCSTATUSCODEVALUES_FAILED_PRECONDITION, A.exports.RPCGRPCSTATUSCODEVALUES_INTERNAL, A.exports.RPCGRPCSTATUSCODEVALUES_INVALID_ARGUMENT, A.exports.RPCGRPCSTATUSCODEVALUES_NOT_FOUND, A.exports.RPCGRPCSTATUSCODEVALUES_OK, A.exports.RPCGRPCSTATUSCODEVALUES_OUT_OF_RANGE, A.exports.RPCGRPCSTATUSCODEVALUES_PERMISSION_DENIED, A.exports.RPCGRPCSTATUSCODEVALUES_RESOURCE_EXHAUSTED, A.exports.RPCGRPCSTATUSCODEVALUES_UNAUTHENTICATED, A.exports.RPCGRPCSTATUSCODEVALUES_UNAVAILABLE, A.exports.RPCGRPCSTATUSCODEVALUES_UNIMPLEMENTED, A.exports.RPCGRPCSTATUSCODEVALUES_UNKNOWN, A.exports.RpcGrpcStatusCodeValues, A.exports.SEMATTRS_AWS_DYNAMODB_ATTRIBUTES_TO_GET, A.exports.SEMATTRS_AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS, A.exports.SEMATTRS_AWS_DYNAMODB_CONSISTENT_READ, A.exports.SEMATTRS_AWS_DYNAMODB_CONSUMED_CAPACITY, A.exports.SEMATTRS_AWS_DYNAMODB_COUNT, A.exports.SEMATTRS_AWS_DYNAMODB_EXCLUSIVE_START_TABLE, A.exports.SEMATTRS_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES, A.exports.SEMATTRS_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES, A.exports.SEMATTRS_AWS_DYNAMODB_INDEX_NAME, A.exports.SEMATTRS_AWS_DYNAMODB_ITEM_COLLECTION_METRICS, A.exports.SEMATTRS_AWS_DYNAMODB_LIMIT, A.exports.SEMATTRS_AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES, A.exports.SEMATTRS_AWS_DYNAMODB_PROJECTION, A.exports.SEMATTRS_AWS_DYNAMODB_PROVISIONED_READ_CAPACITY, A.exports.SEMATTRS_AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY, A.exports.SEMATTRS_AWS_DYNAMODB_SCANNED_COUNT, A.exports.SEMATTRS_AWS_DYNAMODB_SCAN_FORWARD, A.exports.SEMATTRS_AWS_DYNAMODB_SEGMENT, A.exports.SEMATTRS_AWS_DYNAMODB_SELECT, A.exports.SEMATTRS_AWS_DYNAMODB_TABLE_COUNT, A.exports.SEMATTRS_AWS_DYNAMODB_TABLE_NAMES, A.exports.SEMATTRS_AWS_DYNAMODB_TOTAL_SEGMENTS, A.exports.SEMATTRS_AWS_LAMBDA_INVOKED_ARN, A.exports.SEMATTRS_CODE_FILEPATH, A.exports.SEMATTRS_CODE_FUNCTION, A.exports.SEMATTRS_CODE_LINENO, A.exports.SEMATTRS_CODE_NAMESPACE, A.exports.SEMATTRS_DB_CASSANDRA_CONSISTENCY_LEVEL, A.exports.SEMATTRS_DB_CASSANDRA_COORDINATOR_DC, A.exports.SEMATTRS_DB_CASSANDRA_COORDINATOR_ID, A.exports.SEMATTRS_DB_CASSANDRA_IDEMPOTENCE, A.exports.SEMATTRS_DB_CASSANDRA_KEYSPACE, A.exports.SEMATTRS_DB_CASSANDRA_PAGE_SIZE, A.exports.SEMATTRS_DB_CASSANDRA_SPECULATIVE_EXECUTION_COUNT, A.exports.SEMATTRS_DB_CASSANDRA_TABLE, A.exports.SEMATTRS_DB_CONNECTION_STRING, A.exports.SEMATTRS_DB_HBASE_NAMESPACE, A.exports.SEMATTRS_DB_JDBC_DRIVER_CLASSNAME, A.exports.SEMATTRS_DB_MONGODB_COLLECTION, A.exports.SEMATTRS_DB_MSSQL_INSTANCE_NAME, A.exports.SEMATTRS_DB_NAME, A.exports.SEMATTRS_DB_OPERATION, A.exports.SEMATTRS_DB_REDIS_DATABASE_INDEX, A.exports.SEMATTRS_DB_SQL_TABLE, A.exports.SEMATTRS_DB_STATEMENT, A.exports.SEMATTRS_DB_SYSTEM, A.exports.SEMATTRS_DB_USER, A.exports.SEMATTRS_ENDUSER_ID, A.exports.SEMATTRS_ENDUSER_ROLE, A.exports.SEMATTRS_ENDUSER_SCOPE, A.exports.SEMATTRS_EXCEPTION_ESCAPED, A.exports.SEMATTRS_EXCEPTION_MESSAGE, A.exports.SEMATTRS_EXCEPTION_STACKTRACE, A.exports.SEMATTRS_EXCEPTION_TYPE, A.exports.SEMATTRS_FAAS_COLDSTART, A.exports.SEMATTRS_FAAS_CRON, A.exports.SEMATTRS_FAAS_DOCUMENT_COLLECTION, A.exports.SEMATTRS_FAAS_DOCUMENT_NAME, A.exports.SEMATTRS_FAAS_DOCUMENT_OPERATION, A.exports.SEMATTRS_FAAS_DOCUMENT_TIME, A.exports.SEMATTRS_FAAS_EXECUTION, A.exports.SEMATTRS_FAAS_INVOKED_NAME, A.exports.SEMATTRS_FAAS_INVOKED_PROVIDER, A.exports.SEMATTRS_FAAS_INVOKED_REGION, A.exports.SEMATTRS_FAAS_TIME, A.exports.SEMATTRS_FAAS_TRIGGER, A.exports.SEMATTRS_HTTP_CLIENT_IP, A.exports.SEMATTRS_HTTP_FLAVOR, A.exports.SEMATTRS_HTTP_HOST, A.exports.SEMATTRS_HTTP_METHOD, A.exports.SEMATTRS_HTTP_REQUEST_CONTENT_LENGTH, A.exports.SEMATTRS_HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED, A.exports.SEMATTRS_HTTP_RESPONSE_CONTENT_LENGTH, A.exports.SEMATTRS_HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED, A.exports.SEMATTRS_HTTP_ROUTE, A.exports.SEMATTRS_HTTP_SCHEME, A.exports.SEMATTRS_HTTP_SERVER_NAME, A.exports.SEMATTRS_HTTP_STATUS_CODE, A.exports.SEMATTRS_HTTP_TARGET, A.exports.SEMATTRS_HTTP_URL, A.exports.SEMATTRS_HTTP_USER_AGENT, A.exports.SEMATTRS_MESSAGE_COMPRESSED_SIZE, A.exports.SEMATTRS_MESSAGE_ID, A.exports.SEMATTRS_MESSAGE_TYPE, A.exports.SEMATTRS_MESSAGE_UNCOMPRESSED_SIZE, A.exports.SEMATTRS_MESSAGING_CONSUMER_ID, A.exports.SEMATTRS_MESSAGING_CONVERSATION_ID, A.exports.SEMATTRS_MESSAGING_DESTINATION, A.exports.SEMATTRS_MESSAGING_DESTINATION_KIND, A.exports.SEMATTRS_MESSAGING_KAFKA_CLIENT_ID, A.exports.SEMATTRS_MESSAGING_KAFKA_CONSUMER_GROUP, A.exports.SEMATTRS_MESSAGING_KAFKA_MESSAGE_KEY, A.exports.SEMATTRS_MESSAGING_KAFKA_PARTITION, A.exports.SEMATTRS_MESSAGING_KAFKA_TOMBSTONE, A.exports.SEMATTRS_MESSAGING_MESSAGE_ID, A.exports.SEMATTRS_MESSAGING_MESSAGE_PAYLOAD_COMPRESSED_SIZE_BYTES, A.exports.SEMATTRS_MESSAGING_MESSAGE_PAYLOAD_SIZE_BYTES, A.exports.SEMATTRS_MESSAGING_OPERATION, A.exports.SEMATTRS_MESSAGING_PROTOCOL, A.exports.SEMATTRS_MESSAGING_PROTOCOL_VERSION, A.exports.SEMATTRS_MESSAGING_RABBITMQ_ROUTING_KEY, A.exports.SEMATTRS_MESSAGING_SYSTEM, A.exports.SEMATTRS_MESSAGING_TEMP_DESTINATION, A.exports.SEMATTRS_MESSAGING_URL, A.exports.SEMATTRS_NET_HOST_CARRIER_ICC, A.exports.SEMATTRS_NET_HOST_CARRIER_MCC, A.exports.SEMATTRS_NET_HOST_CARRIER_MNC, A.exports.SEMATTRS_NET_HOST_CARRIER_NAME, A.exports.SEMATTRS_NET_HOST_CONNECTION_SUBTYPE, A.exports.SEMATTRS_NET_HOST_CONNECTION_TYPE, A.exports.SEMATTRS_NET_HOST_IP, A.exports.SEMATTRS_NET_HOST_NAME, A.exports.SEMATTRS_NET_HOST_PORT, A.exports.SEMATTRS_NET_PEER_IP, A.exports.SEMATTRS_NET_PEER_NAME, A.exports.SEMATTRS_NET_PEER_PORT, A.exports.SEMATTRS_NET_TRANSPORT, A.exports.SEMATTRS_PEER_SERVICE, A.exports.SEMATTRS_RPC_GRPC_STATUS_CODE, A.exports.SEMATTRS_RPC_JSONRPC_ERROR_CODE, A.exports.SEMATTRS_RPC_JSONRPC_ERROR_MESSAGE, A.exports.SEMATTRS_RPC_JSONRPC_REQUEST_ID, A.exports.SEMATTRS_RPC_JSONRPC_VERSION, A.exports.SEMATTRS_RPC_METHOD, A.exports.SEMATTRS_RPC_SERVICE, A.exports.SEMATTRS_RPC_SYSTEM, A.exports.SEMATTRS_THREAD_ID, A.exports.SEMATTRS_THREAD_NAME, A.exports.SEMRESATTRS_AWS_ECS_CLUSTER_ARN, A.exports.SEMRESATTRS_AWS_ECS_CONTAINER_ARN, A.exports.SEMRESATTRS_AWS_ECS_LAUNCHTYPE, A.exports.SEMRESATTRS_AWS_ECS_TASK_ARN, A.exports.SEMRESATTRS_AWS_ECS_TASK_FAMILY, A.exports.SEMRESATTRS_AWS_ECS_TASK_REVISION, A.exports.SEMRESATTRS_AWS_EKS_CLUSTER_ARN, A.exports.SEMRESATTRS_AWS_LOG_GROUP_ARNS, A.exports.SEMRESATTRS_AWS_LOG_GROUP_NAMES, A.exports.SEMRESATTRS_AWS_LOG_STREAM_ARNS, A.exports.SEMRESATTRS_AWS_LOG_STREAM_NAMES, A.exports.SEMRESATTRS_CLOUD_ACCOUNT_ID, A.exports.SEMRESATTRS_CLOUD_AVAILABILITY_ZONE, A.exports.SEMRESATTRS_CLOUD_PLATFORM, A.exports.SEMRESATTRS_CLOUD_PROVIDER, A.exports.SEMRESATTRS_CLOUD_REGION, A.exports.SEMRESATTRS_CONTAINER_ID, A.exports.SEMRESATTRS_CONTAINER_IMAGE_NAME, A.exports.SEMRESATTRS_CONTAINER_IMAGE_TAG, A.exports.SEMRESATTRS_CONTAINER_NAME, A.exports.SEMRESATTRS_CONTAINER_RUNTIME, A.exports.SEMRESATTRS_DEPLOYMENT_ENVIRONMENT, A.exports.SEMRESATTRS_DEVICE_ID, A.exports.SEMRESATTRS_DEVICE_MODEL_IDENTIFIER, A.exports.SEMRESATTRS_DEVICE_MODEL_NAME, A.exports.SEMRESATTRS_FAAS_ID, A.exports.SEMRESATTRS_FAAS_INSTANCE, A.exports.SEMRESATTRS_FAAS_MAX_MEMORY, A.exports.SEMRESATTRS_FAAS_NAME, A.exports.SEMRESATTRS_FAAS_VERSION, A.exports.SEMRESATTRS_HOST_ARCH, A.exports.SEMRESATTRS_HOST_ID, A.exports.SEMRESATTRS_HOST_IMAGE_ID, A.exports.SEMRESATTRS_HOST_IMAGE_NAME, A.exports.SEMRESATTRS_HOST_IMAGE_VERSION, A.exports.SEMRESATTRS_HOST_NAME, A.exports.SEMRESATTRS_HOST_TYPE, A.exports.SEMRESATTRS_K8S_CLUSTER_NAME, A.exports.SEMRESATTRS_K8S_CONTAINER_NAME, A.exports.SEMRESATTRS_K8S_CRONJOB_NAME, A.exports.SEMRESATTRS_K8S_CRONJOB_UID, A.exports.SEMRESATTRS_K8S_DAEMONSET_NAME, A.exports.SEMRESATTRS_K8S_DAEMONSET_UID, A.exports.SEMRESATTRS_K8S_DEPLOYMENT_NAME, A.exports.SEMRESATTRS_K8S_DEPLOYMENT_UID, A.exports.SEMRESATTRS_K8S_JOB_NAME, A.exports.SEMRESATTRS_K8S_JOB_UID, A.exports.SEMRESATTRS_K8S_NAMESPACE_NAME, A.exports.SEMRESATTRS_K8S_NODE_NAME, A.exports.SEMRESATTRS_K8S_NODE_UID, A.exports.SEMRESATTRS_K8S_POD_NAME, A.exports.SEMRESATTRS_K8S_POD_UID, A.exports.SEMRESATTRS_K8S_REPLICASET_NAME, A.exports.SEMRESATTRS_K8S_REPLICASET_UID, A.exports.SEMRESATTRS_K8S_STATEFULSET_NAME, A.exports.SEMRESATTRS_K8S_STATEFULSET_UID, A.exports.SEMRESATTRS_OS_DESCRIPTION, A.exports.SEMRESATTRS_OS_NAME, A.exports.SEMRESATTRS_OS_TYPE, A.exports.SEMRESATTRS_OS_VERSION, A.exports.SEMRESATTRS_PROCESS_COMMAND, A.exports.SEMRESATTRS_PROCESS_COMMAND_ARGS, A.exports.SEMRESATTRS_PROCESS_COMMAND_LINE, A.exports.SEMRESATTRS_PROCESS_EXECUTABLE_NAME, A.exports.SEMRESATTRS_PROCESS_EXECUTABLE_PATH, A.exports.SEMRESATTRS_PROCESS_OWNER, A.exports.SEMRESATTRS_PROCESS_PID, A.exports.SEMRESATTRS_PROCESS_RUNTIME_DESCRIPTION, A.exports.SEMRESATTRS_PROCESS_RUNTIME_NAME, A.exports.SEMRESATTRS_PROCESS_RUNTIME_VERSION, A.exports.SEMRESATTRS_SERVICE_INSTANCE_ID, A.exports.SEMRESATTRS_SERVICE_NAME, A.exports.SEMRESATTRS_SERVICE_NAMESPACE, A.exports.SEMRESATTRS_SERVICE_VERSION, A.exports.SEMRESATTRS_TELEMETRY_AUTO_VERSION, A.exports.SEMRESATTRS_TELEMETRY_SDK_LANGUAGE, A.exports.SEMRESATTRS_TELEMETRY_SDK_NAME, A.exports.SEMRESATTRS_TELEMETRY_SDK_VERSION, A.exports.SEMRESATTRS_WEBENGINE_DESCRIPTION, A.exports.SEMRESATTRS_WEBENGINE_NAME, A.exports.SEMRESATTRS_WEBENGINE_VERSION, A.exports.SIGNALR_CONNECTION_STATUS_VALUE_APP_SHUTDOWN, A.exports.SIGNALR_CONNECTION_STATUS_VALUE_NORMAL_CLOSURE, A.exports.SIGNALR_CONNECTION_STATUS_VALUE_TIMEOUT, A.exports.SIGNALR_TRANSPORT_VALUE_LONG_POLLING, A.exports.SIGNALR_TRANSPORT_VALUE_SERVER_SENT_EVENTS, A.exports.SIGNALR_TRANSPORT_VALUE_WEB_SOCKETS, A.exports.SemanticAttributes, A.exports.SemanticResourceAttributes, A.exports.TELEMETRYSDKLANGUAGEVALUES_CPP, A.exports.TELEMETRYSDKLANGUAGEVALUES_DOTNET, A.exports.TELEMETRYSDKLANGUAGEVALUES_ERLANG, A.exports.TELEMETRYSDKLANGUAGEVALUES_GO, A.exports.TELEMETRYSDKLANGUAGEVALUES_JAVA, A.exports.TELEMETRYSDKLANGUAGEVALUES_NODEJS, A.exports.TELEMETRYSDKLANGUAGEVALUES_PHP, A.exports.TELEMETRYSDKLANGUAGEVALUES_PYTHON, A.exports.TELEMETRYSDKLANGUAGEVALUES_RUBY, A.exports.TELEMETRYSDKLANGUAGEVALUES_WEBJS, A.exports.TELEMETRY_SDK_LANGUAGE_VALUE_CPP, A.exports.TELEMETRY_SDK_LANGUAGE_VALUE_DOTNET, A.exports.TELEMETRY_SDK_LANGUAGE_VALUE_ERLANG, A.exports.TELEMETRY_SDK_LANGUAGE_VALUE_GO, A.exports.TELEMETRY_SDK_LANGUAGE_VALUE_JAVA, A.exports.TELEMETRY_SDK_LANGUAGE_VALUE_NODEJS, A.exports.TELEMETRY_SDK_LANGUAGE_VALUE_PHP, A.exports.TELEMETRY_SDK_LANGUAGE_VALUE_PYTHON, A.exports.TELEMETRY_SDK_LANGUAGE_VALUE_RUBY, A.exports.TELEMETRY_SDK_LANGUAGE_VALUE_RUST, A.exports.TELEMETRY_SDK_LANGUAGE_VALUE_SWIFT, A.exports.TELEMETRY_SDK_LANGUAGE_VALUE_WEBJS, A.exports.TelemetrySdkLanguageValues
    }), {})
}